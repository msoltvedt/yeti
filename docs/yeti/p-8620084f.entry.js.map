{"version":3,"names":["YetiMenuButton","this","justMadeASelection","hasCustomButtonContents","handleValueChange","newValue","oldValue","menuButtonChange","emit","handleDefocusingClick","el","querySelectorAll","length","isOpen","closeMenu","handleKeydown","ev","key","toString","toLowerCase","cursorPosition","options","openMenu","preventDefault","value","label","isTouched","toggleMenu","parseChildTags","buttonLabel","querySelector","i","option","item","tagName","optionObject","id","href","hasHTML","optionId","getAttribute","innerText","trim","replace","hasAttribute","childNodes","firstChild","nodeType","div","document","createElement","setAttribute","appendChild","innerHTML","push","j","remove","unwrapButtonContents","wrapper","replaceWith","Array","from","renderMenuItems","items","linkOrButtonElement","listItemId","h","class","role","tabindex","onClick","handleOptionClick","name","isLink","handleActualFocus","facade","focus","handleButtonClick","renderButton","buttonClass","Object","assign","menuId","buttonId","componentWillLoad","elementId","utils","generateUniqueId","componentWillRender","componentDidRender","selector","menu","scrollIntoView","behavior","block","button","menuButtonSelectionMade","render","wrapperCSS","menuClass","tooltipId","menuAlignment","indexOf","buttonType","buttonCSS","menuCSS","text","tooltipText","slotId","tipId","YetiMultiselect","actualId","closeFlyout","shiftKey","altKey","openFlyout","target","classList","contains","click","toggleFlyout","readyToVerifySlow","handleFieldBlur","parseOptionElements","selected","numSelections","getPlaceholderDisplay","placeholder","renderActualOptions","optionsActual","optionActual","iLoveJSX","readyToVerifyFast","handleClearSelections","fieldElement","stopPropagation","optionElements","children","componentId","actualName","facadeId","flyout","hoveredOption","thingToScrollIntoView","cssClasses","flyoutClass","cssClass","isValid","tabIndex","multiple","onFocus","labelledBy","describedBy","title","showClear","map","optionClass"],"sources":["src/components/yeti-menu-button/yeti-menu-button.tsx","src/components/yeti-multiselect/yeti-multiselect.tsx"],"sourcesContent":["import { Component, Prop, h, State, Event, EventEmitter, Element, Listen, Watch } from '@stencil/core';\nimport { utils, YetiMenuButtonOption } from '../../utils/utils';\n\n@Component({\n  tag: 'yeti-menu-button',\n  shadow: false,\n})\nexport class YetiMenuButton {\n\n  @Element() el: HTMLElement;\n\n  @Event({ bubbles: true }) menuButtonChange: EventEmitter;\n\n  @Event({ bubbles: true }) menuButtonSelectionMade: EventEmitter;\n\n  @Prop({ attribute: 'wrapper-class'}) wrapperCSS: string = '';\n\n  @Prop({ attribute: 'button-class'}) buttonCSS: string = '';\n\n  @Prop({ attribute: 'menu-class'}) menuCSS: string = '';\n\n  @Prop({\n    mutable: true,\n    reflect: true\n  }) buttonId: string = \"\";\n\n  @Prop() buttonType?: string = \"\";\n\n  @Prop({\n    mutable: true,\n    reflect: true\n  }) menuId: string = \"\";\n\n  @Prop() tooltipText: string = \"Options\";\n\n  @Prop() menuAlignment: string = \"\";\n\n  @Prop() hasTooltip: boolean = true;\n\n  @Prop({\n    mutable: true,\n    reflect: true\n  }) value: string = '';\n  @Watch('value')\n  handleValueChange(newValue: string, oldValue: string) {\n    this.menuButtonChange.emit({\n      \"newValue\": newValue,\n      \"oldValue\": oldValue\n    });\n  }\n\n  @Prop() labelledBy: string = \"\";\n\n  @Prop() describedBy: string = \"\";\n\n  @State() options: YetiMenuButtonOption[] = [];\n\n  @State() isTouched: boolean = false;\n\n  @State() iLoveJSX: boolean = false;\n\n  @State() isOpen: boolean = false;\n\n  @State() cursorPosition: number = -1;\n\n  private justMadeASelection: boolean = false;\n\n  private hasCustomButtonContents: boolean = false;\n\n\n  @Listen(\"click\", {\n    target: \"body\"\n  })\n  handleDefocusingClick() {\n    if (this.el.querySelectorAll(\":focus\").length == 0 && this.isOpen) {\n      this.closeMenu();\n    }\n  }\n\n\n\n  @Listen(\"keydown\")\n  handleKeydown(ev: KeyboardEvent) {\n\n    let key = ev.key.toString().toLowerCase();\n\n    switch (key) {\n\n      // Handle potential tabout\n      case \"tab\": {\n\n        this.closeMenu();\n        \n        break;\n      }\n\n\n      // Handle down arrow\n      case \"arrowdown\": {\n\n        // Menu is already open, focus on next option.\n        if (this.isOpen) {\n\n          this.cursorPosition = (this.cursorPosition + 1) % this.options.length;\n\n        // Menu isn't open, so open it and focus on the first option.\n        } else {\n          \n          this.cursorPosition = 0;\n          this.openMenu();\n        \n        }\n        \n        ev.preventDefault();\n\n        break;\n      }\n\n\n      // Handle up arrow\n      case \"arrowup\": {\n\n        // Menu is already open, focus on previous option.\n        if (this.isOpen) {\n\n          this.cursorPosition = (this.cursorPosition - 1 + this.options.length) % this.options.length;\n          \n        // Menu isn't open, so open it and focus on the last option.\n        } else {\n\n          this.cursorPosition = this.options.length - 1;\n          this.openMenu();\n\n        }\n        \n        ev.preventDefault();\n\n        break;\n      }\n\n\n      // Handle space, which should open the menu but do nothing else.\n      case \" \": {\n\n        // Check to see if the menu is open.\n        if (!this.isOpen) {\n          this.cursorPosition = 0;\n          this.openMenu();\n        }\n\n        ev.preventDefault();\n\n        break;\n      }\n\n\n      // Handle enter\n      case \"enter\": {\n\n        // Check to see if the menu is open.\n        if (!this.isOpen) {\n          \n          this.openMenu();\n          this.cursorPosition = 0;\n\n          ev.preventDefault();\n        }\n\n        // Menu is already open, so the user just made a selection.\n        else {\n\n          this.value = this.options[this.cursorPosition].label;\n          this.justMadeASelection = true;\n          this.closeMenu();\n          // Note we're not preventing default here, so if the option was a link, that link will still work.\n        \n        }\n\n        break;\n      }\n\n\n      // Home\n      case \"home\": {\n        \n        // If the menu is open then move the cursor to the first option.\n        if (this.isOpen) {\n\n          this.cursorPosition = 0;\n\n        }\n\n        ev.preventDefault();\n\n        break;\n      }\n\n\n      // End\n      case \"end\": {\n        \n        if (this.isOpen) {\n\n          this.cursorPosition = this.options.length - 1;\n\n        }\n\n        ev.preventDefault();\n\n        break;\n      }\n\n    }\n  }\n\n\n\n  openMenu() {\n    this.isOpen = true;\n  }\n\n\n\n  closeMenu() {\n    this.isOpen = false;\n    this.cursorPosition = -1;\n    this.isTouched = true;\n  }\n\n\n\n  toggleMenu() {\n    if (this.isOpen) {\n      this.closeMenu()\n    } else {\n      this.openMenu();\n    }\n  }\n\n\n\n  parseChildTags() {\n\n    let options = this.el.querySelectorAll(\"yeti-menu-button-option\");\n    let buttonLabel = this.el.querySelector(\"yeti-menu-button-contents\");\n\n    this.options = (options && options.length && options.length > 0) ? [] : this.options;\n\n    for (let i = 0; i < options.length; i++) {\n      \n      let option = options.item(i) as Element;\n      \n      // First, confirm this element is indeed a yeti-menu-button-option element.\n      if (option.tagName.toLowerCase() == 'yeti-menu-button-option') {\n\n        let optionObject: YetiMenuButtonOption = {\n          label: \"\",\n          id: \"\",\n          href: \"\",\n          value: \"\",\n          hasHTML: false\n        };\n\n        let optionId = option.getAttribute(\"id\");\n\n        optionObject.id = (optionId && optionId != \"\") ? optionId : `${this.el.getAttribute(\"id\")}_option${i}`;\n        optionObject.label = (option as HTMLElement).innerText.trim().replace(/\\t/g, '');\n        optionObject.label = optionObject.label.replace(/\\n/g, ' ');\n\n        // Check to see if it has a href attribute.\n        if (option.hasAttribute(\"href\") && option.getAttribute(\"href\") != \"\") {\n          optionObject.href = option.getAttribute(\"href\");\n        }\n\n        // Check to see if it's normal or fancy (i.e. has HTML)\n        if (option.childNodes.length != 1 || option.firstChild.nodeType != 3) { // If there's not just a single text node\n\n          optionObject.hasHTML = true;\n\n          // Create a slot element and move all childNodes to it.\n          let div = document.createElement(\"div\");\n          div.setAttribute(\"slot\", optionObject.id);\n\n          while (option.childNodes.length > 0) {\n            div.appendChild(option.childNodes[0]);\n          }\n\n          this.el.appendChild(div);\n\n          optionObject.innerHTML = option.innerHTML;\n          \n        }\n\n        this.options.push(optionObject);\n\n      }\n\n    } // End for\n\n    // Handle the button label (if it exists)\n    if (buttonLabel) {\n      this.hasCustomButtonContents = true;\n      buttonLabel.setAttribute(\"slot\", \"buttonContents\");\n    }\n\n    // Finally, we need to remove the option elements.\n    for (let j = options.length - 1; j >= 0; --j) {\n      options.item(j).remove();\n    }\n\n  }\n\n\n\n  unwrapButtonContents() {\n    let wrapper = this.el.querySelector(\"yeti-menu-button-contents\");\n    if (wrapper) {\n      wrapper.replaceWith(...Array.from(wrapper.childNodes));\n    }\n  }\n\n\n\n  renderMenuItems() {\n    // Creates the <option>s for the actual <select>.\n    let items = [];\n    for (let i=0; i<this.options.length; i++) {\n      // let optionActual = <option value={this.options[i].label} selected={this.options[i].selected}>{this.options[i].label}</option>;\n      // optionsActual.push(optionActual);\n\n      let option = this.options[i];\n      let linkOrButtonElement;\n      let item;\n      //let listItemId = `${option.id}_item${i}`;\n      let listItemId = `${option.id}`;\n\n      // See if it's a link\n      if (option.href) {\n        linkOrButtonElement = <a \n          href={option.href} \n          class=\"yeti-menu_button-menu-item-link\" \n          role=\"menuitem\" \n          tabindex=\"-1\"\n          data-option-index={i}\n          onClick={(ev) => { this.handleOptionClick(i, ev, true) }}>\n            \n            {(option.hasHTML) ? <slot name={option.id}></slot> : option.label}\n            \n        </a>\n      }\n\n      // Nope, it's a button.\n      else {\n        linkOrButtonElement = <button \n          class=\"yeti-menu_button-menu-item-button\" \n          role=\"menuitem\" \n          tabindex=\"-1\"\n          data-option-index={i}\n          onClick={(ev) => { this.handleOptionClick(i, ev) }}>\n\n            {(option.hasHTML) ? <slot name={option.id}></slot> : option.label}\n\n        </button>\n      }\n\n      item = <li \n        class=\"yeti-menu_button-menu-item\" \n        role=\"presentation\"\n        id={listItemId}\n        key={listItemId}\n      >{linkOrButtonElement}</li>\n\n      items.push(item);\n\n    }\n\n    return items;\n  }\n\n\n\n  handleOptionClick(i: number, ev: Event, isLink: boolean = false) {\n\n    this.value = this.options[i].label;\n    this.justMadeASelection = true;\n    this.closeMenu();\n    if (!isLink) {\n      ev.preventDefault();\n    }\n  }\n\n\n\n  handleActualFocus() {\n    let facade = this.el.querySelector(\".yeti-multiselect\") as HTMLElement;\n    if (facade) {\n      facade.focus();\n    }\n  }\n\n\n\n  handleButtonClick(ev: Event) {\n    this.isOpen = !this.isOpen;\n    ev.preventDefault();\n  }\n\n\n\n  renderButton(buttonClass: string) {\n    return <button \n      class={buttonClass}\n      aria-haspopup=\"true\"\n      {...((this.isOpen) ? {\"aria-expanded\": \"true\"} : {})}\n      aria-controls={this.menuId} \n      id={this.buttonId}\n      role=\"button\"\n      onClick={(ev) => {\n        this.handleButtonClick(ev)\n    }}>\n\n      {(this.hasCustomButtonContents) ?\n        <slot name=\"buttonContents\"></slot>\n      :\n        [\n          <span class=\"material-icons\" aria-hidden=\"true\">more_vert</span>,\n          <span class=\"yeti-a11y-hidden\">Options</span>\n        ]\n      }\n    </button>\n  }\n\n\n\n  componentWillLoad() {\n    // Set ids\n    let elementId = this.el.getAttribute(\"id\");\n  \n    if (!elementId || elementId == \"\") {\n\n      this.el.setAttribute(\"id\", utils.generateUniqueId());\n\n    }\n\n    this.buttonId = (this.buttonId != \"\") ? this.buttonId : `${elementId}_button`;\n    this.menuId = (this.menuId != \"\") ? this.menuId : `${elementId}_menu`;\n\n  }\n\n\n\n  componentWillRender() {\n    // Look for and handle any <yeti-menu-button-*> tags.\n    this.parseChildTags();\n  }\n\n\n\n  componentDidRender() {\n\n    // Unwrap button contents, if necessary\n    this.unwrapButtonContents();\n\n    // If the cursor is over an option, make sure it's visible.\n    let selector = '[data-option-index=\"' + this.cursorPosition + '\"';\n    let linkOrButtonElement = this.el.querySelector(selector) as HTMLElement;\n    let menu = this.el.querySelector(\".yeti-menu_button-menu\");\n\n    if (linkOrButtonElement) {\n      \n      linkOrButtonElement.focus();\n\n    }\n\n    if (this.isOpen) {\n\n      menu.scrollIntoView({\n        behavior: \"smooth\",\n        block: \"nearest\"\n      });\n\n    }\n\n    if (this.justMadeASelection) {\n\n      let button = this.el.querySelector('.yeti-menu_button-button') as HTMLElement;\n\n      if (button) {\n\n        button.focus();\n        button.scrollIntoView({\n          behavior: \"smooth\",\n          block: \"nearest\"\n        });\n\n      }\n\n      this.menuButtonSelectionMade.emit({\n        \"value\": this.value\n      });\n\n      this.justMadeASelection = false;\n    }\n\n  }\n\n\n\n  render() {\n\n    let wrapperCSS = 'yeti-menu_button';\n    let buttonClass = 'yeti-menu_button-button';\n    let menuClass = 'yeti-menu_button-menu';\n    let tooltipId = `${this.el.getAttribute(\"id\")}_tooltip`;\n\n    if (this.menuAlignment.indexOf(\"right\") > -1) {\n      wrapperCSS += ' yeti-menu_button-right_aligned';\n    }\n\n    if (this.isOpen) {\n      wrapperCSS += ' yeti-menu_button__open';\n    }\n\n    if (this.buttonType && this.buttonType != \"\") {\n      buttonClass = `${buttonClass} yeti-menu_button-button-mimic ${buttonClass}-${this.buttonType}`;\n    }\n\n    wrapperCSS += (this.wrapperCSS && this.wrapperCSS != \"\") ? \" \" + this.wrapperCSS : \"\";\n    buttonClass += (this.buttonCSS && this.buttonCSS != \"\") ? \" \" + this.buttonCSS : \"\";\n    menuClass += (this.menuCSS && this.menuCSS != \"\") ? \" \" + this.menuCSS : \"\";\n\n    return ([\n      <div class={wrapperCSS}>\n\n        {\n          (this.hasTooltip) ?\n\n            <yeti-tooltip text={this.tooltipText} id={tooltipId} slotId={this.buttonId} tipId={`${this.buttonId}_tooltip`}>\n              {this.renderButton(buttonClass)}\n            </yeti-tooltip>\n\n          :\n\n            this.renderButton(buttonClass)\n        }\n\n        \n        <ul class={menuClass} role=\"menu\" id={this.menuId} aria-labelledby={this.buttonId} key={this.menuId}>\n\n          {this.renderMenuItems()}\n\n        </ul>\n\n      </div>\n    ]);\n  }\n\n}\n","import { Component, Prop, h, State, Event, EventEmitter, Element, Listen } from '@stencil/core';\r\nimport { utils, YetiMultiselectOption } from '../../utils/utils';\r\n\r\n@Component({\r\n  tag: 'yeti-multiselect',\r\n  shadow: false,\r\n})\r\nexport class YetiMultiselect {\r\n\r\n  @Element() el: HTMLElement;\r\n\r\n  @Event({ bubbles: true }) readyToVerifySlow: EventEmitter<CustomEvent>;\r\n\r\n  @Event({ bubbles: true }) readyToVerifyFast: EventEmitter<CustomEvent>;\r\n\r\n  @Prop() cssClass: string = '';\r\n\r\n  @Prop({\r\n    mutable: true,\r\n    reflect: true\r\n  }) facadeId: string = \"\";\r\n\r\n  @Prop({\r\n    mutable: true,\r\n    reflect: true\r\n  }) actualId: string = \"\";\r\n\r\n  @Prop({\r\n    mutable: true,\r\n    reflect: true\r\n  }) actualName: string = this.actualId;\r\n\r\n  @Prop() required: boolean = false;\r\n\r\n  @Prop() menuAlignment: string = \"\";\r\n\r\n  @Prop({\r\n    mutable: true,\r\n    reflect: true\r\n  }) isValid: boolean;\r\n\r\n  @Prop({\r\n    mutable: true,\r\n    reflect: true\r\n  }) value: string = '';\r\n\r\n  @Prop() labelledBy: string = \"\";\r\n\r\n  @Prop() describedBy: string = \"\";\r\n\r\n  @Prop() placeholder: string = \"- Select -\";\r\n\r\n  @Prop() showClear: boolean = true;\r\n\r\n  @State() options: YetiMultiselectOption[] = [];\r\n\r\n  @State() isTouched: boolean = false;\r\n\r\n  @State() numSelections: number = 0;\r\n\r\n  @State() iLoveJSX: boolean = false;\r\n\r\n  @State() isOpen: boolean = false;\r\n\r\n  @State() cursorPosition: number = -1;\r\n\r\n\r\n\r\n  @Listen(\"click\", {\r\n    target: \"body\"\r\n  })\r\n  handleDefocusingClick() {\r\n    if (this.el.querySelectorAll(\":focus\").length == 0 && this.isOpen) {\r\n      this.closeFlyout();\r\n    }\r\n  }\r\n\r\n\r\n\r\n  @Listen(\"keydown\")\r\n  handleKeydown(ev: KeyboardEvent) {\r\n\r\n    let key = ev.key.toString().toLowerCase();\r\n\r\n    switch (key) {\r\n\r\n      // Handle potential tabout\r\n      case \"tab\": {\r\n\r\n        // Normal tab direction\r\n        if (!ev.shiftKey) {\r\n\r\n          if (this.el.querySelectorAll(\".yeti-multiselect:focus\").length == 0) {\r\n            this.closeFlyout();\r\n          }\r\n\r\n        // Shift tab direction (backwards)\r\n        } else {\r\n\r\n          if (this.el.querySelectorAll(\".yeti-multiselect:focus\").length > 0) {\r\n            this.closeFlyout();\r\n          }\r\n\r\n        }\r\n        \r\n        break;\r\n      }\r\n\r\n\r\n      // Handle arrow navigation\r\n      case \"arrowdown\": {\r\n\r\n        if (this.isOpen) {\r\n          this.cursorPosition = (this.cursorPosition + 1) % this.options.length;\r\n          ev.preventDefault();\r\n        } else if (ev.altKey) {\r\n\r\n          this.openFlyout();\r\n          ev.preventDefault();\r\n\r\n        }\r\n\r\n        break;\r\n      }\r\n\r\n\r\n      // Handle arrow navigation\r\n      case \"arrowup\": {\r\n\r\n        if (this.isOpen) {\r\n          this.cursorPosition = (this.cursorPosition - 1 + this.options.length) % this.options.length;\r\n          ev.preventDefault();\r\n        } else if (ev.altKey) {\r\n\r\n          this.openFlyout();\r\n          ev.preventDefault();\r\n\r\n        }\r\n\r\n        break;\r\n      }\r\n\r\n\r\n      // Handle escape navigation\r\n      case \"escape\": {\r\n\r\n        if (this.isOpen) {\r\n          this.closeFlyout();\r\n          ev.preventDefault();\r\n        }\r\n\r\n        break;\r\n      }\r\n\r\n\r\n      // Handle flyout open/close toggling enter/space or selection-making enter/space\r\n      case \"enter\":\r\n      case \" \": {\r\n\r\n        // Check to see if this happened while selecting something.\r\n        ev.preventDefault();\r\n        let target = ev.target as HTMLElement;\r\n\r\n        // First check if the clear everything puck has focus\r\n        if (target.classList.contains(\"yeti-multiselect-puck\")) {\r\n          target.click();\r\n          break;\r\n        } else {\r\n        // Next check if the cursor is on a selection\r\n        \r\n          if (this.cursorPosition >= 0) {\r\n            // Toggle selection on the option at this cursor position.\r\n            this.handleOptionClick(this.cursorPosition);\r\n          } else {\r\n\r\n        // User isn't selecting or activating clear puck, so just toggle the flyout open/close state.\r\n            this.toggleFlyout();\r\n          }\r\n        }\r\n\r\n        break;\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n\r\n\r\n  openFlyout() {\r\n    this.isOpen = true;\r\n  }\r\n\r\n\r\n\r\n  closeFlyout() {\r\n    this.isOpen = false;\r\n    this.cursorPosition = -1;\r\n    this.isTouched = true;\r\n    this.readyToVerifySlow.emit();\r\n  }\r\n\r\n\r\n\r\n  toggleFlyout() {\r\n    if (this.isOpen) {\r\n      this.closeFlyout()\r\n    } else {\r\n      this.openFlyout();\r\n    }\r\n  }\r\n\r\n\r\n\r\n  handleFieldBlur(ev) {\r\n    this.isTouched = true;\r\n    this.readyToVerifySlow.emit(ev);\r\n  }\r\n\r\n\r\n\r\n  parseOptionElements(options: HTMLCollection) {\r\n\r\n    for (let i = 0; i < options.length; i++) {\r\n      \r\n      let option = options.item(i);\r\n      \r\n      // First, confirm this element is indeed a yeti-table-pagination-option element.\r\n      if (option.tagName.toLowerCase() == 'yeti-multiselect-option') {\r\n\r\n        let optionId;\r\n\r\n        if (option.hasAttribute(\"id\")) {\r\n          optionId = option.getAttribute(\"id\");\r\n        } else {\r\n          optionId = `${this.el.getAttribute(\"id\")}_option${i}`;\r\n        }\r\n\r\n        this.options.push({\r\n          selected: option.hasAttribute(\"selected\"),\r\n          label: option.innerHTML,\r\n          id: optionId\r\n        });\r\n\r\n        if (option.hasAttribute(\"selected\")) {\r\n          ++this.numSelections;\r\n        }\r\n\r\n      }\r\n\r\n    } // End for\r\n\r\n    // Finally, we need to remove the option elements.\r\n    for (let j = options.length - 1; j >= 0; --j) {\r\n      options.item(j).remove();\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  getPlaceholderDisplay() {\r\n    // Returns the string of text that should go in the placeholder area.\r\n    switch (this.numSelections) {\r\n\r\n      case 0:\r\n        return this.placeholder;\r\n\r\n      case 1:\r\n        for (let i=0; i < this.options.length; i++) {\r\n          \r\n          if (this.options[i].selected) {\r\n            return this.options[i].label;\r\n          }\r\n\r\n        }\r\n\r\n      default: // Multiple selections\r\n        return `${this.numSelections} selections`;\r\n    }\r\n  }\r\n\r\n\r\n\r\n  renderActualOptions() {\r\n    // Creates the <option>s for the actual <select>.\r\n    let optionsActual = [];\r\n    for (let i=0; i<this.options.length; i++) {\r\n      let optionActual = <option value={this.options[i].label} selected={this.options[i].selected}>{this.options[i].label}</option>;\r\n      optionsActual.push(optionActual);\r\n    }\r\n\r\n    return optionsActual;\r\n  }\r\n\r\n\r\n\r\n  handleOptionClick(i: number) {\r\n    // i = options index\r\n    let newValue = [];\r\n    this.numSelections = (this.options[i].selected) ? --this.numSelections : ++this.numSelections;\r\n    this.options[i].selected = !this.options[i].selected;\r\n    for (let j = 0; j < this.options.length; j++) {\r\n      if (this.options[j].selected) {\r\n        newValue.push(this.options[j].label);\r\n      }\r\n    }\r\n    this.value = newValue.toString();\r\n    this.iLoveJSX = !this.iLoveJSX; // Trigger re-render\r\n    this.readyToVerifyFast.emit();\r\n  }\r\n\r\n\r\n\r\n  handleClearSelections(ev: Event) {\r\n    let fieldElement = this.el.querySelector(\".yeti-multiselect\") as HTMLElement;\r\n    for (let i=0; i<this.options.length; i++) {\r\n      this.options[i].selected = false;\r\n    }\r\n    this.value = \"\";\r\n    this.numSelections = 0;\r\n    fieldElement.focus();\r\n    ev.stopPropagation();\r\n    this.readyToVerifySlow.emit();\r\n    this.readyToVerifyFast.emit();\r\n  }\r\n\r\n\r\n\r\n  handleActualFocus() {\r\n    let facade = this.el.querySelector(\".yeti-multiselect\") as HTMLElement;\r\n    if (facade) {\r\n      facade.focus();\r\n    }\r\n  }\r\n\r\n\r\n\r\n  componentWillLoad() {\r\n    // Set up ids and handle any <yeti-multiselect-option> elements\r\n    let optionElements = this.el.children;\r\n\r\n    // Set up ids\r\n    let componentId = this.el.getAttribute(\"id\");\r\n\r\n    if (!componentId || componentId == \"\") {\r\n      componentId = utils.generateUniqueId();\r\n      this.el.setAttribute(\"id\", componentId);\r\n    }\r\n\r\n    this.actualId = (this.actualId != \"\") ? this.actualId : `${componentId}_actual`;\r\n    this.actualName = this.actualId;\r\n\r\n    this.facadeId = (this.facadeId != \"\") ? this.facadeId : `${componentId}_facade`;\r\n    \r\n\r\n    // Handle any <yeti-multiselect-option> elements\r\n    if (this.el.hasAttribute(\"id\") && this.el.getAttribute(\"id\") != \"\") { \r\n      this.el.getAttribute(\"id\");\r\n    } else {\r\n      this.el.setAttribute(\"id\", utils.generateUniqueId());\r\n    }\r\n\r\n    // Look for and handle any <yeti-multiselect-option> elements.\r\n    if (optionElements.length > 0) {\r\n      \r\n      this.parseOptionElements(optionElements);\r\n\r\n    }\r\n  }\r\n\r\n\r\n\r\n  componentWillRender() {\r\n    if (this.value == \"\") {\r\n      for (let i=0; i<this.options.length; i++) {\r\n        this.options[i].selected = false;\r\n      }\r\n      this.value = \"\";\r\n      this.numSelections = 0;\r\n    }\r\n  }\r\n\r\n\r\n\r\n  componentDidRender() {\r\n    // If the cursor is over an option, make sure it's visible.\r\n    if (this.isOpen) {\r\n      // The facade flyout is open. If one of the options is being hovered over then we want to scroll it into view.\r\n      // If not, then we'll scroll the whole flyout into view.\r\n      let flyout = this.el.querySelector(\".yeti-multiselect-flyout\");\r\n      let hoveredOption = this.el.querySelector(\".yeti-multiselect-option__hover\");\r\n      let thingToScrollIntoView = (hoveredOption) ? hoveredOption : flyout;\r\n      thingToScrollIntoView.scrollIntoView({\r\n        behavior: \"smooth\",\r\n        block: \"nearest\"\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n\r\n    let cssClasses = 'yeti-multiselect';\r\n    let flyoutClass = 'yeti-multiselect-flyout';\r\n\r\n    if (this.cssClass != '') {\r\n      cssClasses += ' ' + this.cssClass;\r\n    }\r\n\r\n    if (this.isValid == false) {\r\n      cssClasses += ' yeti-multiselect__error';\r\n    }\r\n\r\n    flyoutClass += (this.isOpen) ? \" yeti-multiselect-flyout__open\" : \"\";\r\n\r\n    if (this.menuAlignment == \"right\") {\r\n      flyoutClass += ' yeti-multiselect-flyout-align-right'\r\n    }\r\n\r\n    return ([\r\n      <div class=\"yeti-multiselect-wrapper\">\r\n\r\n        <select\r\n          tabIndex={-1}\r\n          class=\"yeti-multiselect-actual yeti-a11y-hidden\"\r\n          multiple={true}\r\n          id={this.actualId}\r\n          name={this.actualName}\r\n          onFocus={() => {this.handleActualFocus()}}\r\n          {...((!this.isValid) ? {\"aria-invalid\": true} : {})}\r\n          {...((this.labelledBy != \"\") ? {\"aria-labelledby\": this.labelledBy} : {})}\r\n          {...((this.describedBy != \"\") ? {\"aria-describedby\": this.describedBy} : {})}\r\n        >\r\n          \r\n          {this.renderActualOptions()}\r\n\r\n        </select>\r\n\r\n        <div \r\n          tabIndex={0}\r\n          class={cssClasses}\r\n          onClick={() => {\r\n            this.isOpen = !this.isOpen;\r\n          }}\r\n          onFocus={() => {\r\n            this.isTouched = true;\r\n          }}\r\n          aria-hidden=\"true\"\r\n        >\r\n\r\n          <span class=\"yeti-multiselect-placeholder\" title={this.getPlaceholderDisplay()}>{this.getPlaceholderDisplay()}</span>\r\n\r\n          { (this.showClear && this.numSelections > 0) ? \r\n\r\n            (<button class=\"yeti-multiselect-puck\" title=\"Clear all selections\" onClick={ (ev) => { this.handleClearSelections(ev); ev.preventDefault() }}>\r\n              <span class=\"material-icons yeti-multiselect-puck-icon\" aria-hidden=\"true\">cancel</span>\r\n            </button>)\r\n\r\n          :\r\n\r\n            \"\"\r\n\r\n          }\r\n\r\n        </div>\r\n\r\n        \r\n        <div class={flyoutClass} aria-hidden=\"true\">\r\n        \r\n          <ul\r\n            class=\"yeti-multiselect-options\"\r\n            id={this.facadeId}\r\n          >\r\n\r\n            {this.options.map((option, i) => {\r\n\r\n                let optionClass = (this.cursorPosition == i) ? \"yeti-multiselect-option yeti-multiselect-option__hover\" : \"yeti-multiselect-option\";\r\n              \r\n                return (\r\n                  <li id={option.id} key={option.id}>\r\n                    <button class={optionClass} tabIndex={-1} onClick={(ev) => { this.handleOptionClick(i); ev.preventDefault(); }}>\r\n                      <span class=\"yeti-multiselect-option-checkbox\">\r\n                        <span class=\"material-icons\">{(option.selected) ? \"check_box\" : \"check_box_outline_blank\"}</span>\r\n                      </span>\r\n                      <span class=\"yeti-multiselect-option-label\">{option.label}</span>\r\n                    </button>\r\n                  </li>\r\n                )\r\n              }\r\n            \r\n            )}\r\n\r\n          </ul>\r\n\r\n        </div>\r\n\r\n      </div>\r\n    ]);\r\n  }\r\n\r\n}"],"mappings":"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"}