{"version":3,"names":["YetiFileExplorer","constructor","hostRef","this","wrapperClass","showFiles","minimumDisplayDepth","path","name","content","displayPath","isFolder","isRoot","isSelected","isLoading","selectedIndex","offset","pageSize","totalElements","id","utils","generateUniqueId","type","iLoveJSX","handlePathChange","handleItemClick","depth","index","serverPathStringToClickedFolder","displayPathStringToClickedFolder","length","pop","forEach","val","fileExplorerChange","emit","handleItemKeyDown","event","htmlElement","target","grandParentULElement","closest","siblingElements","querySelectorAll","indexOfSiblingToFocus","siblingToFocus","key","toLowerCase","preventDefault","focus","indexOfAncestor","el","scrollIntoView","behavior","block","inline","newFolderObject","folder","undefined","renderFolders","folders","emptyFolder","push","renderFolder","loadingJsx","h","class","isInline","isActive","jsx","renderFolderContents","map","item","renderItem","buttonCSS","onClick","onKeyDown","e","iconCode","alt","render","componentDidRender","foldersElement","querySelector"],"sources":["src/components/yeti-file-explorer/yeti-file-explorer.tsx"],"sourcesContent":["import { Component, Prop, h, State, Element, Event, EventEmitter, Method, Watch } from '@stencil/core';\r\nimport { YetiFileSystemItem, utils } from '../../utils/utils';\r\n\r\n@Component({\r\n  tag: 'yeti-file-explorer',\r\n  shadow: false,\r\n})\r\nexport class YetiFileExplorer {\r\n\r\n  /**\r\n   * Fires when the user clicks a folder\r\n   */\r\n  @Event() fileExplorerChange: EventEmitter;\r\n\r\n  @Element() el: HTMLElement;\r\n\r\n  /**\r\n   * CSS classlist applied to the explorer wrapper element.\r\n   */\r\n  @Prop() wrapperClass?: string = '';\r\n\r\n  /**\r\n   * Whether or not to show files (folders are always shown).\r\n   */\r\n  @Prop() showFiles: boolean = true;\r\n\r\n  /**\r\n   * minimum number of folder layers to show\r\n   */\r\n  @Prop() minimumDisplayDepth: number = 3;\r\n\r\n  /**\r\n   * All the displayed folders in order from root to terminus\r\n   */\r\n  @Prop({ mutable: true }) path: YetiFileSystemItem[] = \r\n  [\r\n    {\r\n      name: \"root\",\r\n      content: [],\r\n      path: \"\",\r\n      displayPath: \"\",\r\n      isFolder: true,\r\n      isRoot: true,\r\n      isSelected: true,\r\n      isLoading: false,\r\n      selectedIndex: -1,\r\n      offset: 0,\r\n      pageSize: 1000,\r\n      totalElements: 0,\r\n      id: utils.generateUniqueId(),\r\n      type: \"folder\"\r\n    }\r\n  ];\r\n\r\n\r\n\r\n  @Watch(\"path\")\r\n  handlePathChange() {\r\n    // TODO: validate the incoming path variable\r\n  }\r\n\r\n  /**\r\n   * Toggle to trigger a re-render of the whole component.\r\n   */\r\n  @State() iLoveJSX: boolean = false;\r\n\r\n\r\n\r\n  handleItemClick(depth: number = 0, index: number = 0) {\r\n    // A folder or file was just clicked. Handle it.\r\n    let serverPathStringToClickedFolder = \"\"; // This will be the term by which the server identifies this folder\r\n    let displayPathStringToClickedFolder = \"\"; // This will be the user-readable version of the path\r\n    \r\n    // If necessary, prune any folders that would be to the right of this.\r\n    while (this.path.length > depth + 1) {\r\n      this.path.pop();\r\n    }\r\n\r\n    // (Re)set the isSelected state for this folder and its sibling\r\n    this.path[depth].content.forEach((val) => {\r\n      val.isSelected = false;\r\n    })\r\n\r\n    // Update the path at this depth\r\n    this.path[depth].isSelected = true;\r\n    this.path[depth].selectedIndex = index;\r\n\r\n    // Derive the server and display paths to this folder\r\n    serverPathStringToClickedFolder += this.path[depth].content[index].path;\r\n    displayPathStringToClickedFolder += this.path[depth].content[index].displayPath;\r\n\r\n    // Fire the change event so the component consumer can provide new data\r\n    this.fileExplorerChange.emit({\r\n      \"path\": serverPathStringToClickedFolder,\r\n      \"displayPath\": displayPathStringToClickedFolder,\r\n      \"depth\": depth,\r\n      \"index\": index\r\n    });\r\n    \r\n  }\r\n\r\n\r\n\r\n  handleItemKeyDown(event: KeyboardEvent, depth: number = 0, index: number = 0) {\r\n    // A folder or file was just clicked. Handle it.\r\n    \r\n    let htmlElement = event.target as HTMLElement;\r\n    let grandParentULElement = htmlElement.closest(\".yeti-file_explorer-folder-items\");\r\n    let siblingElements = grandParentULElement.querySelectorAll(\".yeti-file_explorer-folder-item .yeti-file_explorer-folder-item-wrapper\");\r\n    let indexOfSiblingToFocus;\r\n    let siblingToFocus;\r\n    let key = event.key.toLowerCase();\r\n    \r\n    switch (key) {\r\n\r\n      case \"arrowdown\": {\r\n        event.preventDefault();\r\n        indexOfSiblingToFocus = (index+1 >= this.path[depth].content.length)  ?  0  :  index + 1;\r\n        siblingToFocus = siblingElements[indexOfSiblingToFocus] as HTMLElement;\r\n        siblingToFocus.focus();\r\n        break;\r\n      }\r\n\r\n      case \"arrowup\": {\r\n        event.preventDefault();\r\n        indexOfSiblingToFocus = (index-1 < 0)  ?  this.path[depth].content.length - 1  :  index - 1;\r\n        siblingToFocus = siblingElements[indexOfSiblingToFocus] as HTMLElement;\r\n        siblingToFocus.focus();\r\n        break;\r\n      }\r\n\r\n\r\n      case \"arrowright\": {\r\n        \r\n        if (this.path[depth+1] && this.path[depth+1].content && this.path[depth+1].content.length > 0) {\r\n\r\n          let indexOfAncestor = (this.path[depth+1].selectedIndex > 0) ? this.path[depth+1].selectedIndex : 0;\r\n\r\n          event.preventDefault();\r\n          // Find the first button in the next column over and focus on it\r\n          siblingToFocus = (this.el.querySelectorAll(\".yeti-file_explorer-folder-items\")[depth+1].querySelectorAll(\".yeti-file_explorer-folder-item .yeti-file_explorer-folder-item-wrapper\")[indexOfAncestor] as HTMLElement);\r\n          siblingToFocus.focus();\r\n          siblingToFocus.scrollIntoView({\r\n            behavior: \"smooth\",\r\n            block: \"nearest\",\r\n            inline: \"nearest\"\r\n          });\r\n\r\n        }\r\n\r\n        break;\r\n      }\r\n\r\n\r\n      case \"arrowleft\": {\r\n\r\n        if (depth > 0) {\r\n\r\n          let indexOfAncestor = this.path[depth-1].selectedIndex;\r\n\r\n          event.preventDefault();\r\n          // Focus on the item in the previous column that's in the path\r\n          siblingToFocus = (this.el.querySelectorAll(\".yeti-file_explorer-folder-items\")[depth-1].querySelectorAll(\".yeti-file_explorer-folder-item .yeti-file_explorer-folder-item-wrapper\")[indexOfAncestor] as HTMLElement)\r\n          siblingToFocus.focus();\r\n          siblingToFocus.scrollIntoView({\r\n            behavior: \"smooth\",\r\n            block: \"nearest\",\r\n            inline: \"nearest\"\r\n          });\r\n\r\n        }\r\n\r\n        break;\r\n\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n\r\n\r\n  @Method()\r\n  async newFolderObject() {\r\n    let folder: YetiFileSystemItem = {\r\n      content: [],\r\n      name: undefined,\r\n      path: undefined,\r\n      displayPath: undefined,\r\n      isFolder: true,\r\n      isRoot: false,\r\n      isLoading: false,\r\n      isSelected: false,\r\n      selectedIndex: -1,\r\n      id: utils.generateUniqueId()\r\n    };\r\n    return folder;\r\n  }\r\n\r\n\r\n\r\n  renderFolders() {\r\n    // Render all the displayed folders for the currently selected path.\r\n    let folders = [];\r\n    let emptyFolder: YetiFileSystemItem = {\r\n      name: \"\",\r\n      path: \"/\",\r\n      displayPath: \"\",\r\n      content: [],\r\n      selectedIndex: -1,\r\n      isRoot: false,\r\n      isSelected: false,\r\n      isLoading: false\r\n    }\r\n\r\n    // Loop through the path and render each folder in it\r\n    this.path.forEach((folder, index) => {\r\n      folders.push(this.renderFolder(folder, index));\r\n    });\r\n\r\n    while (folders.length < this.minimumDisplayDepth) {\r\n      folders.push(this.renderFolder(emptyFolder, -1));\r\n    }\r\n\r\n    return folders;\r\n  }\r\n\r\n\r\n\r\n  renderFolder(folder: YetiFileSystemItem, depth) {\r\n\r\n    // We have two possibilities here. Either the item is in a normal or loading state. We want to return the applicable JSX based on that state.\r\n    \r\n    // Loading state\r\n    let loadingJsx =\r\n\r\n    <div class=\"yeti-file_explorer-folder\">\r\n\r\n      <ul class=\"yeti-file_explorer-folder-items\">\r\n\r\n        <li class=\"yeti-file_explorer-folder-item\"><yeti-loading isInline={true} isActive={true}></yeti-loading></li>\r\n\r\n      </ul>\r\n\r\n    </div>;\r\n\r\n\r\n    // Normal (not Loading) state\r\n    let jsx =\r\n\r\n      <div class=\"yeti-file_explorer-folder\">\r\n\r\n        <ul class=\"yeti-file_explorer-folder-items\">\r\n\r\n          {this.renderFolderContents(folder, depth)}\r\n\r\n        </ul>\r\n\r\n      </div>;\r\n\r\n\r\n    return (folder.isLoading) ? loadingJsx : jsx;\r\n      \r\n  }\r\n\r\n\r\n\r\n  renderFolderContents(folder: YetiFileSystemItem, depth: number = -1) {\r\n\r\n    return folder.content.map((item, index) => {\r\n      return this.renderItem(item, depth, index);\r\n    });\r\n\r\n  }\r\n\r\n\r\n\r\n  renderItem(item: YetiFileSystemItem, depth: number = -1, index: number = -1) {\r\n\r\n    let buttonCSS = \"yeti-file_explorer-folder-item-wrapper\" + ((item.isSelected) ? \" yeti-file_explorer-folder-item-wrapper__selected\" : \"\");\r\n    \r\n    let jsx = \r\n\r\n      <li class=\"yeti-file_explorer-folder-item\">\r\n\r\n          <button class={buttonCSS} onClick={() => { this.handleItemClick(depth, index); }} data-path={item.path} onKeyDown={(e) => { this.handleItemKeyDown(e, depth, index); }}>\r\n\r\n              <yeti-icon iconCode=\"folder\" alt=\"subfolder\" icon-style=\"outlined\" class=\"yeti-file_explorer-folder-item-icon\"></yeti-icon>\r\n            \r\n              <span class=\"yeti-file_explorer-folder-item-name\">{item.name}</span>\r\n\r\n              <yeti-icon iconCode=\"chevron_right\" alt=\"open subfolder\" class=\"yeti-file_explorer-folder-more\"></yeti-icon>\r\n        \r\n          </button>\r\n\r\n      </li>;\r\n\r\n    return jsx;\r\n\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n\r\n    let wrapperClass = 'yeti-file_explorer-wrapper';\r\n\r\n    wrapperClass += (this.wrapperClass != '') ? ` ${this.wrapperClass}` : '';\r\n\r\n    return (\r\n\r\n      <div class={wrapperClass}>\r\n\r\n        <div class=\"yeti-file_explorer\">\r\n\r\n          <div class=\"yeti-file_explorer-folders\">\r\n\r\n            {this.renderFolders()}\r\n\r\n          </div>{/* /folders */}\r\n\r\n        </div>{/* /file_explorer */}\r\n\r\n      \r\n        <div class=\"yeti-file_explorer-path\">{this.path[ this.path.length - 1 ].displayPath}</div>\r\n\r\n      </div>\r\n\r\n    );\r\n  }\r\n\r\n\r\n\r\n  componentDidRender() {\r\n    // Scroll the last folder into view\r\n    let foldersElement = this.el.querySelector(\".yeti-file_explorer-folders\");\r\n\r\n    if (foldersElement) {\r\n\r\n      foldersElement.scrollIntoView({\r\n        behavior: \"smooth\",\r\n        block: \"start\",\r\n        inline: \"end\"\r\n      });\r\n\r\n    }\r\n  }\r\n\r\n}"],"mappings":"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","ignoreList":[]}