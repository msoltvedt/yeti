{"file":"yeti-accordion-section.entry.esm.js","mappings":"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","names":[],"sources":["src/components/yeti-accordion-section/yeti-accordion-section.tsx"],"sourcesContent":["import { Component, Prop, h, State, Element, Event, EventEmitter } from '@stencil/core';\r\nimport { utils } from '../../utils/utils';\r\n\r\n@Component({\r\n  tag: 'yeti-accordion-section',\r\n  shadow: false,\r\n})\r\nexport class YetiAccordionSection {\r\n\r\n  @Element() el: HTMLElement;\r\n\r\n  @Event() accordionActionClick: EventEmitter;\r\n\r\n  @Event() accordionSectionHeaderClick: EventEmitter;\r\n\r\n  /**\r\n   * The descriptive text that appears in the heading bar above the content.\r\n   */\r\n  @Prop({\r\n    mutable: true,\r\n    reflect: true\r\n  }) heading: string = 'Heading';\r\n\r\n  /**\r\n   * Whether or not to automatically number the section headings\r\n   */\r\n  @Prop({\r\n    mutable: true,\r\n    reflect: true\r\n  }) isNumbered: boolean = true;\r\n\r\n  /**\r\n   * The 0-based index of this section relative to its peers. This should only be set by the parent Accordion component.\r\n   */\r\n  @Prop({\r\n    mutable: true,\r\n    reflect: true\r\n  }) index: number = 0;\r\n\r\n  /**\r\n   * The total number of sections the parent Accordion has. Should only be set by the parent.\r\n   */\r\n  @Prop({\r\n    mutable: true,\r\n    reflect: true\r\n  }) of: number = 1;\r\n\r\n  /**\r\n   * Whether the panel is open or not.\r\n   */\r\n  @Prop({\r\n    mutable: true,\r\n    reflect: true\r\n  }) isOpen: boolean = (this.index == 0);\r\n\r\n  /**\r\n   * Whether the panel is openable or not.\r\n   */\r\n  @Prop({\r\n    mutable: true,\r\n    reflect: true\r\n  }) isOpenable: boolean = (this.index == 0);\r\n\r\n  /**\r\n   * Whether the panel is a step in a wizard or not. This should be set by the parent Accordion component.\r\n   */\r\n  @Prop({\r\n    mutable: true,\r\n    reflect: true\r\n  }) isInWizard: boolean = false;\r\n\r\n  /**\r\n   * Whether the consumer supplied buttons or not. Let the component set this.\r\n   */\r\n  @Prop({\r\n    mutable: true,\r\n    reflect: true\r\n  }) hasActions: boolean = false;\r\n\r\n  /**\r\n   * The panel's status: can be \"success\", \"error\", \"reachable\", or \"undefined\".\r\n   */\r\n  @Prop({\r\n    mutable: true,\r\n    reflect: true\r\n  }) status: string = \"undefined\";\r\n\r\n  /**\r\n   * The heading button's HTML id.\r\n   */\r\n  @Prop() headingId: string = utils.generateUniqueId();\r\n\r\n  /**\r\n   * The section's HTML id.\r\n   */\r\n  @Prop() sectionId: string = utils.generateUniqueId();\r\n\r\n  /**\r\n   * Used to toggle a re-render of the icon.\r\n   */\r\n  @State() iLoveJSX: boolean = false;\r\n\r\n\r\n\r\n  handleSectionClick(e) {\r\n    e.preventDefault();\r\n    e.stopImmediatePropagation();\r\n    this.accordionSectionHeaderClick.emit({\r\n      \"originalEvent\": e,\r\n      \"section\": this.el,\r\n      \"sectionIndex\": this.index,\r\n      \"sectionStatus\": this.status,\r\n      \"isOpen\": this.isOpen\r\n    });\r\n  }\r\n\r\n\r\n\r\n  handleActionClick(e, actionType) {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    this.accordionActionClick.emit({\r\n      \"originalEvent\": e,\r\n      \"section\": this.el,\r\n      \"sectionIndex\": this.index,\r\n      \"sectionStatus\": this.status,\r\n      \"actionType\": actionType\r\n    });\r\n  }\r\n\r\n\r\n\r\n  renderStatusIcon() {\r\n    switch (this.status) {\r\n\r\n      case \"success\": {\r\n        return <yeti-icon iconCode='check_circle' alt='complete' iconClass='yeti-accordion-section-status_icon yeti-accordion-section-status_icon-success'></yeti-icon>\r\n      }\r\n\r\n      case \"error\": {\r\n        return <yeti-icon iconCode='error' alt='error' iconClass='yeti-accordion-section-status_icon yeti-accordion-section-status_icon-error'></yeti-icon>\r\n      }\r\n\r\n      default: return \"\";\r\n\r\n    }\r\n  }\r\n\r\n\r\n\r\n  renderActions() {\r\n    // Render the action buttons for a section.\r\n\r\n    // Use the user's content if provided...\r\n    if (this.hasActions) {\r\n\r\n      return <slot name=\"actions\"></slot>\r\n\r\n    // ...otherwise automatically create our own.\r\n    } else {\r\n\r\n      let actions = [];\r\n\r\n      // Previous\r\n      if (this.index != 0) {\r\n        actions.push(\r\n          \r\n          <li>\r\n            <button \r\n              class=\"yeti-button yeti-button-secondary yeti-button-size-s\" \r\n              onClick={(e) => {this.handleActionClick(e, \"previous\")}}\r\n            >\r\n              <yeti-icon iconCode='navigate_before' alt=\"\" iconClass='yeti-accordion-action-button-icon' />Previous\r\n            </button>\r\n          </li>\r\n\r\n        );\r\n      }\r\n      \r\n      // Next\r\n      if (this.index  <  this.of - 1) {\r\n        actions.push(\r\n          \r\n          <li>\r\n            <button \r\n              class=\"yeti-button yeti-button-primary yeti-button-size-s\" \r\n              onClick={(e) => {this.handleActionClick(e, \"next\")}}\r\n              {...((this.isInWizard && this.status != \"success\") ? {\"disabled\": true, \"tabIndex\": -1} : {})}\r\n            >\r\n              Next<yeti-icon iconCode='navigate_next' alt=\"\" iconClass='yeti-accordion-action-button-icon' />\r\n            </button>\r\n          </li>\r\n\r\n        );\r\n      }\r\n\r\n      // Cancel\r\n      actions.push(\r\n        <li><button class=\"yeti-button yeti-button-ghost yeti-button-size-s\" onClick={(e) => {this.handleActionClick(e, \"cancel\")}}>Cancel</button></li>\r\n      );\r\n\r\n\r\n      return <ul class=\"yeti-button-group\">{actions}</ul>;\r\n      \r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  componentWillLoad() {\r\n    \r\n    let potentialActionsSlot = this.el.querySelector('[slot=\"actions\"]');\r\n\r\n    // User supplied actions, see if they marked them with an accordion-action attribute.\r\n    if (potentialActionsSlot) {\r\n      let elementsTaggedAsActions = potentialActionsSlot.querySelectorAll('[accordion-action]');\r\n      this.hasActions = true;\r\n\r\n      elementsTaggedAsActions.forEach((element) => {\r\n        element.addEventListener(\"click\", (e) => {\r\n          this.handleActionClick(e, element.getAttribute(\"accordion-action\"));\r\n        });\r\n      });\r\n\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n\r\n    let wrapperCSS = 'yeti-accordion-section';\r\n    wrapperCSS += (this.isOpen) ? ' yeti-accordion-section__open' : '';\r\n\r\n    return (\r\n\r\n        <div class={wrapperCSS}>\r\n\r\n          <button \r\n            id={this.headingId}\r\n            class=\"yeti-accordion-section-heading\"\r\n            onClick={(e) => { this.handleSectionClick(e); }}\r\n            aria-expanded={`${this.isOpen}`}\r\n            aria-controls={this.sectionId}\r\n            {...(!this.isOpenable ? {\"disabled\": true, \"tabIndex\": -1} : {})}\r\n          >\r\n\r\n            <div class='yeti-accordion-section-heading-contents'>\r\n\r\n              {(this.isOpen) ?\r\n              \r\n                <yeti-icon iconCode='expand_less' alt='' iconClass='yeti-accordion-section-heading-caret'></yeti-icon>\r\n\r\n              :\r\n\r\n                <yeti-icon iconCode='expand_more' alt='' iconClass='yeti-accordion-section-heading-caret'></yeti-icon>\r\n\r\n              }\r\n\r\n              \r\n              <div class=\"yeti-accordion-section-heading-actual\">\r\n\r\n                {(this.isNumbered) ? (this.index + 1) : \"\"} {this.heading}\r\n                \r\n              </div>\r\n\r\n\r\n              {this.renderStatusIcon()}\r\n\r\n\r\n            </div>\r\n\r\n          </button>\r\n\r\n          \r\n          <div \r\n            id={this.sectionId}\r\n            class=\"yeti-accordion-section-content\"\r\n            role=\"region\"\r\n            aria-labelledby={this.headingId}\r\n          >\r\n\r\n            <slot name=\"content\" />\r\n\r\n          </div>\r\n\r\n\r\n          <div class=\"yeti-accordion-section-actions\">\r\n\r\n            {this.renderActions()}\r\n          \r\n          </div>\r\n\r\n\r\n        </div>\r\n\r\n    );\r\n  }\r\n\r\n}"],"version":3}