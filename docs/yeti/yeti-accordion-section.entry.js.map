{"file":"yeti-accordion-section.entry.esm.js","mappings":"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","names":[],"sources":["src/components/yeti-accordion-section/yeti-accordion-section.tsx"],"sourcesContent":["import { Component, Prop, h, State, Element, Event, EventEmitter } from '@stencil/core';\nimport { utils } from '../../utils/utils';\n\n@Component({\n  tag: 'yeti-accordion-section',\n  shadow: false,\n})\nexport class YetiAccordionSection {\n\n  @Element() el: HTMLElement;\n\n  @Event() accordionActionClick: EventEmitter;\n\n  @Event() accordionSectionHeaderClick: EventEmitter;\n\n  /**\n   * The descriptive text that appears in the heading bar above the content.\n   */\n  @Prop({\n    mutable: true,\n    reflect: true\n  }) heading: string = 'Heading';\n\n  /**\n   * Whether or not to automatically number the section headings\n   */\n  @Prop({\n    mutable: true,\n    reflect: true\n  }) isNumbered: boolean = true;\n\n  /**\n   * The 0-based index of this section relative to its peers. This should only be set by the parent Accordion component.\n   */\n  @Prop({\n    mutable: true,\n    reflect: true\n  }) index: number = 0;\n\n  /**\n   * The total number of sections the parent Accordion has. Should only be set by the parent.\n   */\n  @Prop({\n    mutable: true,\n    reflect: true\n  }) of: number = 1;\n\n  /**\n   * Whether the panel is open or not.\n   */\n  @Prop({\n    mutable: true,\n    reflect: true\n  }) isOpen: boolean = (this.index == 0);\n\n  /**\n   * Whether the panel is openable or not.\n   */\n  @Prop({\n    mutable: true,\n    reflect: true\n  }) isOpenable: boolean = (this.index == 0);\n\n  /**\n   * Whether the panel is a step in a wizard or not. This should be set by the parent Accordion component.\n   */\n  @Prop({\n    mutable: true,\n    reflect: true\n  }) isInWizard: boolean = false;\n\n  /**\n   * Whether the consumer supplied buttons or not. Let the component set this.\n   */\n  @Prop({\n    mutable: true,\n    reflect: true\n  }) hasActions: boolean = false;\n\n  /**\n   * The panel's status: can be \"success\", \"error\", \"reachable\", or \"undefined\".\n   */\n  @Prop({\n    mutable: true,\n    reflect: true\n  }) status: string = \"undefined\";\n\n  /**\n   * The heading button's HTML id.\n   */\n  @Prop() headingId: string = utils.generateUniqueId();\n\n  /**\n   * The section's HTML id.\n   */\n  @Prop() sectionId: string = utils.generateUniqueId();\n\n  /**\n   * Used to toggle a re-render of the icon.\n   */\n  @State() iLoveJSX: boolean = false;\n\n\n\n  handleSectionClick(e) {\n    e.preventDefault();\n    e.stopImmediatePropagation();\n    this.accordionSectionHeaderClick.emit({\n      \"originalEvent\": e,\n      \"section\": this.el,\n      \"sectionIndex\": this.index,\n      \"sectionStatus\": this.status,\n      \"isOpen\": this.isOpen\n    });\n  }\n\n\n\n  handleActionClick(e, actionType) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.accordionActionClick.emit({\n      \"originalEvent\": e,\n      \"section\": this.el,\n      \"sectionIndex\": this.index,\n      \"sectionStatus\": this.status,\n      \"actionType\": actionType\n    });\n  }\n\n\n\n  renderStatusIcon() {\n    switch (this.status) {\n\n      case \"success\": {\n        return <yeti-icon iconCode='check_circle' alt='complete' iconClass='yeti-accordion-section-status_icon yeti-accordion-section-status_icon-success'></yeti-icon>\n      }\n\n      case \"error\": {\n        return <yeti-icon iconCode='error' alt='error' iconClass='yeti-accordion-section-status_icon yeti-accordion-section-status_icon-error'></yeti-icon>\n      }\n\n      default: return \"\";\n\n    }\n  }\n\n\n\n  renderActions() {\n    // Render the action buttons for a section.\n\n    // Use the user's content if provided...\n    if (this.hasActions) {\n\n      return <slot name=\"actions\"></slot>\n\n    // ...otherwise automatically create our own.\n    } else {\n\n      let actions = [];\n\n      // Previous\n      if (this.index != 0) {\n        actions.push(\n          \n          <li>\n            <button \n              class=\"yeti-button yeti-button-secondary yeti-button-size-s\" \n              onClick={(e) => {this.handleActionClick(e, \"previous\")}}\n            >\n              <yeti-icon iconCode='navigate_before' alt=\"\" iconClass='yeti-accordion-action-button-icon' />Previous\n            </button>\n          </li>\n\n        );\n      }\n      \n      // Next\n      if (this.index  <  this.of - 1) {\n        actions.push(\n          \n          <li>\n            <button \n              class=\"yeti-button yeti-button-primary yeti-button-size-s\" \n              onClick={(e) => {this.handleActionClick(e, \"next\")}}\n              {...((this.isInWizard && this.status != \"success\") ? {\"disabled\": true, \"tabIndex\": -1} : {})}\n            >\n              Next<yeti-icon iconCode='navigate_next' alt=\"\" iconClass='yeti-accordion-action-button-icon' />\n            </button>\n          </li>\n\n        );\n      }\n\n      // Cancel\n      actions.push(\n        <li><button class=\"yeti-button yeti-button-ghost yeti-button-size-s\" onClick={(e) => {this.handleActionClick(e, \"cancel\")}}>Cancel</button></li>\n      );\n\n\n      return <ul class=\"yeti-button-group\">{actions}</ul>;\n      \n    }\n\n  }\n\n\n\n  componentWillLoad() {\n    \n    let potentialActionsSlot = this.el.querySelector('[slot=\"actions\"]');\n\n    // User supplied actions, see if they marked them with an accordion-action attribute.\n    if (potentialActionsSlot) {\n      let elementsTaggedAsActions = potentialActionsSlot.querySelectorAll('[accordion-action]');\n      this.hasActions = true;\n\n      elementsTaggedAsActions.forEach((element) => {\n        element.addEventListener(\"click\", (e) => {\n          this.handleActionClick(e, element.getAttribute(\"accordion-action\"));\n        });\n      });\n\n    }\n\n  }\n\n\n\n  render() {\n\n    let wrapperCSS = 'yeti-accordion-section';\n    wrapperCSS += (this.isOpen) ? ' yeti-accordion-section__open' : '';\n\n    return (\n\n        <div class={wrapperCSS}>\n\n          <button \n            id={this.headingId}\n            class=\"yeti-accordion-section-heading\"\n            onClick={(e) => { this.handleSectionClick(e); }}\n            aria-expanded={`${this.isOpen}`}\n            aria-controls={this.sectionId}\n            {...(!this.isOpenable ? {\"disabled\": true, \"tabIndex\": -1} : {})}\n          >\n\n            <div class='yeti-accordion-section-heading-contents'>\n\n              {(this.isOpen) ?\n              \n                <yeti-icon iconCode='expand_less' alt='' iconClass='yeti-accordion-section-heading-caret'></yeti-icon>\n\n              :\n\n                <yeti-icon iconCode='expand_more' alt='' iconClass='yeti-accordion-section-heading-caret'></yeti-icon>\n\n              }\n\n              \n              <div class=\"yeti-accordion-section-heading-actual\">\n\n                {(this.isNumbered) ? (this.index + 1) : \"\"} {this.heading}\n                \n              </div>\n\n\n              {this.renderStatusIcon()}\n\n\n            </div>\n\n          </button>\n\n          \n          <div \n            id={this.sectionId}\n            class=\"yeti-accordion-section-content\"\n            role=\"region\"\n            aria-labelledby={this.headingId}\n          >\n\n            <slot name=\"content\" />\n\n          </div>\n\n\n          <div class=\"yeti-accordion-section-actions\">\n\n            {this.renderActions()}\n          \n          </div>\n\n\n        </div>\n\n    );\n  }\n\n}"],"version":3}