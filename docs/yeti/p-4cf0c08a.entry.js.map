{"version":3,"names":["YetiTitleTip","this","justClickedClosed","handleSlotHover","clickToOpen","scrollTitletipIntoView","handleSlotFocus","actual","el","querySelector","scrollIntoView","behavior","block","componentWillLoad","componentId","getAttribute","utils","generateUniqueId","setAttribute","tipId","slotId","render","wrapperClass","tipClass","titletipClass","position","h","key","class","id","text","componentDidRender","slot","firstElementChild","trigger","focus"],"sources":["src/components/yeti-titletip/yeti-titletip.tsx"],"sourcesContent":["import { Component, Prop, h, State, Element, Listen } from '@stencil/core';\r\nimport { utils } from '../../utils/utils';\r\n@Component({\r\n  tag: 'yeti-titletip',\r\n  shadow: false,\r\n})\r\nexport class YetiTitleTip {\r\n\r\n  @Element() el: HTMLElement;\r\n\r\n  /**\r\n   * CSS classlist to add to the element serving as the component's wrapper.\r\n   */\r\n  @Prop() wrapperClass: string = '';\r\n\r\n  /**\r\n   * CSS classlist to add to the actual titletip element.\r\n   */\r\n  @Prop() titletipClass: string = '';\r\n\r\n  /**\r\n   * Text value to display as the titletip's contents.\r\n   */\r\n  @Prop() text: string = \"I'm a helpful titletip.\";\r\n\r\n  /**\r\n   * Token list to describe the titletip's position relative to its anchor: left | right and/or above | below.\r\n   */\r\n  @Prop() position: string = \"above\";\r\n\r\n  /**\r\n   * Boolean value that sets whether the titletip opens on hover/focus (default) or on click.\r\n   */\r\n  @Prop() clickToOpen: boolean = false;\r\n\r\n  /**\r\n   * id of the component's slot element.\r\n   */\r\n  @Prop({\r\n    mutable: true,\r\n    reflect: true\r\n  }) slotId: string = \"\"; // Set on load\r\n\r\n  /**\r\n   * id of the component's actual element corresponding to the titletip. Will be auto-populated with a unique value if not provided.\r\n   */\r\n  @Prop({\r\n    mutable: true,\r\n    reflect: true\r\n  }) tipId: string = \"\"; // Set on load\r\n\r\n  /**\r\n   * Whether the anchor should be forced to be a CSS display block style or left as is.\r\n   */\r\n  @Prop() blockAnchor: boolean = false;\r\n\r\n  /**\r\n   * Whether the titletip should remain open permanently.\r\n   */\r\n  @Prop() forceOpen: boolean = false;\r\n\r\n  /**\r\n   * Toggle to force a re-render of the whole component.\r\n   */\r\n  @State() iLoveJSX: boolean = false;\r\n\r\n  /**\r\n   * Whether the titletip has been clicked open or not.\r\n   */\r\n  @State() isClickedOpen: boolean = false;\r\n\r\n  justClickedClosed: boolean = false;\r\n\r\n\r\n  @Listen('mouseover')\r\n  handleSlotHover() {\r\n    if (!this.clickToOpen) {\r\n      this.scrollTitletipIntoView();\r\n    }\r\n  }\r\n\r\n\r\n\r\n  @Listen('focusin')\r\n  handleSlotFocus() {\r\n    if (!this.clickToOpen) {\r\n      this.scrollTitletipIntoView();\r\n    }\r\n  }\r\n\r\n\r\n\r\n  scrollTitletipIntoView() {\r\n    let actual = this.el.querySelector(\".yeti-titletip\");\r\n    actual.scrollIntoView({\r\n      behavior: \"smooth\",\r\n      block: \"nearest\"\r\n    });\r\n  }\r\n\r\n\r\n\r\n  componentWillLoad() {\r\n    // Set up ids\r\n    let componentId = this.el.getAttribute(\"id\");\r\n\r\n    if (!componentId || componentId == \"\") {\r\n      componentId = utils.generateUniqueId();\r\n      this.el.setAttribute(\"id\", componentId);\r\n    }\r\n\r\n    this.tipId = (this.tipId != \"\") ? this.tipId : `${componentId}_tip`;\r\n    this.slotId = (this.slotId != \"\") ? this.slotId : `${componentId}_slot`;\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    let wrapperClass = 'yeti-titletip-wrapper';\r\n    let tipClass = 'yeti-titletip';\r\n\r\n    wrapperClass += (this.wrapperClass != '') ? ` ${this.wrapperClass}` : '';\r\n    tipClass += (this.titletipClass != '') ? ` ${this.titletipClass}` : '';\r\n\r\n  \r\n\r\n\r\n\r\n    switch (this.position) {\r\n\r\n      case \"right\":\r\n\r\n        tipClass += \" yeti-titletip-right\";\r\n        break;\r\n\r\n      case \"below\":\r\n\r\n        tipClass += \" yeti-titletip-below\";\r\n        break;\r\n\r\n      case \"left\":\r\n\r\n        tipClass += \" yeti-titletip-left\";\r\n        break;\r\n\r\n      case \"below-left\":\r\n\r\n        tipClass += \" yeti-titletip-below-left\";\r\n        break;\r\n\r\n      case \"below-right\":\r\n\r\n        tipClass += \" yeti-titletip-below-right\";\r\n        break;\r\n\r\n      case \"above-left\":\r\n\r\n        tipClass += \" yeti-titletip-above-left\";\r\n        break;\r\n\r\n      case \"above-right\":\r\n\r\n        tipClass += \" yeti-titletip-above-right\";\r\n        break;\r\n\r\n    }\r\n\r\n    return ([\r\n      <div class={wrapperClass}>\r\n\r\n        <div \r\n \r\n       \r\n        >\r\n\r\n          <slot />\r\n\r\n        </div>\r\n\r\n\r\n        <div class={tipClass}>\r\n\r\n          <div class=\"yeti-titletip-content\" id={this.tipId}>{this.text}</div>\r\n\r\n        </div>\r\n\r\n      </div>\r\n    ]);\r\n  }\r\n\r\n\r\n\r\n  componentDidRender() {\r\n    let slot = this.el.querySelector(\".yeti-titletip-trigger\").firstElementChild;\r\n    let trigger = this.el.querySelector(\".yeti-titletip-trigger\") as HTMLElement;\r\n    //slot.setAttribute(\"tabindex\", \"0\");\r\n    slot.setAttribute(\"aria-describedby\",this.tipId);\r\n\r\n    if (this.justClickedClosed && trigger) {\r\n      // The user just clicked the tooltip closed. Restore focus to the trigger.\r\n      this.justClickedClosed = false;\r\n      trigger.focus();\r\n    }\r\n\r\n  }\r\n\r\n}\r\n"],"mappings":"4FAMaA,EAAY,M,yBAiEvBC,KAAAC,kBAA6B,M,kBA1DE,G,mBAKC,G,UAKT,0B,cAKI,Q,iBAKI,M,YAQX,G,WAQD,G,iBAKY,M,eAKF,M,cAKA,M,mBAKK,K,CAMlC,eAAAC,GACE,IAAKF,KAAKG,YAAa,CACrBH,KAAKI,wB,EAOT,eAAAC,GACE,IAAKL,KAAKG,YAAa,CACrBH,KAAKI,wB,EAMT,sBAAAA,GACE,IAAIE,EAASN,KAAKO,GAAGC,cAAc,kBACnCF,EAAOG,eAAe,CACpBC,SAAU,SACVC,MAAO,W,CAMX,iBAAAC,GAEE,IAAIC,EAAcb,KAAKO,GAAGO,aAAa,MAEvC,IAAKD,GAAeA,GAAe,GAAI,CACrCA,EAAcE,EAAMC,mBACpBhB,KAAKO,GAAGU,aAAa,KAAMJ,E,CAG7Bb,KAAKkB,MAASlB,KAAKkB,OAAS,GAAMlB,KAAKkB,MAAQ,GAAGL,QAClDb,KAAKmB,OAAUnB,KAAKmB,QAAU,GAAMnB,KAAKmB,OAAS,GAAGN,Q,CAIvD,MAAAO,GAEE,IAAIC,EAAe,wBACnB,IAAIC,EAAW,gBAEfD,GAAiBrB,KAAKqB,cAAgB,GAAM,IAAIrB,KAAKqB,eAAiB,GACtEC,GAAatB,KAAKuB,eAAiB,GAAM,IAAIvB,KAAKuB,gBAAkB,GAMpE,OAAQvB,KAAKwB,UAEX,IAAK,QAEHF,GAAY,uBACZ,MAEF,IAAK,QAEHA,GAAY,uBACZ,MAEF,IAAK,OAEHA,GAAY,sBACZ,MAEF,IAAK,aAEHA,GAAY,4BACZ,MAEF,IAAK,cAEHA,GAAY,6BACZ,MAEF,IAAK,aAEHA,GAAY,4BACZ,MAEF,IAAK,cAEHA,GAAY,6BACZ,MAIJ,OACEG,EAAA,OAAAC,IAAA,2CAAKC,MAAON,GAEVI,EAAA,OAAAC,IAAA,4CAKED,EAAA,QAAAC,IAAA,8CAKFD,EAAA,OAAAC,IAAA,2CAAKC,MAAOL,GAEVG,EAAA,OAAAC,IAAA,2CAAKC,MAAM,wBAAwBC,GAAI5B,KAAKkB,OAAQlB,KAAK6B,Q,CAUjE,kBAAAC,GACE,IAAIC,EAAO/B,KAAKO,GAAGC,cAAc,0BAA0BwB,kBAC3D,IAAIC,EAAUjC,KAAKO,GAAGC,cAAc,0BAEpCuB,EAAKd,aAAa,mBAAmBjB,KAAKkB,OAE1C,GAAIlB,KAAKC,mBAAqBgC,EAAS,CAErCjC,KAAKC,kBAAoB,MACzBgC,EAAQC,O","ignoreList":[]}