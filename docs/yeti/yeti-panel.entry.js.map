{"file":"yeti-panel.entry.esm.js","mappings":";;;MAOa,SAAS;;;;IAwEpB,iBAAY,GAAY,KAAK,CAAC;mBAzDT,SAAS;wBAQH,KAAK;sBAQP,IAAI;oBAiBP,KAAK,CAAC,gBAAgB,EAAE;qBAQvB,KAAK,CAAC,gBAAgB,EAAE;wBAQrB,EAAE;oBAKC,KAAK;;EApClC,sBAAsB,CAAC,QAAiB;IAEtC,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC;MAC9B,WAAW,EAAE,IAAI,CAAC,EAAE;MACpB,YAAY,EAAE,QAAQ;KACvB,CAAC,CAAC;GAEJ;EAoCD,iBAAiB;IACf,IAAI,IAAI,CAAC,YAAY,EAAE;MACrB,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC;KACpC;GACF;EAID,iBAAiB;IAEf,IAAI,kBAAkB,GAAG,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,oBAAoB,CAAC,CAAC;IAErE,IAAI,kBAAkB,EAAE;MACtB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;KAC1B;GAEF;EAID,MAAM;IAEJ,IAAI,UAAU,GAAG,YAAY,CAAC;IAE9B,UAAU,IAAI,CAAC,IAAI,CAAC,YAAY,IAAI,IAAI,IAAI,CAAC,YAAY,EAAE,GAAG,EAAE,CAAC;IAEjE,UAAU,IAAI,CAAC,IAAI,CAAC,YAAY,IAAI,wBAAwB,GAAG,EAAE,CAAC;IAClE,UAAU,IAAI,CAAC,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,UAAU,IAAI,uBAAuB,GAAG,EAAE,CAAC;IAEpF,QAEI,WAAK,KAAK,EAAE,UAAU,IAGnB,CAAC,IAAI,CAAC,YAAY;;MAGjB,cACE,EAAE,EAAE,IAAI,CAAC,QAAQ,EACjB,KAAK,EAAC,mBAAmB,EACzB,OAAO,EAAE,QAAQ,IAAI,CAAC,iBAAiB,EAAE,CAAC,EAAE,mBAC7B,IAAI,CAAC,UAAU,mBACf,IAAI,CAAC,SAAS,IAG7B,WAAK,KAAK,EAAC,4BAA4B,IAEpC,CAAC,IAAI,CAAC,UAAU;QAEf,iBAAW,QAAQ,EAAC,aAAa,EAAC,GAAG,EAAC,EAAE,EAAC,SAAS,EAAC,yBAAyB,GAAa;;UAIzF,iBAAW,QAAQ,EAAC,aAAa,EAAC,GAAG,EAAC,EAAE,EAAC,SAAS,EAAC,yBAAyB,GAAa,EAI3F,WAAK,KAAK,EAAC,0BAA0B,IAElC,IAAI,CAAC,OAAO,CAET,EAGN,YAAM,IAAI,EAAC,WAAW,GAAG,CAGrB,CAEC;;;QAKT,WACE,EAAE,EAAE,IAAI,CAAC,QAAQ,EACjB,KAAK,EAAC,mBAAmB,IAGzB,WAAK,KAAK,EAAC,4BAA4B,IAGrC,WAAK,KAAK,EAAC,0BAA0B,IAElC,IAAI,CAAC,OAAO,CAET,EAGN,YAAM,IAAI,EAAC,WAAW,GAAG,CAGrB,CAEF,EAOR,WACE,EAAE,EAAE,IAAI,CAAC,SAAS,EAClB,KAAK,EAAC,oBAAoB,EAC1B,IAAI,EAAC,QAAQ,qBACI,IAAI,CAAC,QAAQ,IAG9B,eAAQ,CAEJ,CAGF,EAER;GACH;;;;;;;;;","names":[],"sources":["src/components/yeti-panel/yeti-panel.tsx"],"sourcesContent":["import { Component, Prop, h, State, Element, Event, EventEmitter, Watch } from '@stencil/core';\nimport { utils } from '../../utils/utils';\n\n@Component({\n  tag: 'yeti-panel',\n  shadow: false,\n})\nexport class YetiPanel {\n\n  @Element() el: HTMLElement;\n\n  /**\n   * Event that fires when the panel's isExpanded state changes to expanded.\n   */\n  @Event({ bubbles: true }) panelExpansionChanged: EventEmitter;\n\n  /**\n   * The descriptive text that appears in the heading bar above the content.\n   */\n  @Prop({\n    mutable: true,\n    reflect: true\n  }) heading: string = 'Heading';\n\n  /**\n   * Whether or not this panel can expand or collapse\n   */\n  @Prop({\n    mutable: true,\n    reflect: true\n  }) isExpandable: boolean = false;\n\n  /**\n   * Whether or not this panel is currently expanded.\n   */\n  @Prop({\n    mutable: true,\n    reflect: true\n  }) isExpanded: boolean = true;\n  @Watch('isExpanded')\n  watchIsExpandedHandler(newValue: boolean) {\n    \n    this.panelExpansionChanged.emit({\n      \"yetiPanel\": this.el,\n      \"isExpanded\": newValue\n    });\n\n  }\n\n  /**\n   * The id of the HTML element representing the panel header\n   */\n  @Prop({\n    mutable: true,\n    reflect: true\n  }) headerId: string = utils.generateUniqueId();\n\n  /**\n   * The id of the HTML element representing the panel's content container\n   */\n  @Prop({\n    mutable: true,\n    reflect: true\n  }) contentId: string = utils.generateUniqueId();\n\n  /**\n   * A string of CSS space-separated CSS classes to add to the HTML element that represents the panel's outer wrapper\n   */\n  @Prop({\n    mutable: true,\n    reflect: true\n  }) wrapperClass: string = '';\n\n  /**\n   * Used to toggle a re-render of the icon.\n   */\n  @State() iLoveJSX: boolean = false;\n\n\n  hasSubheader: boolean = false;\n\n\n\n  handleHeaderClick() {\n    if (this.isExpandable) {\n      this.isExpanded = !this.isExpanded;\n    }\n  }\n\n\n\n  componentWillLoad() {\n    \n    let potentialSubheader = this.el.querySelector('[slot=\"subheader\"]');\n    \n    if (potentialSubheader) {\n      this.hasSubheader = true;\n    }\n\n  }\n\n\n\n  render() {\n\n    let wrapperCSS = 'yeti-panel';\n\n    wrapperCSS += (this.wrapperClass) ? ` ${this.wrapperClass}` : '';\n\n    wrapperCSS += (this.isExpandable) ? ' yeti-panel-expandable' : '';\n    wrapperCSS += (this.isExpandable && this.isExpanded) ? ' yeti-panel__expanded' : '';\n\n    return (\n\n        <div class={wrapperCSS}>\n\n          {/* Header */}\n          {(this.isExpandable) ? \n          \n            // It's expandable, use a button for the header.\n            <button \n              id={this.headerId}\n              class=\"yeti-panel-header\"\n              onClick={() => { this.handleHeaderClick(); }}\n              aria-expanded={this.isExpanded}\n              aria-controls={this.contentId}\n            >\n\n              <div class='yeti-panel-header-contents'>\n\n                {(this.isExpanded) ?\n                \n                  <yeti-icon iconCode='expand_less' alt='' iconClass='yeti-panel-header-caret'></yeti-icon>\n\n                :\n\n                  <yeti-icon iconCode='expand_more' alt='' iconClass='yeti-panel-header-caret'></yeti-icon>\n\n                }\n                \n                <div class=\"yeti-panel-header-actual\">\n\n                  {this.heading}\n                  \n                </div>\n\n\n                <slot name=\"subheader\" />\n\n\n              </div>\n\n            </button>\n\n          :\n\n            // It's not expandable, just use a div for the header.\n            <div \n              id={this.headerId}\n              class=\"yeti-panel-header\"\n            >\n\n              <div class='yeti-panel-header-contents'>\n\n                \n                <div class=\"yeti-panel-header-actual\">\n\n                  {this.heading}\n                  \n                </div>\n\n\n                <slot name=\"subheader\" />\n\n\n              </div>\n\n            </div>\n          \n          }\n          \n\n\n          {/* Content */}\n          <div \n            id={this.contentId}\n            class=\"yeti-panel-content\"\n            role=\"region\"\n            aria-labelledby={this.headerId}\n          >\n\n            <slot />\n\n          </div>\n\n\n        </div>\n\n    );\n  }\n\n}"],"version":3}