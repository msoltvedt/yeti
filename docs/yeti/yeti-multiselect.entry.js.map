{"file":"yeti-multiselect.entry.esm.js","mappings":"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","names":[],"sources":["src/components/yeti-multiselect/yeti-multiselect.tsx"],"sourcesContent":["import { Component, Prop, h, State, Event, EventEmitter, Element, Listen, /*Watch*/ } from '@stencil/core';\r\nimport { utils, YetiMultiselectOption } from '../../utils/utils';\r\n\r\n@Component({\r\n  tag: 'yeti-multiselect',\r\n  shadow: false,\r\n})\r\nexport class YetiMultiselect {\r\n\r\n  @Element() el: HTMLElement;\r\n\r\n  /**\r\n   * Fires when the user has made a selection and closed the dropdown (usually by focusing elsewhere).\r\n   */\r\n  @Event({ bubbles: true }) readyToVerifySlow: EventEmitter<CustomEvent>;\r\n\r\n  /**\r\n   * Fires when the user toggles any of the options.\r\n   */\r\n  @Event({ bubbles: true }) readyToVerifyFast: EventEmitter<CustomEvent>;\r\n\r\n  /**\r\n   * CSS classlist to add to the component's outer wrapper element.\r\n   */\r\n  @Prop() cssClass: string = '';\r\n\r\n  /**\r\n   * id of the visual representation of the drop-down.\r\n   */\r\n  @Prop({\r\n    mutable: true,\r\n    reflect: true\r\n  }) facadeId: string = \"\";\r\n\r\n  /**\r\n   * id of the actual drop-down element.\r\n   */\r\n  @Prop({\r\n    mutable: true,\r\n    reflect: true\r\n  }) actualId: string = \"\";\r\n\r\n  /**\r\n   * name of the actual drop-down element. Defaults to match id.\r\n   */\r\n  @Prop({\r\n    mutable: true,\r\n    reflect: true\r\n  }) actualName: string = this.actualId;\r\n\r\n  /**\r\n   * Whether the component requires a valid value.\r\n   */\r\n  @Prop() required: boolean = false;\r\n\r\n  /**\r\n   * Token list of left | right and/or above | below that describes the drop-down's visual position relative to the closed state anchor.\r\n   */\r\n  @Prop() menuAlignment: string = \"\";\r\n\r\n  /**\r\n   * Whether the component has a valid value.\r\n   */\r\n  @Prop({\r\n    mutable: true,\r\n    reflect: true\r\n  }) isValid: boolean;\r\n\r\n  /**\r\n   * The component's value is represented as a string of comma-separated values.\r\n   */\r\n  @Prop({\r\n    mutable: true,\r\n    reflect: true\r\n  }) value: string = '';\r\n\r\n  /**** TODO: handle programmatic value changes: i.e. when controller JS sets [component].value \r\n  @Watch(\"value\")\r\n  handleValueChange(newValue: string, oldValue: string) {\r\n    this.handleProgrammaticValueChange(newValue, oldValue);\r\n  }*/\r\n\r\n  /**\r\n   * id of an external HTML element that the component's actual drop-down element references in aria-labelledby.\r\n   */\r\n  @Prop() labelledBy: string = \"\";\r\n\r\n  /**\r\n   * id of an external HTML element that the component's actual drop-down element references in aria-describedby.\r\n   */\r\n  @Prop() describedBy: string = \"\";\r\n\r\n  /**\r\n   * Text that appears in the closed state/anchor when there are no selections.\r\n   */\r\n  @Prop() placeholder: string = \"- Select -\";\r\n\r\n  /**\r\n   * Whether or not to show the optional Clear all selections puck.\r\n   */\r\n  @Prop() showClear: boolean = true;\r\n\r\n  /**\r\n   * Array of YetiMultiselectOptions that describes the component's internal representation of its options. See utils.js for more detail.\r\n   */\r\n  @State() options: YetiMultiselectOption[] = [];\r\n\r\n  /**\r\n   * Whether or not the user has interacted with the component (i.e. focused and blurred).\r\n   */\r\n  @State() isTouched: boolean = false;\r\n\r\n  /**\r\n   * Number of total selections (used primarily for the anchor).\r\n   */\r\n  @State() numSelections: number = 0;\r\n\r\n  /**\r\n   * Toggle to re-render the whole component.\r\n   */\r\n  @State() iLoveJSX: boolean = false;\r\n\r\n  /**\r\n   * Whether or not the drop-down is open/visible or not.\r\n   */\r\n  @State() isOpen: boolean = false;\r\n\r\n  /**\r\n   * 0-based index of the currently focused option.\r\n   */\r\n  @State() cursorPosition: number = -1;\r\n\r\n\r\n\r\n  @Listen(\"click\", {\r\n    target: \"body\"\r\n  })\r\n  handleDefocusingClick() {\r\n    if (this.el.querySelectorAll(\":focus\").length == 0 && this.isOpen) {\r\n      this.closeFlyout();\r\n    }\r\n  }\r\n\r\n\r\n\r\n  @Listen(\"keydown\")\r\n  handleKeydown(ev: KeyboardEvent) {\r\n\r\n    let key = ev.key.toString().toLowerCase();\r\n\r\n    switch (key) {\r\n\r\n      // Handle potential tabout\r\n      case \"tab\": {\r\n\r\n        // Normal tab direction\r\n        if (!ev.shiftKey) {\r\n\r\n          if (this.el.querySelectorAll(\".yeti-multiselect:focus\").length == 0) {\r\n            this.closeFlyout();\r\n          }\r\n\r\n        // Shift tab direction (backwards)\r\n        } else {\r\n\r\n          if (this.el.querySelectorAll(\".yeti-multiselect:focus\").length > 0) {\r\n            this.closeFlyout();\r\n          }\r\n\r\n        }\r\n        \r\n        break;\r\n      }\r\n\r\n\r\n      // Handle arrow navigation\r\n      case \"arrowdown\": {\r\n\r\n        if (this.isOpen) {\r\n          this.cursorPosition = (this.cursorPosition + 1) % this.options.length;\r\n          ev.preventDefault();\r\n        } else if (ev.altKey) {\r\n\r\n          this.openFlyout();\r\n          ev.preventDefault();\r\n\r\n        }\r\n\r\n        break;\r\n      }\r\n\r\n\r\n      // Handle arrow navigation\r\n      case \"arrowup\": {\r\n\r\n        if (this.isOpen) {\r\n          this.cursorPosition = (this.cursorPosition - 1 + this.options.length) % this.options.length;\r\n          ev.preventDefault();\r\n        } else if (ev.altKey) {\r\n\r\n          this.openFlyout();\r\n          ev.preventDefault();\r\n\r\n        }\r\n\r\n        break;\r\n      }\r\n\r\n\r\n      // Handle escape navigation\r\n      case \"escape\": {\r\n\r\n        if (this.isOpen) {\r\n          this.closeFlyout();\r\n          ev.preventDefault();\r\n        }\r\n\r\n        break;\r\n      }\r\n\r\n\r\n      // Handle flyout open/close toggling enter/space or selection-making enter/space\r\n      case \"enter\":\r\n      case \" \": {\r\n\r\n        // Check to see if this happened while selecting something.\r\n        ev.preventDefault();\r\n        let target = ev.target as HTMLElement;\r\n\r\n        // First check if the clear everything puck has focus\r\n        if (target.classList.contains(\"yeti-multiselect-puck\")) {\r\n          target.click();\r\n          break;\r\n        } else {\r\n        // Next check if the cursor is on a selection\r\n        \r\n          if (this.cursorPosition >= 0) {\r\n            // Toggle selection on the option at this cursor position.\r\n            this.handleOptionClick(this.cursorPosition);\r\n          } else {\r\n\r\n        // User isn't selecting or activating clear puck, so just toggle the flyout open/close state.\r\n            this.toggleFlyout();\r\n          }\r\n        }\r\n\r\n        break;\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n\r\n\r\n  openFlyout() {\r\n    this.isOpen = true;\r\n  }\r\n\r\n\r\n\r\n  closeFlyout() {\r\n    this.isOpen = false;\r\n    this.cursorPosition = -1;\r\n    this.isTouched = true;\r\n    this.readyToVerifySlow.emit();\r\n  }\r\n\r\n\r\n\r\n  toggleFlyout() {\r\n    if (this.isOpen) {\r\n      this.closeFlyout()\r\n    } else {\r\n      this.openFlyout();\r\n    }\r\n  }\r\n\r\n\r\n\r\n  handleFieldBlur(ev) {\r\n    this.isTouched = true;\r\n    this.readyToVerifySlow.emit(ev);\r\n  }\r\n\r\n\r\n\r\n  parseOptionElements(options: HTMLCollection) {\r\n\r\n    for (let i = 0; i < options.length; i++) {\r\n      \r\n      let option = options.item(i);\r\n      \r\n      // First, confirm this element is indeed a yeti-multiselect-option element.\r\n      if (option.tagName.toLowerCase() == 'yeti-multiselect-option') {\r\n\r\n        let optionId;\r\n\r\n        if (option.hasAttribute(\"id\")) {\r\n          optionId = option.getAttribute(\"id\");\r\n        } else {\r\n          optionId = `${this.el.getAttribute(\"id\")}_option${i}`;\r\n        }\r\n\r\n        this.options.push({\r\n          selected: option.hasAttribute(\"selected\"),\r\n          label: option.innerHTML,\r\n          id: optionId\r\n        });\r\n\r\n        if (option.hasAttribute(\"selected\")) {\r\n          ++this.numSelections;\r\n        }\r\n\r\n      }\r\n\r\n    } // End for\r\n\r\n    // Finally, we need to remove the option elements.\r\n    for (let j = options.length - 1; j >= 0; --j) {\r\n      options.item(j).remove();\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  getPlaceholderDisplay() {\r\n    // Returns the string of text that should go in the placeholder area.\r\n    switch (this.numSelections) {\r\n\r\n      case 0:\r\n        return this.placeholder;\r\n\r\n      case 1:\r\n        for (let i=0; i < this.options.length; i++) {\r\n          \r\n          if (this.options[i].selected) {\r\n            return this.options[i].label;\r\n          }\r\n\r\n        }\r\n\r\n      default: // Multiple selections\r\n        return `${this.numSelections} selections`;\r\n    }\r\n  }\r\n\r\n\r\n\r\n  renderActualOptions() {\r\n    // Creates the <option>s for the actual <select>.\r\n    let optionsActual = [];\r\n    for (let i=0; i<this.options.length; i++) {\r\n      let optionActual = <option value={this.options[i].label} selected={this.options[i].selected}>{this.options[i].label}</option>;\r\n      optionsActual.push(optionActual);\r\n    }\r\n\r\n    return optionsActual;\r\n  }\r\n\r\n\r\n\r\n  handleOptionClick(i: number) {\r\n    // i = options index\r\n    let newValue = [];\r\n    this.numSelections = (this.options[i].selected) ? --this.numSelections : ++this.numSelections;\r\n    this.options[i].selected = !this.options[i].selected;\r\n    for (let j = 0; j < this.options.length; j++) {\r\n      if (this.options[j].selected) {\r\n        newValue.push(this.options[j].label);\r\n      }\r\n    }\r\n    this.value = newValue.toString();\r\n    this.iLoveJSX = !this.iLoveJSX; // Trigger re-render\r\n    this.readyToVerifyFast.emit();\r\n  }\r\n\r\n\r\n\r\n  handleClearSelections(ev: Event) {\r\n    let fieldElement = this.el.querySelector(\".yeti-multiselect\") as HTMLElement;\r\n    for (let i=0; i<this.options.length; i++) {\r\n      this.options[i].selected = false;\r\n    }\r\n    this.value = \"\";\r\n    this.numSelections = 0;\r\n    fieldElement.focus();\r\n    ev.stopPropagation();\r\n    this.readyToVerifySlow.emit();\r\n    this.readyToVerifyFast.emit();\r\n  }\r\n\r\n\r\n\r\n  handleActualFocus() {\r\n    let facade = this.el.querySelector(\".yeti-multiselect\") as HTMLElement;\r\n    if (facade) {\r\n      facade.focus();\r\n    }\r\n  }\r\n\r\n\r\n\r\n  //handleProgrammaticValueChange(newValue: string, oldValue: string) {\r\n    // Usually you'd pre-set the value of the control by specifying the selected attribute of yeti-multiselect-option, however it can also be\r\n    // set programmatically via the value property of the component.\r\n    \r\n    //console.log(`Value should change from ${oldValue} to ${newValue}`);\r\n  //}\r\n\r\n\r\n\r\n  componentWillLoad() {\r\n    // Set up ids and handle any <yeti-multiselect-option> elements\r\n    let optionElements = this.el.children;\r\n\r\n    // Set up ids\r\n    let componentId = this.el.getAttribute(\"id\");\r\n\r\n    if (!componentId || componentId == \"\") {\r\n      componentId = utils.generateUniqueId();\r\n      this.el.setAttribute(\"id\", componentId);\r\n    }\r\n\r\n    this.actualId = (this.actualId != \"\") ? this.actualId : `${componentId}_actual`;\r\n    this.actualName = this.actualId;\r\n\r\n    this.facadeId = (this.facadeId != \"\") ? this.facadeId : `${componentId}_facade`;\r\n    \r\n\r\n    // Handle any <yeti-multiselect-option> elements\r\n    if (this.el.hasAttribute(\"id\") && this.el.getAttribute(\"id\") != \"\") { \r\n      this.el.getAttribute(\"id\");\r\n    } else {\r\n      this.el.setAttribute(\"id\", utils.generateUniqueId());\r\n    }\r\n\r\n    // Look for and handle any <yeti-multiselect-option> elements.\r\n    if (optionElements.length > 0) {\r\n      \r\n      this.parseOptionElements(optionElements);\r\n\r\n    }\r\n  }\r\n\r\n\r\n\r\n  componentWillRender() {\r\n    if (this.value == \"\") {\r\n      for (let i=0; i<this.options.length; i++) {\r\n        this.options[i].selected = false;\r\n      }\r\n      this.value = \"\";\r\n      this.numSelections = 0;\r\n    }\r\n  }\r\n\r\n\r\n\r\n  componentDidRender() {\r\n    // If the cursor is over an option, make sure it's visible.\r\n    if (this.isOpen) {\r\n      // The facade flyout is open. If one of the options is being hovered over then we want to scroll it into view.\r\n      // If not, then we'll scroll the whole flyout into view.\r\n      let flyout = this.el.querySelector(\".yeti-multiselect-flyout\");\r\n      let hoveredOption = this.el.querySelector(\".yeti-multiselect-option__hover\");\r\n      let thingToScrollIntoView = (hoveredOption) ? hoveredOption : flyout;\r\n      thingToScrollIntoView.scrollIntoView({\r\n        behavior: \"smooth\",\r\n        block: \"nearest\"\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n\r\n    let cssClasses = 'yeti-multiselect';\r\n    let flyoutClass = 'yeti-multiselect-flyout';\r\n\r\n    if (this.cssClass != '') {\r\n      cssClasses += ' ' + this.cssClass;\r\n    }\r\n\r\n    if (this.isValid == false) {\r\n      cssClasses += ' yeti-multiselect__error';\r\n    }\r\n\r\n    flyoutClass += (this.isOpen) ? \" yeti-multiselect-flyout__open\" : \"\";\r\n\r\n    if (this.menuAlignment == \"right\") {\r\n      flyoutClass += ' yeti-multiselect-flyout-align-right'\r\n    }\r\n\r\n    return ([\r\n      <div class=\"yeti-multiselect-wrapper\">\r\n\r\n        <select\r\n          tabIndex={-1}\r\n          class=\"yeti-multiselect-actual yeti-a11y-hidden\"\r\n          multiple={true}\r\n          id={this.actualId}\r\n          name={this.actualName}\r\n          onFocus={() => {this.handleActualFocus()}}\r\n          {...((!this.isValid) ? {\"aria-invalid\": true} : {})}\r\n          {...((this.labelledBy != \"\") ? {\"aria-labelledby\": this.labelledBy} : {})}\r\n          {...((this.describedBy != \"\") ? {\"aria-describedby\": this.describedBy} : {})}\r\n        >\r\n          \r\n          {this.renderActualOptions()}\r\n\r\n        </select>\r\n\r\n        <div \r\n          tabIndex={0}\r\n          class={cssClasses}\r\n          onClick={() => {\r\n            this.isOpen = !this.isOpen;\r\n          }}\r\n          onFocus={() => {\r\n            this.isTouched = true;\r\n          }}\r\n          aria-hidden=\"true\"\r\n        >\r\n\r\n          <span class=\"yeti-multiselect-placeholder\" title={this.getPlaceholderDisplay()}>{this.getPlaceholderDisplay()}</span>\r\n\r\n          { (this.showClear && this.numSelections > 0) ? \r\n\r\n            (<button class=\"yeti-multiselect-puck\" title=\"Clear all selections\" onClick={ (ev) => { this.handleClearSelections(ev); ev.preventDefault() }}>\r\n              <span class=\"material-icons yeti-multiselect-puck-icon\" aria-hidden=\"true\">cancel</span>\r\n            </button>)\r\n\r\n          :\r\n\r\n            \"\"\r\n\r\n          }\r\n\r\n        </div>\r\n\r\n        \r\n        <div class={flyoutClass} aria-hidden=\"true\">\r\n        \r\n          <ul\r\n            class=\"yeti-multiselect-options\"\r\n            id={this.facadeId}\r\n          >\r\n\r\n            {this.options.map((option, i) => {\r\n\r\n                let optionClass = (this.cursorPosition == i) ? \"yeti-multiselect-option yeti-multiselect-option__hover\" : \"yeti-multiselect-option\";\r\n              \r\n                return (\r\n                  <li id={option.id} key={option.id}>\r\n                    <button class={optionClass} tabIndex={-1} onClick={(ev) => { this.handleOptionClick(i); ev.preventDefault(); }}>\r\n                      <span class=\"yeti-multiselect-option-checkbox\">\r\n                        <span class=\"material-icons\">{(option.selected) ? \"check_box\" : \"check_box_outline_blank\"}</span>\r\n                      </span>\r\n                      <span class=\"yeti-multiselect-option-label\">{option.label}</span>\r\n                    </button>\r\n                  </li>\r\n                )\r\n              }\r\n            \r\n            )}\r\n\r\n          </ul>\r\n\r\n        </div>\r\n\r\n      </div>\r\n    ]);\r\n  }\r\n\r\n}"],"version":3}