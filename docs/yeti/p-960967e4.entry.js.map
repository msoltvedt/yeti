{"version":3,"names":["YetiTablePagination","constructor","hostRef","this","cssClass","htmlId","utils","generateUniqueId","records","showOptions","recordAliasSingular","recordAliasPlural","startIndex","recordsDisplayed","itemsPerPageOptions","selectedItemsPerPageOptionIndex","selectedPage","pages","watchRecordsHandler","updatePages","updateIndices","watchRecordsDisplayed","emitPaginationUpdatedEvent","parseOptionElements","options","newItemsPerPageOptions","i","length","option","item","tagName","toLowerCase","attributes","value","push","contents","parseInt","innerHTML","Number","isNaN","console","warn","j","remove","getItemsPerPageOption","itemsPerPage","Math","min","p","ceil","handleItemsPerPageChange","e","select","target","selectedIndex","preventDefault","handlePageSelectChange","handlePreviousPageButtonClick","ev","max","handleNextPageButtonClick","paginationUpdated","emit","currentPage","recordsPerPage","componentWillLoad","optionElements","el","children","render","cssClasses","h","key","class","htmlFor","id","onChange","map","index","selected","Object","assign","onClick","disabled","componentDidRender"],"sources":["src/components/yeti-table-pagination/yeti-table-pagination.tsx"],"sourcesContent":["import { Component, Prop, h, Element, State, Watch, Event, EventEmitter } from '@stencil/core';\r\nimport { utils } from '../../utils/utils';\r\n\r\n@Component({\r\n  tag: 'yeti-table-pagination',\r\n  shadow: false,\r\n})\r\nexport class YetiTablePagination {\r\n\r\n  @Event() paginationUpdated: EventEmitter;\r\n\r\n  @Element() el: HTMLElement;\r\n\r\n  @Prop() cssClass: string = '';\r\n\r\n  @Prop() htmlId: string = utils.generateUniqueId();\r\n\r\n  @Prop() records: number = 0;\r\n\r\n  @Prop() showOptions: boolean = true;\r\n\r\n  /**\r\n   * Descriptor of one record (e.g. \"1 item\")\r\n   */\r\n  @Prop() recordAliasSingular: string = \"item\";\r\n\r\n  /**\r\n   * Descriptor of multiple records (e.g. \"22 items\")\r\n   */\r\n  @Prop() recordAliasPlural: string = \"items\";\r\n\r\n  @Watch('records')\r\n  watchRecordsHandler() {\r\n    this.updatePages();\r\n    this.updateIndices();\r\n  }\r\n\r\n  @Prop({\r\n    reflect: true,\r\n    mutable: true\r\n  }) startIndex: number = 0;\r\n\r\n  @Prop({\r\n    reflect: true,\r\n    mutable: true\r\n  }) recordsDisplayed: number = 0;\r\n\r\n  @Watch('recordsDisplayed')\r\n  watchRecordsDisplayed() {\r\n    this.emitPaginationUpdatedEvent();\r\n  }\r\n\r\n  @State() itemsPerPageOptions: (number | string)[] = [10, 25, 50, 100, \"All\"];\r\n\r\n  @State() selectedItemsPerPageOptionIndex: number = 0;\r\n\r\n  @Prop({\r\n    reflect: true,\r\n    mutable: true\r\n  }) selectedPage: number = 1;\r\n\r\n  @State() pages: number = 1;\r\n\r\n\r\n\r\n  parseOptionElements(options: HTMLCollection) {\r\n\r\n    let newItemsPerPageOptions: Array<number | string> = [];\r\n\r\n    for (let i = 0; i < options.length; i++) {\r\n      \r\n      let option = options.item(i);\r\n      \r\n      // First, confirm this element is indeed a yeti-table-pagination-option element.\r\n      if (option.tagName.toLowerCase() == 'yeti-table-pagination-option') {\r\n\r\n        // Check to see if it has a selected attribute.\r\n        if (option.attributes && option.attributes['selected'] && (option.attributes['selected'].value == 'undefined' || option.attributes['selected'].value == \"true\")) {\r\n          this.selectedItemsPerPageOptionIndex = i;\r\n        }\r\n\r\n        // Check to see if it has an all attribute, and push the string \"All\" if it does.\r\n        if (option.attributes && option.attributes['all']) {\r\n\r\n          newItemsPerPageOptions.push(\"All\");\r\n\r\n        } else {\r\n\r\n          // Check to see if it has a valid number for its contents, and warn if it doesn't.\r\n          let contents = parseInt(option.innerHTML);\r\n\r\n          if (!Number.isNaN(contents)) {\r\n\r\n            newItemsPerPageOptions.push(contents);\r\n\r\n          } else {\r\n            \r\n            console.warn(`Ignoring \\<yeti-table-pagination-option\\> with invalid value \\\"${option.innerHTML}\\\". Numbers only please.`);\r\n          \r\n          }\r\n\r\n        }\r\n\r\n      }\r\n\r\n    } // End for\r\n\r\n    // Update itemsPerPageOptions if necessary.\r\n    if (newItemsPerPageOptions.length > 0) {\r\n      this.itemsPerPageOptions = newItemsPerPageOptions;\r\n    }\r\n\r\n    // Finally, we need to remove the option elements.\r\n    for (let j = options.length - 1; j >= 0; --j) {\r\n      options.item(j).remove();\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  getItemsPerPageOption() {\r\n    return this.itemsPerPageOptions[ this.selectedItemsPerPageOptionIndex ];\r\n  }\r\n\r\n\r\n\r\n  updateIndices() {\r\n    let itemsPerPage = this.getItemsPerPageOption();\r\n\r\n    // First set start index\r\n    if (itemsPerPage == \"All\" || itemsPerPage as number > this.records) {\r\n\r\n      this.startIndex = 0;\r\n\r\n    } else {\r\n\r\n      this.startIndex = ((this.selectedPage - 1) * (itemsPerPage as number));\r\n\r\n    }\r\n\r\n    // Second set end index\r\n    if (itemsPerPage == \"All\" || itemsPerPage as number > this.records) {\r\n\r\n      this.recordsDisplayed = this.records;\r\n\r\n    } else {\r\n      \r\n      this.recordsDisplayed = Math.min(\r\n        (this.records - this.startIndex),\r\n        (itemsPerPage as number)\r\n      )\r\n\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  updatePages() {\r\n    let p = this.getItemsPerPageOption();\r\n    p = (p == \"All\") ? 1 : Math.ceil(this.records / (p as number));\r\n    this.pages = p;\r\n  }\r\n\r\n\r\n\r\n  handleItemsPerPageChange(e: Event) {\r\n    let select = e.target as HTMLSelectElement;\r\n    this.selectedItemsPerPageOptionIndex = select.selectedIndex;\r\n    this.selectedPage = 1;\r\n    this.updatePages();\r\n    this.updateIndices();\r\n    e.preventDefault();\r\n    this.emitPaginationUpdatedEvent();\r\n  }\r\n\r\n\r\n\r\n  handlePageSelectChange(e: Event) {\r\n    let select = e.target as HTMLSelectElement;\r\n    this.selectedPage = parseInt(select.value);\r\n    this.updateIndices();\r\n    e.preventDefault();\r\n    this.emitPaginationUpdatedEvent();\r\n  }\r\n\r\n\r\n\r\n  handlePreviousPageButtonClick(ev) {\r\n    this.selectedPage = Math.max(1, this.selectedPage - 1);\r\n    this.updateIndices();\r\n    ev.preventDefault();\r\n    this.emitPaginationUpdatedEvent();\r\n  }\r\n\r\n\r\n\r\n  handleNextPageButtonClick(ev) {\r\n    this.selectedPage = Math.min(this.pages, this.selectedPage + 1);\r\n    this.updateIndices();\r\n    ev.preventDefault();\r\n    this.emitPaginationUpdatedEvent();\r\n  }\r\n\r\n\r\n\r\n  emitPaginationUpdatedEvent() {\r\n    let itemsPerPage = this.getItemsPerPageOption();\r\n    this.paginationUpdated.emit({\r\n      \"currentPage\": this.selectedPage-1,\r\n      \"recordsDisplayed\": this.recordsDisplayed,\r\n      \"recordsPerPage\": itemsPerPage\r\n    });\r\n  }\r\n\r\n\r\n\r\n  componentWillLoad() {\r\n    let optionElements = this.el.children;\r\n\r\n    // Look for and handle any <yeti-table-pagnation-option> elements.\r\n    if (optionElements.length > 0) {\r\n      \r\n      this.parseOptionElements(optionElements);\r\n\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n\r\n    let cssClasses = 'yeti-table-pagination';\r\n\r\n    //console.warn('Pagination render()', this.el);\r\n\r\n    if (this.cssClass != '') {\r\n      cssClasses += ' ' + this.cssClass;\r\n    }\r\n\r\n    return (\r\n      \r\n      <nav class={cssClasses} aria-label=\"Table Pagination\">\r\n\r\n        {/* Items per page */}\r\n        \r\n          <div class=\"yeti-table-pagination-items_per_page\">\r\n\r\n            { (this.showOptions) ?\r\n\r\n              \r\n              [<label htmlFor=\"demo-items_per_page\" class=\"yeti-table-pagination-items_per_page-label\">{this.recordAliasPlural} per page:</label>,\r\n\r\n              <select id=\"demo-items_per_page\" class=\"yeti-select yeti-table-pagination-items_per_page-select\" onChange={(e) => {\r\n                this.handleItemsPerPageChange(e);\r\n              }}>\r\n                {\r\n                  this.itemsPerPageOptions.map((option, index) => {\r\n                    return <option value={option} selected={(index == this.selectedItemsPerPageOptionIndex)} class=\"yeti-table-pagination-items_per_page-select-option\">{option}</option>\r\n                  })\r\n                }\r\n              </select>]\r\n\r\n            :\r\n              \r\n              \"\"\r\n            \r\n            }\r\n\r\n              <span class=\"yeti-table-pagination-items_per_page-count\">\r\n                { \r\n                  this.getItemsPerPageOption() == \"All\" || this.records == 0 ? \r\n                    \"\" \r\n                    : (this.startIndex + 1) + ' to ' + (this.startIndex + this.recordsDisplayed) /*(this.endIndex + 1)*/ + ' of '\r\n                }\r\n                {this.records} { this.records == 1 ? this.recordAliasSingular : this.recordAliasPlural}\r\n              </span>\r\n\r\n          </div>\r\n\r\n\r\n        {/* Pages */}\r\n        {\r\n          (this.records > 0) ?\r\n          <div class=\"yeti-table-pagination-pages\">\r\n\r\n              <label htmlFor=\"demo-pages\" class=\"yeti-a11y-hidden\">Page number, of {this.pages} page{this.pages == 1 ? '' : 's'}</label>\r\n\r\n              <select id=\"demo-pages\" class=\"yeti-select yeti-table-pagination-pages-select\" onChange={(e) => {\r\n                this.handlePageSelectChange(e);\r\n              }}>\r\n                  {(() => {\r\n                    let options = [];\r\n                    for (let i=1; i <= this.pages; i++) {\r\n                      options.push(<option value={i} class=\"yeti-table-pagination-pages-select-page\"  {...((i == this.selectedPage) && { selected: true })}>{i}</option>);\r\n                    }\r\n                    return options;\r\n                  })()}\r\n              </select>\r\n\r\n              <span class=\"yeti-table-pagination-pages-of_pages\" aria-hidden=\"true\">of {this.pages} page{this.pages == 1 ? '' : 's'}</span>\r\n\r\n              <ul class=\"yeti-table-pagination-pages-buttons\">\r\n\r\n                  <li class=\"yeti-table-pagination-pages-buttons-action\">\r\n\r\n                      <button \r\n                        class=\"yeti-table-pagination-pages-buttons-button\"\r\n                        onClick={(ev) => {this.handlePreviousPageButtonClick(ev)}}\r\n                        {...((this.selectedPage == 1) && { disabled: true })}\r\n                      >\r\n\r\n                          <span class=\"material-icons\" aria-hidden=\"true\">arrow_left</span>\r\n                          <span class=\"yeti-a11y-hidden\">Previous page</span>\r\n\r\n                      </button>\r\n\r\n                  </li>\r\n\r\n                  <li class=\"yeti-table-pagination-pages-buttons-action\">\r\n                    \r\n                      <button \r\n                        class=\"yeti-table-pagination-pages-buttons-button\"\r\n                        onClick={(ev) => {this.handleNextPageButtonClick(ev)}}\r\n                        {...((this.selectedPage == this.pages) && { disabled: true })}\r\n                      >\r\n                          <span class=\"material-icons\" aria-hidden=\"true\">arrow_right</span>\r\n                          <span class=\"yeti-a11y-hidden\">Next page</span>\r\n                      </button>\r\n\r\n                  </li>\r\n\r\n              </ul>\r\n\r\n          </div>\r\n          :\r\n          \"\"\r\n        }\r\n        \r\n    </nav>\r\n    );\r\n  }\r\n\r\n\r\n  componentDidRender() {\r\n    //console.warn(\"Pagination did render.\", this.el)\r\n    \r\n  }\r\n\r\n}\r\n"],"mappings":"mGAOaA,EAAmB,MAJhC,WAAAC,CAAAC,G,6DAUUC,KAAQC,SAAW,GAEnBD,KAAAE,OAAiBC,EAAMC,mBAEvBJ,KAAOK,QAAW,EAElBL,KAAWM,YAAY,KAKvBN,KAAmBO,oBAAW,OAK9BP,KAAiBQ,kBAAW,QAWjCR,KAAUS,WAAW,EAKrBT,KAAgBU,iBAAW,EAOrBV,KAAAW,oBAA2C,CAAC,GAAI,GAAI,GAAI,IAAK,OAE7DX,KAA+BY,gCAAW,EAKhDZ,KAAYa,aAAW,EAEjBb,KAAKc,MAAW,CAkS1B,CA/TC,mBAAAC,GACEf,KAAKgB,cACLhB,KAAKiB,e,CAcP,qBAAAC,GACElB,KAAKmB,4B,CAgBP,mBAAAC,CAAoBC,GAElB,IAAIC,EAAiD,GAErD,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAQG,OAAQD,IAAK,CAEvC,IAAIE,EAASJ,EAAQK,KAAKH,GAG1B,GAAIE,EAAOE,QAAQC,eAAiB,+BAAgC,CAGlE,GAAIH,EAAOI,YAAcJ,EAAOI,WAAW,cAAgBJ,EAAOI,WAAW,YAAYC,OAAS,aAAeL,EAAOI,WAAW,YAAYC,OAAS,QAAS,CAC/J9B,KAAKY,gCAAkCW,C,CAIzC,GAAIE,EAAOI,YAAcJ,EAAOI,WAAW,OAAQ,CAEjDP,EAAuBS,KAAK,M,KAEvB,CAGL,IAAIC,EAAWC,SAASR,EAAOS,WAE/B,IAAKC,OAAOC,MAAMJ,GAAW,CAE3BV,EAAuBS,KAAKC,E,KAEvB,CAELK,QAAQC,KAAK,+DAAkEb,EAAOS,mC,GAQ9F,CAGA,GAAIZ,EAAuBE,OAAS,EAAG,CACrCxB,KAAKW,oBAAsBW,C,CAI7B,IAAK,IAAIiB,EAAIlB,EAAQG,OAAS,EAAGe,GAAK,IAAKA,EAAG,CAC5ClB,EAAQK,KAAKa,GAAGC,Q,EAOpB,qBAAAC,GACE,OAAOzC,KAAKW,oBAAqBX,KAAKY,gC,CAKxC,aAAAK,GACE,IAAIyB,EAAe1C,KAAKyC,wBAGxB,GAAIC,GAAgB,OAASA,EAAyB1C,KAAKK,QAAS,CAElEL,KAAKS,WAAa,C,KAEb,CAELT,KAAKS,YAAeT,KAAKa,aAAe,GAAM6B,C,CAKhD,GAAIA,GAAgB,OAASA,EAAyB1C,KAAKK,QAAS,CAElEL,KAAKU,iBAAmBV,KAAKK,O,KAExB,CAELL,KAAKU,iBAAmBiC,KAAKC,IAC1B5C,KAAKK,QAAUL,KAAKS,WACpBiC,E,EASP,WAAA1B,GACE,IAAI6B,EAAI7C,KAAKyC,wBACbI,EAAKA,GAAK,MAAS,EAAIF,KAAKG,KAAK9C,KAAKK,QAAWwC,GACjD7C,KAAKc,MAAQ+B,C,CAKf,wBAAAE,CAAyBC,GACvB,IAAIC,EAASD,EAAEE,OACflD,KAAKY,gCAAkCqC,EAAOE,cAC9CnD,KAAKa,aAAe,EACpBb,KAAKgB,cACLhB,KAAKiB,gBACL+B,EAAEI,iBACFpD,KAAKmB,4B,CAKP,sBAAAkC,CAAuBL,GACrB,IAAIC,EAASD,EAAEE,OACflD,KAAKa,aAAeoB,SAASgB,EAAOnB,OACpC9B,KAAKiB,gBACL+B,EAAEI,iBACFpD,KAAKmB,4B,CAKP,6BAAAmC,CAA8BC,GAC5BvD,KAAKa,aAAe8B,KAAKa,IAAI,EAAGxD,KAAKa,aAAe,GACpDb,KAAKiB,gBACLsC,EAAGH,iBACHpD,KAAKmB,4B,CAKP,yBAAAsC,CAA0BF,GACxBvD,KAAKa,aAAe8B,KAAKC,IAAI5C,KAAKc,MAAOd,KAAKa,aAAe,GAC7Db,KAAKiB,gBACLsC,EAAGH,iBACHpD,KAAKmB,4B,CAKP,0BAAAA,GACE,IAAIuB,EAAe1C,KAAKyC,wBACxBzC,KAAK0D,kBAAkBC,KAAK,CAC1BC,YAAe5D,KAAKa,aAAa,EACjCH,iBAAoBV,KAAKU,iBACzBmD,eAAkBnB,G,CAMtB,iBAAAoB,GACE,IAAIC,EAAiB/D,KAAKgE,GAAGC,SAG7B,GAAIF,EAAevC,OAAS,EAAG,CAE7BxB,KAAKoB,oBAAoB2C,E,EAQ7B,MAAAG,GAEE,IAAIC,EAAa,wBAIjB,GAAInE,KAAKC,UAAY,GAAI,CACvBkE,GAAc,IAAMnE,KAAKC,Q,CAG3B,OAEEmE,EAAK,OAAAC,IAAA,2CAAAC,MAAOH,EAAU,aAAa,oBAI/BC,EAAK,OAAAC,IAAA,2CAAAC,MAAM,wCAENtE,KAAgB,YAGjB,CAACoE,EAAA,SAAOG,QAAQ,sBAAsBD,MAAM,8CAA8CtE,KAAKQ,kBAAoC,cAEnI4D,EAAQ,UAAAI,GAAG,sBAAsBF,MAAM,0DAA0DG,SAAWzB,IAC1GhD,KAAK+C,yBAAyBC,EAAE,GAG9BhD,KAAKW,oBAAoB+D,KAAI,CAACjD,EAAQkD,IAC7BP,EAAA,UAAQtC,MAAOL,EAAQmD,SAAWD,GAAS3E,KAAKY,gCAAkC0D,MAAM,sDAAsD7C,OAO3J,GAIA2C,EAAM,QAAAC,IAAA,2CAAAC,MAAM,8CAERtE,KAAKyC,yBAA2B,OAASzC,KAAKK,SAAW,EACvD,GACGL,KAAKS,WAAa,EAAK,QAAUT,KAAKS,WAAaT,KAAKU,kBAA4C,OAE1GV,KAAKK,QAAO,IAAIL,KAAKK,SAAW,EAAIL,KAAKO,oBAAsBP,KAAKQ,oBAQ1ER,KAAKK,QAAU,EAChB+D,EAAK,OAAAE,MAAM,+BAEPF,EAAA,SAAOG,QAAQ,aAAaD,MAAM,oBAAkB,mBAAkBtE,KAAKc,MAAK,QAAOd,KAAKc,OAAS,EAAI,GAAK,KAE9GsD,EAAA,UAAQI,GAAG,aAAaF,MAAM,iDAAiDG,SAAWzB,IACxFhD,KAAKqD,uBAAuBL,EAAE,GAE3B,MACC,IAAI3B,EAAU,GACd,IAAK,IAAIE,EAAE,EAAGA,GAAKvB,KAAKc,MAAOS,IAAK,CAClCF,EAAQU,KAAKqC,EAAA,SAAAS,OAAAC,OAAA,CAAQhD,MAAOP,EAAG+C,MAAM,2CAAiD/C,GAAKvB,KAAKa,cAAiB,CAAE+D,SAAU,OAAUrD,G,CAEzI,OAAOF,CACR,EANA,IASL+C,EAAA,QAAME,MAAM,uCAAsC,cAAa,QAAM,MAAKtE,KAAKc,MAAK,QAAOd,KAAKc,OAAS,EAAI,GAAK,KAElHsD,EAAI,MAAAE,MAAM,uCAENF,EAAI,MAAAE,MAAM,8CAENF,EAAA,SAAAS,OAAAC,OAAA,CACER,MAAM,6CACNS,QAAUxB,IAAQvD,KAAKsD,8BAA8BC,EAAG,GAClDvD,KAAKa,cAAgB,GAAM,CAAEmE,SAAU,OAG3CZ,EAAA,QAAME,MAAM,iBAAgB,cAAa,QAAwB,cACjEF,EAAA,QAAME,MAAM,oBAAkB,mBAMtCF,EAAI,MAAAE,MAAM,8CAENF,EAAA,SAAAS,OAAAC,OAAA,CACER,MAAM,6CACNS,QAAUxB,IAAQvD,KAAKyD,0BAA0BF,EAAG,GAC9CvD,KAAKa,cAAgBb,KAAKc,OAAU,CAAEkE,SAAU,OAEpDZ,EAAA,QAAME,MAAM,iBAAgB,cAAa,QAAyB,eAClEF,EAAA,QAAME,MAAM,oBAAkB,iBAS9C,G,CAQR,kBAAAW,G","ignoreList":[]}