{"version":3,"names":["YetiFileExplorer","name","content","path","isFolder","isRoot","isSelected","selectedIndex","offset","pageSize","totalElements","id","utils","generateUniqueId","type","handlePathChange","handleItemClick","depth","index","serverPathStringToClickedFolder","this","length","pop","forEach","val","fileExplorerChange","emit","handleItemKeyDown","event","htmlElement","target","grandParentULElement","closest","siblingElements","querySelectorAll","indexOfSiblingToFocus","siblingToFocus","key","toLowerCase","preventDefault","focus","indexOfAncestor","el","scrollIntoView","behavior","block","inline","newFolderObject","folder","undefined","renderFolders","folders","emptyFolder","push","renderFolder","minimumDisplayDepth","jsx","h","class","renderFolderContents","map","item","renderItem","buttonCSS","onClick","onKeyDown","e","iconCode","alt","render","wrapperCSS","componentDidRender","foldersElement","querySelector"],"sources":["src/components/yeti-file-explorer/yeti-file-explorer.tsx"],"sourcesContent":["import { Component, Prop, h, State, Element, Event, EventEmitter, Method, Watch } from '@stencil/core';\r\nimport { YetiFileSystemItem, utils } from '../../utils/utils';\r\n\r\n@Component({\r\n  tag: 'yeti-file-explorer',\r\n  shadow: false,\r\n})\r\nexport class YetiFileExplorer {\r\n\r\n  /**\r\n   * Fires when the user clicks a folder\r\n   */\r\n  @Event() fileExplorerChange: EventEmitter;\r\n\r\n  @Element() el: HTMLElement;\r\n\r\n  /**\r\n   * CSS classlist applied to the explorer wrapper element.\r\n   */\r\n  @Prop({ attribute: 'wrapper-css'}) wrapperCSS?: string = '';\r\n\r\n  /**\r\n   * Whether or not to show files (folders are always shown).\r\n   */\r\n  @Prop() showFiles: boolean = true;\r\n\r\n  /**\r\n   * minimum number of folder layers to show\r\n   */\r\n  @Prop() minimumDisplayDepth: number = 3;\r\n\r\n  /**\r\n   * All the displayed folders in order from root to terminus\r\n   */\r\n  @Prop({ mutable: true }) path: YetiFileSystemItem[] = \r\n  [\r\n    {\r\n      name: \"root\",\r\n      content: [],\r\n      path: \"\",\r\n      isFolder: true,\r\n      isRoot: true,\r\n      isSelected: true,\r\n      selectedIndex: -1,\r\n      offset: 0,\r\n      pageSize: 1000,\r\n      totalElements: 0,\r\n      id: utils.generateUniqueId(),\r\n      type: \"folder\"\r\n    }\r\n  ];\r\n\r\n\r\n\r\n  @Watch(\"path\")\r\n  handlePathChange() {\r\n    // TODO: validate the incoming path variable\r\n  }\r\n\r\n  /**\r\n   * Toggle to trigger a re-render of the whole component.\r\n   */\r\n  @State() iLoveJSX: boolean = false;\r\n\r\n\r\n\r\n  handleItemClick(depth: number = 0, index: number = 0) {\r\n    // A folder or file was just clicked. Handle it.\r\n    let serverPathStringToClickedFolder = \"\"; // This will be the term by which the server identifies this folder\r\n    \r\n    // If necessary, prune any folders that would be to the right of this.\r\n    while (this.path.length > depth + 1) {\r\n      this.path.pop();\r\n    }\r\n\r\n    // (Re)set the isSelected state for this folder and its sibling\r\n    this.path[depth].content.forEach((val) => {\r\n      val.isSelected = false;\r\n    })\r\n\r\n    // Update the path at this depth\r\n    this.path[depth].isSelected = true;\r\n    this.path[depth].selectedIndex = index;\r\n\r\n    // Derive the server path to this folder\r\n    serverPathStringToClickedFolder += this.path[depth].content[index].path;\r\n\r\n    // Fire the change event so the component consumer can provide new data\r\n    this.fileExplorerChange.emit({\r\n      \"path\": serverPathStringToClickedFolder,\r\n      \"depth\": depth,\r\n      \"index\": index\r\n    });\r\n    \r\n  }\r\n\r\n\r\n\r\n  handleItemKeyDown(event: KeyboardEvent, depth: number = 0, index: number = 0) {\r\n    // A folder or file was just clicked. Handle it.\r\n    \r\n    let htmlElement = event.target as HTMLElement;\r\n    let grandParentULElement = htmlElement.closest(\".yeti-file_explorer-folder-items\");\r\n    let siblingElements = grandParentULElement.querySelectorAll(\".yeti-file_explorer-folder-item .yeti-file_explorer-folder-item-wrapper\");\r\n    let indexOfSiblingToFocus;\r\n    let siblingToFocus;\r\n    let key = event.key.toLowerCase();\r\n    \r\n    switch (key) {\r\n\r\n      case \"arrowdown\": {\r\n        event.preventDefault();\r\n        indexOfSiblingToFocus = (index+1 >= this.path[depth].content.length)  ?  0  :  index + 1;\r\n        siblingToFocus = siblingElements[indexOfSiblingToFocus] as HTMLElement;\r\n        siblingToFocus.focus();\r\n        break;\r\n      }\r\n\r\n      case \"arrowup\": {\r\n        event.preventDefault();\r\n        indexOfSiblingToFocus = (index-1 < 0)  ?  this.path[depth].content.length - 1  :  index - 1;\r\n        siblingToFocus = siblingElements[indexOfSiblingToFocus] as HTMLElement;\r\n        siblingToFocus.focus();\r\n        break;\r\n      }\r\n\r\n\r\n      case \"arrowright\": {\r\n        \r\n        if (this.path[depth+1] && this.path[depth+1].content && this.path[depth+1].content.length > 0) {\r\n\r\n          let indexOfAncestor = (this.path[depth+1].selectedIndex > 0) ? this.path[depth+1].selectedIndex : 0;\r\n\r\n          event.preventDefault();\r\n          // Find the first button in the next column over and focus on it\r\n          siblingToFocus = (this.el.querySelectorAll(\".yeti-file_explorer-folder-items\")[depth+1].querySelectorAll(\".yeti-file_explorer-folder-item .yeti-file_explorer-folder-item-wrapper\")[indexOfAncestor] as HTMLElement);\r\n          siblingToFocus.focus();\r\n          siblingToFocus.scrollIntoView({\r\n            behavior: \"smooth\",\r\n            block: \"nearest\",\r\n            inline: \"nearest\"\r\n          });\r\n\r\n        }\r\n\r\n        break;\r\n      }\r\n\r\n\r\n      case \"arrowleft\": {\r\n\r\n        if (depth > 0) {\r\n\r\n          let indexOfAncestor = this.path[depth-1].selectedIndex;\r\n\r\n          event.preventDefault();\r\n          // Focus on the item in the previous column that's in the path\r\n          siblingToFocus = (this.el.querySelectorAll(\".yeti-file_explorer-folder-items\")[depth-1].querySelectorAll(\".yeti-file_explorer-folder-item .yeti-file_explorer-folder-item-wrapper\")[indexOfAncestor] as HTMLElement)\r\n          siblingToFocus.focus();\r\n          siblingToFocus.scrollIntoView({\r\n            behavior: \"smooth\",\r\n            block: \"nearest\",\r\n            inline: \"nearest\"\r\n          });\r\n\r\n        }\r\n\r\n        break;\r\n\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n\r\n\r\n  @Method()\r\n  async newFolderObject() {\r\n    let folder: YetiFileSystemItem = {\r\n      content: [],\r\n      name: undefined,\r\n      path: undefined,\r\n      isFolder: true,\r\n      isRoot: false,\r\n      isSelected: false,\r\n      selectedIndex: -1,\r\n      id: utils.generateUniqueId()\r\n    };\r\n    return folder;\r\n  }\r\n\r\n\r\n\r\n  renderFolders() {\r\n    // Render all the displayed folders for the currently selected path.\r\n    let folders = [];\r\n    let emptyFolder: YetiFileSystemItem = {\r\n      name: \"\",\r\n      path: \"/\",\r\n      content: [],\r\n      selectedIndex: -1,\r\n      isRoot: false,\r\n      isSelected: false\r\n    }\r\n\r\n    // Loop through the path and render each folder in it\r\n    this.path.forEach((folder, index) => {\r\n      folders.push(this.renderFolder(folder, index));\r\n    });\r\n\r\n    while (folders.length < this.minimumDisplayDepth) {\r\n      folders.push(this.renderFolder(emptyFolder, -1));\r\n    }\r\n\r\n    return folders;\r\n  }\r\n\r\n\r\n\r\n  renderFolder(folder: YetiFileSystemItem, depth) {\r\n\r\n    let jsx =\r\n\r\n      <div class=\"yeti-file_explorer-folder\">\r\n\r\n        <ul class=\"yeti-file_explorer-folder-items\">\r\n\r\n          {this.renderFolderContents(folder, depth)}\r\n\r\n        </ul>\r\n\r\n      </div>\r\n\r\n    return jsx;\r\n      \r\n  }\r\n\r\n\r\n\r\n  renderFolderContents(folder: YetiFileSystemItem, depth: number = -1) {\r\n\r\n    return folder.content.map((item, index) => {\r\n      return this.renderItem(item, depth, index);\r\n    });\r\n\r\n  }\r\n\r\n\r\n\r\n  renderItem(item: YetiFileSystemItem, depth: number = -1, index: number = -1) {\r\n\r\n    let buttonCSS = \"yeti-file_explorer-folder-item-wrapper\" + ((item.isSelected) ? \" yeti-file_explorer-folder-item-wrapper__selected\" : \"\");\r\n    let jsx = \r\n\r\n      <li class=\"yeti-file_explorer-folder-item\">\r\n\r\n          <button class={buttonCSS} onClick={() => { this.handleItemClick(depth, index); }} data-path={item.path} onKeyDown={(e) => { this.handleItemKeyDown(e, depth, index); }}>\r\n\r\n              <yeti-icon iconCode=\"folder\" alt=\"subfolder\" icon-style=\"outlined\" class=\"yeti-file_explorer-folder-item-icon\"></yeti-icon>\r\n            \r\n              <span class=\"yeti-file_explorer-folder-item-name\">{item.name}</span>\r\n            \r\n              {/* {\r\n                (item.content.length) ? \r\n                  <yeti-icon iconCode=\"chevron_right\" alt=\"open subfolder\" class=\"yeti-file_explorer-folder-more\"></yeti-icon>\r\n                : \r\n                  \"\"\r\n              } */}\r\n\r\n              <yeti-icon iconCode=\"chevron_right\" alt=\"open subfolder\" class=\"yeti-file_explorer-folder-more\"></yeti-icon>\r\n        \r\n          </button>\r\n\r\n      </li>\r\n\r\n    return jsx;\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n\r\n    let wrapperCSS = 'yeti-file_explorer-wrapper';\r\n\r\n    wrapperCSS += (this.wrapperCSS != '') ? ` ${this.wrapperCSS}` : '';\r\n\r\n    return (\r\n\r\n      <div class={wrapperCSS}>\r\n\r\n        <div class=\"yeti-file_explorer\">\r\n\r\n          <div class=\"yeti-file_explorer-folders\">\r\n\r\n            {this.renderFolders()}\r\n\r\n          </div>{/* /folders */}\r\n\r\n        </div>{/* /file_explorer */}\r\n\r\n      \r\n        <div class=\"yeti-file_explorer-path\">{this.path[ this.path.length - 1 ].path}</div>\r\n\r\n      </div>\r\n\r\n    );\r\n  }\r\n\r\n\r\n\r\n  componentDidRender() {\r\n    // Scroll the last folder into view\r\n    let foldersElement = this.el.querySelector(\".yeti-file_explorer-folders\");\r\n\r\n    if (foldersElement) {\r\n\r\n      foldersElement.scrollIntoView({\r\n        behavior: \"smooth\",\r\n        block: \"start\",\r\n        inline: \"end\"\r\n      });\r\n\r\n    }\r\n  }\r\n\r\n}"],"mappings":"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"}