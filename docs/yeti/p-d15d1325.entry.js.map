{"version":3,"names":["YetiToast","handleCloseClick","e","wrapper","this","el","querySelector","actual","style","setProperty","clientHeight","isVisible","stopImmediatePropagation","preventDefault","isClosing","handleActionClick","toastActionClick","emit","componentWillLoad","componentId","getAttribute","utils","generateUniqueId","setAttribute","toastId","slotId","closesSelfAfter","setTimeout","render","altText","iconAltText","iconCode","wrapperClass","actualClass","size","toastType","h","key","class","id","role","textTitle","actionLabel","onClick","componentDidLoad","console","log","addEventListener"],"sources":["src/components/yeti-toast/yeti-toast.tsx"],"sourcesContent":["import { Component, Prop, h, State, Element, Event, EventEmitter } from '@stencil/core';\r\nimport { utils } from '../../utils/utils';\r\n\r\n@Component({\r\n  tag: 'yeti-toast',\r\n  shadow: false,\r\n})\r\nexport class YetiToast {\r\n\r\n  @Element() el: HTMLElement;\r\n\r\n  /**\r\n   * Fires when the user clicks the action button.\r\n   */\r\n  @Event({ bubbles: true }) toastActionClick: EventEmitter;\r\n\r\n\r\n  /**\r\n   * CSS classlist to add to the element serving as the component's wrapper.\r\n   */\r\n  @Prop() actualClass: string = '';\r\n\r\n  /**\r\n   * The type of toast: error (default) | info | success | warning | warningAlt.\r\n   */\r\n  @Prop() toastType: string = \"\";\r\n\r\n  /**\r\n   * Whether to use the high-contrast variant or not.\r\n   */\r\n  @Prop() isHighContrast: boolean = false;\r\n\r\n  /**\r\n   * Whether to show the close button or not.\r\n   */\r\n  @Prop() showCloseButton: boolean = true;\r\n\r\n  /**\r\n   * Which icon to use (see Google Material Icons).\r\n   */\r\n  @Prop() iconCode: string = \"\";\r\n\r\n  /**\r\n   * The alt text for the icon.\r\n   */\r\n  @Prop() iconAltText: string = \"\";\r\n\r\n  /**\r\n   * Text value to display as the toast's title.\r\n   */\r\n  @Prop() textTitle: string = \"Mmmm Toast!\";\r\n\r\n  /**\r\n   * Optionally set a size (currently only supports default and \"full\")\r\n   */\r\n  @Prop() size: string = \"\";\r\n\r\n  /**\r\n   * Text label for the action button.\r\n   */\r\n  @Prop() actionLabel: string = \"\";\r\n\r\n  /**\r\n   * id of the component's slot element.\r\n   */\r\n  @Prop({\r\n    mutable: true,\r\n    reflect: true\r\n  }) slotId: string = \"\"; // Set on load\r\n\r\n  /**\r\n   * id of the component's actual element corresponding to the tooltip. Will be auto-populated with a unique value if not provided.\r\n   */\r\n  @Prop({\r\n    mutable: true,\r\n    reflect: true\r\n  }) toastId: string = \"\"; // Set on load\r\n\r\n  /**\r\n   * Time in ms before the Toast closes itself. Values of less than 1 will be ignored.\r\n   */\r\n  @Prop() closesSelfAfter: number = 0;\r\n\r\n  /**\r\n   * Toggle to force a re-render of the whole component.\r\n   */\r\n  @State() iLoveJSX: boolean = false;\r\n\r\n  /**\r\n   * Whether the toast is visible or not.\r\n   */\r\n  @Prop() isVisible: boolean = true;\r\n\r\n  /**\r\n   * Whether the toast is currently animating into the closed (not visible) state.\r\n   */\r\n  @Prop() isClosing: boolean = false;\r\n\r\n\r\n\r\n  handleCloseClick(e) {\r\n\r\n    let wrapper = this.el.querySelector(\".yeti-toast-wrapper\") as HTMLElement;\r\n    let actual = this.el.querySelector(\".yeti-toast\") as HTMLElement;\r\n\r\n    wrapper.style.setProperty(\"height\", `${actual.clientHeight}px`);\r\n\r\n    this.isVisible = false;\r\n    e.stopImmediatePropagation();\r\n    e.preventDefault();\r\n    this.isClosing = true;\r\n\r\n    wrapper.style.setProperty(\"height\", `0px`);\r\n  }\r\n\r\n\r\n\r\n  handleActionClick(e) {\r\n    this.toastActionClick.emit();\r\n    e.stopImmediatePropagation();\r\n    e.preventDefault();\r\n  }\r\n\r\n\r\n\r\n  componentWillLoad() {\r\n    // Set up ids\r\n    let componentId = this.el.getAttribute(\"id\");\r\n\r\n    if (!componentId || componentId == \"\") {\r\n      componentId = utils.generateUniqueId();\r\n      this.el.setAttribute(\"id\", componentId);\r\n    }\r\n\r\n    this.toastId = (this.toastId != \"\") ? this.toastId : `${componentId}_tip`;\r\n    this.slotId = (this.slotId != \"\") ? this.slotId : `${componentId}_slot`;\r\n\r\n    if (this.closesSelfAfter > 0) {\r\n      setTimeout(() => {\r\n        this.isVisible = false;\r\n      }, this.closesSelfAfter);\r\n    }\r\n\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    let altText = this.iconAltText;\r\n    let iconCode = this.iconCode;\r\n    let wrapperClass = 'yeti-toast-wrapper';\r\n    let actualClass = 'yeti-toast';\r\n    actualClass += (this.size == 'full') ? ' yeti-toast_full' : '';\r\n    actualClass += (this.actualClass !== '') ? ` ${this.actualClass}` : ``;\r\n\r\n    wrapperClass += (this.isClosing) ? ' yeti-toast-wrapper__closing' : '';\r\n\r\n    // Set type-based CSS class\r\n    switch (this.toastType) {\r\n\r\n      case \"error\":\r\n\r\n        actualClass += ' yeti-toast-error';\r\n        altText = (altText != '') ? altText : 'Error';\r\n        iconCode = (iconCode != '') ? iconCode : 'error';\r\n        break;\r\n\r\n      case \"info\":\r\n\r\n        actualClass += ' yeti-toast-info';\r\n        altText = (altText != '') ? altText : 'Information';\r\n        iconCode = (iconCode != '') ? iconCode : 'info';\r\n        break;\r\n\r\n      case \"success\":\r\n\r\n        actualClass += ' yeti-toast-success';\r\n        altText = (altText != '') ? altText : 'Success';\r\n        iconCode = (iconCode != '') ? iconCode : 'check_circle';\r\n        break;\r\n\r\n      case \"warning\":\r\n\r\n        actualClass += ' yeti-toast-warning';\r\n        altText = (altText != '') ? altText : 'Warning';\r\n        iconCode = (iconCode != '') ? iconCode : 'error';\r\n        break;\r\n\r\n      case \"warningAlt\":\r\n\r\n        actualClass += ' yeti-toast-warning_alt';\r\n        altText = (altText != '') ? altText : 'Warning';\r\n        iconCode = (iconCode != '') ? iconCode : 'warning';\r\n        break;\r\n\r\n      case \"\":\r\n      default:\r\n        altText = (altText != '') ? altText : 'Error';\r\n        iconCode = (iconCode != '') ? iconCode : 'error';\r\n        break;\r\n\r\n    }\r\n    \r\n\r\n    // Set low-contrast mode\r\n    actualClass += (this.isHighContrast) ? ' yeti-toast-high_contrast' : '';\r\n\r\n\r\n    // Set visibility\r\n    actualClass += (this.isVisible) ? '' : ' yeti-toast__hidden';\r\n  \r\n\r\n    return (\r\n      <div class={wrapperClass}>\r\n\r\n        <div class={actualClass} id={this.toastId} role=\"status\">\r\n\r\n          <div class=\"yeti-toast-icon\">\r\n            \r\n            <span class=\"material-icons\" aria-hidden=\"true\">{iconCode}</span>\r\n            <span class=\"yeti-a11y-hidden\">{altText}</span>\r\n\r\n          </div>\r\n\r\n\r\n          <div class=\"yeti-toast-content\">\r\n\r\n            <div class=\"yeti-toast-content-text\">\r\n          \r\n              {\r\n                (this.textTitle != \"\") ?\r\n                  <div class=\"yeti-toast-content-text-title\">{this.textTitle}</div>\r\n                :\r\n                  ''\r\n              }\r\n              <div class=\"yeti-toast-content-text-copy\">\r\n\r\n                <slot />\r\n\r\n              </div>\r\n\r\n            </div>\r\n\r\n\r\n            {\r\n              (this.actionLabel != \"\") ?\r\n\r\n                <button class=\"yeti-toast-action yeti-button yeti-button-tertiary yeti-button-size-xs\" onClick={(e) => this.handleActionClick(e)}>\r\n                  {this.actionLabel}\r\n                </button>\r\n              :\r\n                \"\"\r\n            }\r\n\r\n          </div>\r\n\r\n          {\r\n            (this.showCloseButton) ?\r\n\r\n              <button class=\"yeti-toast-close\" onClick={(e) => this.handleCloseClick(e)}>\r\n                <span class=\"material-icons\">close</span>\r\n              </button>\r\n            :\r\n              \"\"\r\n          }\r\n\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n  componentDidLoad() {\r\n    console.log(\"Loaded!\");\r\n    let wrapper = this.el.querySelector(\".yeti-toast-wrapper\") as HTMLElement;\r\n\r\n    wrapper.addEventListener(\"transitionend\", () => { console.log(\"Transition End!\"); });\r\n  }\r\n\r\n}"],"mappings":"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","ignoreList":[]}