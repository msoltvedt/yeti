{"version":3,"names":["YetiTooltip","handleCloseClick","e","this","isVisible","stopImmediatePropagation","preventDefault","componentWillLoad","componentId","el","getAttribute","utils","generateUniqueId","setAttribute","notificationId","slotId","render","wrapperCSS","notificationType","console","log","h","class","id","role","textTitle","componentDidRender","slot","querySelector","firstElementChild"],"sources":["src/components/yeti-notification/yeti-notification.tsx"],"sourcesContent":["import { Component, Prop, h, State, Element } from '@stencil/core';\r\nimport { utils } from '../../utils/utils';\r\n\r\n@Component({\r\n  tag: 'yeti-notification',\r\n  shadow: false,\r\n})\r\nexport class YetiTooltip {\r\n\r\n  @Element() el: HTMLElement;\r\n\r\n\r\n  /**\r\n   * CSS classlist to add to the element serving as the component's wrapper.\r\n   */\r\n  @Prop({ attribute: 'wrapper-class'}) wrapperCSS: string = '';\r\n\r\n  /**\r\n   * The type of notification: error (default) | info | success | warning | warningAlt.\r\n   */\r\n  @Prop() notificationType: string = \"\";\r\n\r\n  /**\r\n   * The type of notification: error (default) | info | success | warning | warningAlt.\r\n   */\r\n  @Prop() isLowContrast: boolean = false;\r\n\r\n  /**\r\n   * Text value to display as the notification's title.\r\n   */\r\n  @Prop() textTitle: string = \"Mmmm Toast!\";\r\n\r\n  /**\r\n   * id of the component's slot element.\r\n   */\r\n  @Prop({\r\n    mutable: true,\r\n    reflect: true\r\n  }) slotId: string = \"\"; // Set on load\r\n\r\n  /**\r\n   * id of the component's actual element corresponding to the tooltip. Will be auto-populated with a unique value if not provided.\r\n   */\r\n  @Prop({\r\n    mutable: true,\r\n    reflect: true\r\n  }) notificationId: string = \"\"; // Set on load\r\n\r\n  \r\n\r\n  /**\r\n   * Toggle to force a re-render of the whole component.\r\n   */\r\n  @State() iLoveJSX: boolean = false;\r\n\r\n  /**\r\n   * Whether the notification is visible or not.\r\n   */\r\n  @State() isVisible: boolean = true;\r\n\r\n\r\n\r\n  handleCloseClick(e) {\r\n    this.isVisible = false;\r\n    e.stopImmediatePropagation();\r\n    e.preventDefault();\r\n  }\r\n\r\n\r\n  componentWillLoad() {\r\n    // Set up ids\r\n    let componentId = this.el.getAttribute(\"id\");\r\n\r\n    if (!componentId || componentId == \"\") {\r\n      componentId = utils.generateUniqueId();\r\n      this.el.setAttribute(\"id\", componentId);\r\n    }\r\n\r\n    this.notificationId = (this.notificationId != \"\") ? this.notificationId : `${componentId}_tip`;\r\n    this.slotId = (this.slotId != \"\") ? this.slotId : `${componentId}_slot`;\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    let wrapperCSS = 'yeti-notification' + (this.wrapperCSS !== '') ? ` ${this.wrapperCSS}` : '';\r\n\r\n    // Set type-based CSS class\r\n    switch (this.notificationType) {\r\n\r\n      case \"error\":\r\n\r\n        wrapperCSS += ' yeti-notification-error';\r\n        break;\r\n\r\n      case \"info\":\r\n\r\n        wrapperCSS += ' yeti-notification-info';\r\n        break;\r\n\r\n      case \"success\":\r\n\r\n        wrapperCSS += ' yeti-notification-success';\r\n        break;\r\n\r\n      case \"warning\":\r\n\r\n        wrapperCSS += ' yeti-notification-warning';\r\n        break;\r\n\r\n      case \"warningAlt\":\r\n\r\n        wrapperCSS += ' yeti-notification-warning_alt';\r\n        break;\r\n\r\n      case \"\":\r\n      default:\r\n        break;\r\n\r\n    }\r\n\r\n    console.log(wrapperCSS)\r\n\r\n    // Set low-contrast mode\r\n    wrapperCSS += (this.isLowContrast) ? ' yeti-notification-low_contrast' : '';\r\n  \r\n\r\n    return ([\r\n      <div class={wrapperCSS} id={this.notificationId} role=\"status\">\r\n\r\n        <div class=\"yeti-notification-icon\">\r\n          \r\n          <span class=\"material-icons\" aria-hidden=\"true\">error</span>\r\n          <span class=\"yeti-a11y-hidden\">Error</span>\r\n\r\n        </div>\r\n\r\n\r\n        <div class=\"yeti-notification-content\">\r\n        \r\n          <div class=\"yeti-notification-content-title\">{this.textTitle}</div>\r\n          <div class=\"yeti-notification-content-subtitle\">\r\n\r\n            <slot />\r\n\r\n          </div>\r\n\r\n        </div>\r\n\r\n          \r\n        <button class=\"yeti-notification-close\">\r\n          <span class=\"material-icons\">close</span>\r\n        </button>\r\n\r\n      </div>\r\n    ]);\r\n  }\r\n\r\n\r\n\r\n  componentDidRender() {\r\n    let slot = this.el.querySelector(\".yeti-notification-trigger\").firstElementChild;\r\n    slot.setAttribute(\"tabindex\", \"0\");\r\n    slot.setAttribute(\"aria-describedby\",this.notificationId);\r\n  }\r\n\r\n}\r\n"],"mappings":"4FAOaA,EAAW,M,yCAQoC,G,sBAKvB,G,mBAKF,M,eAKL,c,YAQR,G,oBAQQ,G,cAOC,M,eAKC,I,CAI9B,gBAAAC,CAAiBC,GACfC,KAAKC,UAAY,MACjBF,EAAEG,2BACFH,EAAEI,gB,CAIJ,iBAAAC,GAEE,IAAIC,EAAcL,KAAKM,GAAGC,aAAa,MAEvC,IAAKF,GAAeA,GAAe,GAAI,CACrCA,EAAcG,EAAMC,mBACpBT,KAAKM,GAAGI,aAAa,KAAML,E,CAG7BL,KAAKW,eAAkBX,KAAKW,gBAAkB,GAAMX,KAAKW,eAAiB,GAAGN,QAC7EL,KAAKY,OAAUZ,KAAKY,QAAU,GAAMZ,KAAKY,OAAS,GAAGP,Q,CAIvD,MAAAQ,GAEE,IAAIC,EAAa,qBAAuBd,KAAKc,aAAe,IAAM,IAAId,KAAKc,aAAe,GAG1F,OAAQd,KAAKe,kBAEX,IAAK,QAEHD,GAAc,2BACd,MAEF,IAAK,OAEHA,GAAc,0BACd,MAEF,IAAK,UAEHA,GAAc,6BACd,MAEF,IAAK,UAEHA,GAAc,6BACd,MAEF,IAAK,aAEHA,GAAc,iCACd,MAQJE,QAAQC,IAAIH,GAGZA,GAAed,KAAkB,cAAI,kCAAoC,GAGzE,OACEkB,EAAA,OAAKC,MAAOL,EAAYM,GAAIpB,KAAKW,eAAgBU,KAAK,UAEpDH,EAAA,OAAKC,MAAM,0BAETD,EAAA,QAAMC,MAAM,iBAAgB,cAAa,QAAM,SAC/CD,EAAA,QAAMC,MAAM,oBAAkB,UAKhCD,EAAA,OAAKC,MAAM,6BAETD,EAAA,OAAKC,MAAM,mCAAmCnB,KAAKsB,WACnDJ,EAAA,OAAKC,MAAM,sCAETD,EAAA,eAOJA,EAAA,UAAQC,MAAM,2BACZD,EAAA,QAAMC,MAAM,kBAAgB,W,CASpC,kBAAAI,GACE,IAAIC,EAAOxB,KAAKM,GAAGmB,cAAc,8BAA8BC,kBAC/DF,EAAKd,aAAa,WAAY,KAC9Bc,EAAKd,aAAa,mBAAmBV,KAAKW,e"}