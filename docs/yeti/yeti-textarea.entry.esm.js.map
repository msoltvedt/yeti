{"version":3,"file":"yeti-textarea.entry.esm.js","sources":["src/components/yeti-textarea/yeti-textarea.tsx"],"sourcesContent":["import { Component, Prop, h, State, Event, EventEmitter, Element } from '@stencil/core';\r\nimport { utils } from '../../utils/utils';\r\n\r\n@Component({\r\n  tag: 'yeti-textarea',\r\n  shadow: false,\r\n})\r\nexport class YetiTextarea {\r\n\r\n  @Element() el: HTMLElement;\r\n\r\n  /**\r\n   * Event that fires when the user leaves (blurs) the input field.\r\n   */\r\n  @Event({ bubbles: true }) readyToVerifySlow: EventEmitter;\r\n\r\n  /**\r\n   * Event that fires when the user enters or changes the contents of the input field.\r\n   */\r\n  @Event({ bubbles: true }) readyToVerifyFast: EventEmitter;\r\n\r\n  /**\r\n   * CSS classlist applied to the actual HTML textarea element.\r\n   */\r\n  @Prop() textareaClass: string = '';\r\n\r\n  /**\r\n   * CSS classlist applied to the HTML wrapper around the element and associated elements.\r\n   */\r\n  @Prop() wrapperClass: string = '';\r\n\r\n  /**\r\n   * Whether or not the textarea is disabled.\r\n   */\r\n  @Prop() isDisabled: boolean = false;\r\n\r\n  /**\r\n   * Passthrough to the textarea's autocomplete attribute.\r\n   */\r\n  @Prop() autocomplete: string = '';\r\n\r\n  /**\r\n   * id applied to the actual HTML textarea element.\r\n   */\r\n  @Prop() textareaId: string = utils.generateUniqueId();\r\n\r\n  /**\r\n   * name applied to the actual HTML textarea element. Defaults to match id.\r\n   */\r\n  @Prop() textareaName: string = this.textareaId;\r\n\r\n  /**\r\n   * Optional attribute to set the maxlength of the field\r\n   */\r\n  @Prop({ attribute: \"textarea-maxlength\"}) maxlength?: number = 100000;\r\n\r\n  /**\r\n   * Whether the field is required to have a valid value or not.\r\n   */\r\n  @Prop() required: boolean = false;\r\n\r\n  /**\r\n   * Tracks whether the textarea's current value is valid or not.\r\n   */\r\n  @Prop({\r\n    mutable: true,\r\n    reflect: true\r\n  }) isValid: boolean = true;\r\n\r\n  /**\r\n   * The actual value of the textarea field.\r\n   */\r\n  @Prop({\r\n    mutable: true,\r\n    reflect: true\r\n  }) value: string = '';\r\n\r\n  /**\r\n   * The tabindex of the textarea field.\r\n   */\r\n  @Prop({\r\n    mutable: true,\r\n    reflect: true,\r\n  }) textareaTabindex: string = '';\r\n\r\n  /**\r\n   * id of an outside HTML element pointed to by the actual textarea element's aria-labeledby attribute.\r\n   */\r\n  @Prop() labeledBy?: string = \"\";\r\n\r\n  /**\r\n   * id of an outside HTML element pointed to by the actual textarea element's aria-describedby attribute.\r\n   */\r\n  @Prop() describedBy?: string = \"\";\r\n\r\n  /**\r\n   * Text description of what the textarea is or does\r\n   */\r\n  @Prop() description?: string = \"\";\r\n\r\n  /**\r\n   * Id of an HTML element that represents the character counter\r\n   */\r\n  @Prop() characterCounterId?: string = \"\";\r\n\r\n  /**\r\n   * Whether the user has focused and left (i.e. interacted with) the actual textarea element.\r\n   */\r\n  @State() isTouched: boolean = false;\r\n\r\n  /**\r\n   * How many characters long the textarea's value is.\r\n   */\r\n  @State() length: number = 0;\r\n\r\n  \r\n  private usesCharacterCounter: boolean = false;\r\n  private characterCounter: HTMLElement; // A reference to the actual HTML element that represents the character counter.\r\n\r\n  \r\n\r\n  handleKeyDown() {\r\n    // Any validation of a keystroke would go here.\r\n  }\r\n  \r\n\r\n\r\n  handleKeyUp(ev) {\r\n    this.isTouched = true;\r\n    this.value = ev.target.value;\r\n    this.length = this.value.length;\r\n    this.conformValueToMaxlength();\r\n    this.readyToVerifyFast.emit({\r\n      \"originalEvent\": ev,\r\n      \"yetiTextarea\": this.el,\r\n      \"value\": ev.target.value\r\n    });\r\n\r\n    if (this.usesCharacterCounter) {\r\n      this.updateCharacterCounter();\r\n    }\r\n  }\r\n\r\n\r\n\r\n  handleFieldBlur(ev) {\r\n    ev.stopImmediatePropagation();\r\n    this.isTouched = true;\r\n    this.value = ev.target.value;\r\n    this.readyToVerifySlow.emit({\r\n      \"originalEvent\": ev,\r\n      \"yetiTextarea\": this.el,\r\n      \"value\": ev.target.value\r\n    });\r\n  }\r\n\r\n\r\n\r\n  conformValueToMaxlength() {\r\n    // If the value is longer than maxlength we need to truncate it.\r\n    if (this.value.length > this.maxlength) {\r\n      this.value = this.value.substring(0, this.maxlength);\r\n      this.length = this.maxlength;\r\n    }\r\n  }\r\n\r\n\r\n\r\n  updateCharacterCounter() {\r\n\r\n    if (this.usesCharacterCounter) {\r\n      this.characterCounter.innerHTML = `${this.maxlength - this.length}/${this.maxlength} <span class='yeti-a11y-hidden'>characters remaining</span>`;\r\n    }\r\n  }\r\n\r\n\r\n\r\n  componentWillLoad() {\r\n    this.length = this.value.length;\r\n    this.conformValueToMaxlength();\r\n  }\r\n\r\n\r\n\r\n  componentDidLoad() {\r\n    // Verify value is within bounds initially\r\n    this.conformValueToMaxlength();\r\n\r\n    // Initialize private variables\r\n    try {\r\n      if (this.characterCounterId != \"\") {\r\n        // User supplied an id for the character counter. Use it if it points to an actual HTML element.\r\n        this.characterCounter = document.getElementById(this.characterCounterId) as HTMLElement;\r\n        this.usesCharacterCounter = true;\r\n        this.updateCharacterCounter();\r\n        this.describedBy += ` ${this.characterCounterId}`;\r\n      }\r\n    } catch(error) {\r\n      console.warn(`Yeti Textarea was unable to set a character counter element with the supplied id of ${this.characterCounterId}.`, error);\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n\r\n    let cssClasses = 'yeti-textarea';\r\n    let wrapperClasses = 'yeti-textarea-wrapper';\r\n\r\n    if (this.textareaClass != '') {\r\n      cssClasses += ' ' + this.textareaClass;\r\n    }\r\n\r\n    if (this.wrapperClass != '') {\r\n      wrapperClasses += ' ' + this.wrapperClass;\r\n    }\r\n\r\n    if (this.isValid == false) {\r\n      cssClasses += ' yeti-textarea__error';\r\n    }\r\n\r\n    return (\r\n      <div class={wrapperClasses}>\r\n        <textarea \r\n          class={cssClasses} \r\n          id={this.textareaId}\r\n          name={this.textareaName}\r\n          value={this.value}\r\n          onKeyDown={() => this.handleKeyDown()}\r\n          onKeyUp={(ev) => this.handleKeyUp(ev)}\r\n          onBlur={(ev) => this.handleFieldBlur(ev)}\r\n          aria-invalid={!this.isValid}\r\n          {...((this.isDisabled) ? {\"disabled\": this.isDisabled} : {})}\r\n          {...((this.autocomplete != \"\") ? {\"autocomplete\": this.autocomplete} : {})}\r\n          {...((this.textareaTabindex != \"\") ? {\"tabindex\": this.textareaTabindex} : {})}\r\n          {...((this.labeledBy != \"\") ? {\"aria-labelledby\": this.labeledBy} : {})}\r\n          {...((this.describedBy != \"\") ? {\"aria-describedby\": this.describedBy} : {})}\r\n          {...((this.description != \"\") ? {\"aria-description\": this.description} : {})}\r\n          {...((this.maxlength != 100000) ? {\"maxlength\": this.maxlength} : {})}>\r\n\r\n          {this.value}\r\n        \r\n        </textarea>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n"],"names":[],"mappings":"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"}