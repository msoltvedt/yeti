{"file":"yeti-accordion.entry.esm.js","mappings":"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","names":[],"sources":["src/components/yeti-accordion/yeti-accordion.tsx"],"sourcesContent":["import { Component, Prop, h, State, Element, Watch, Listen } from '@stencil/core';\nimport { utils } from '../../utils/utils';\n\n@Component({\n  tag: 'yeti-accordion',\n  shadow: false,\n})\nexport class YetiAccordion {\n\n  @Element() el: HTMLElement;\n\n  /**\n   * The 0-based index of the open section.\n   */\n  @Prop({\n    mutable: true,\n    reflect: true\n  }) openIndex: number = 0;\n \n  @Watch(\"openIndex\")\n  handleOpenIndexChange(newSectionIndex: number) {\n    this.openSection(newSectionIndex);\n  }\n\n  /**\n   * The total number of sections the Accordion has.\n   */\n  @Prop({\n    mutable: true,\n    reflect: true\n  }) sections: number = 0;\n\n  /**\n   * A list of the Accordion's yeti-accordion-section child elements\n   */\n  @Prop({\n    mutable: true\n  }) sectionElements: NodeList = null;\n\n  /**\n   * Whether or not to use wizard mode, in which you can only open one section at a time, and you have to go in order\n   */\n  @Prop() isWizard: boolean = false;\n\n  /**\n   * Used to toggle a re-render of the icon.\n   */\n  @State() iLoveJSX: boolean = false;\n\n\n\n  @Listen('accordionActionClick')\n  handleAccordionActionClicked(e) {\n\n    switch (e.detail.actionType) {\n\n      case \"previous\": {\n        if (e.detail.sectionIndex > 0) {\n          this.openSection(parseInt(e.detail.sectionIndex) - 1);\n        }\n        break;\n      }\n\n      case \"next\": {\n        if (e.detail.sectionIndex < this.sections-1 && e.detail.sectionStatus != \"error\") {\n          this.openSection(parseInt(e.detail.sectionIndex) + 1);\n        }\n        break;\n      }\n\n    }\n  }\n\n\n\n  @Listen('accordionSectionHeaderClick')\n  handleAccordionSectionHeaderClick(e) {\n\n    // User clicked on a section heading, toggle this pane's state and set the others accordingly.\n    let clickedSection = e.detail.section;\n\n    // First make sure it's openable\n    if (!clickedSection.isOpenable) {\n      this.openSection(this.openIndex); // It wasn't, so just open whatever we previously had as the open section.\n      return;\n    }\n\n    else {\n      if (clickedSection.isOpen) {\n        clickedSection.isOpen = false;\n      } else {\n        this.openSection(e.detail.sectionIndex);\n      }\n    }\n\n  }\n\n\n\n  openSection(suppliedIndex: number = 0) {\n    // Opens the section at suppliedIndex while closing the other sections.\n    this.sectionElements.forEach((sectionElements, index) => {\n      let section = sectionElements as HTMLElement;\n      let sectionHeader = section.querySelector(\".yeti-accordion-section-heading\") as HTMLElement;\n      let sectionStatus = section.getAttribute(\"status\");\n\n      if (index == suppliedIndex) {\n        section.setAttribute(\"is-openable\", \"true\");\n        section.setAttribute(\"status\", (sectionStatus == \"undefined\" ? \"reachable\" : sectionStatus));\n        section.setAttribute(\"is-open\", \"true\");\n        this.openIndex = index;\n        setTimeout(() => { \n          sectionHeader?.focus();\n        }, 100);\n      } else {\n        section.setAttribute(\"is-open\", \"false\");\n      }\n\n      // Set the Openable state\n      //section.setAttribute(\"is-openable\", `${ (index <= suppliedIndex)  ||  !this.isWizard }`);\n\n    });\n\n    this.openIndex = suppliedIndex;\n  }\n\n\n\n  componentWillLoad() {\n    // Populate the sectionElements array and do some initial set-up.\n    this.sectionElements = this.el.querySelectorAll('yeti-accordion-section');\n    this.sections = this.sectionElements.length;\n\n    if (!this.el.hasAttribute(\"id\")) {\n      this.el.setAttribute(\"id\", utils.generateUniqueId());\n    }\n\n    if (!this.sectionElements || this.sectionElements.length < 2) {\n      console.error(\"Yeti Accordion must have at least two yeti-accordion-section elements.\");\n      return;\n    }\n\n    this.sectionElements.forEach((sectionElement, index) => {\n\n      let section = (sectionElement as HTMLElement);\n\n      section.setAttribute(\"is-open\", `${(index == this.openIndex)}`);\n      section.setAttribute(\"index\", `${index}`);\n      section.setAttribute(\"of\", `${this.sectionElements.length}`);\n      section.setAttribute(\"is-openable\", `${section.hasAttribute(\"is-openable\") ? section.getAttribute(\"is-openable\") : (index <= this.openIndex)}`);\n      section.setAttribute(\"status\", `${section.hasAttribute(\"status\") ? section.getAttribute(\"status\") : (index == this.openIndex) ? \"reachable\" : \"undefined\"}`)\n      section.setAttribute(\"is-in-wizard\", `${this.isWizard}`);\n\n    });\n\n  }\n\n\n\n  render() {\n\n    return (\n\n        <div class=\"yeti-accordion\">\n\n          <slot />\n\n        </div>\n\n    );\n  }\n\n}"],"version":3}