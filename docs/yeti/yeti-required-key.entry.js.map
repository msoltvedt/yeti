{"file":"yeti-required-key.entry.esm.js","mappings":";;MAMa,eAAe;;;iCAOE,IAAI;wBAKJ,EAAE;;IAI9B,MAAM;QAEJ,IAAI,YAAY,GAAG,wBAAwB,CAAC;QAC5C,YAAY,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,IAAI,CAAC,QAAQ,EAAE,GAAG,EAAE,CAAC;QAE3D,QAEI,4DAAK,KAAK,EAAE,YAAY,IAErB,CAAC,CAAC,IAAI,CAAC,iBAAiB;YAEvB;gBACA,+BAA6C;gBAC7C,YAAM,KAAK,EAAC,8BAA8B,+BAAgC;aACzE;;gBAID,YAAM,KAAK,EAAC,8BAA8B,0BAA2B,CAInE,EAER;KACH;;;;;;","names":[],"sources":["src/components/yeti-required-key/yeti-required-key.tsx"],"sourcesContent":["import { Component, Prop, h, Element } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'yeti-required-key',\r\n  shadow: false,\r\n})\r\nexport class YetiRequiredKey {\r\n\r\n  @Element() el: HTMLElement;\r\n\r\n  /**\r\n   * Whether all fields are required (default) or not.\r\n   */\r\n  @Prop() allFieldsRequired = true;\r\n\r\n  /**\r\n   * CSS classlist applied to the wrapper element.\r\n   */\r\n  @Prop() cssClass?: string = '';\r\n\r\n\r\n\r\n  render() {\r\n\r\n    let wrapperClass = 'yeti-form-required-key';\r\n    wrapperClass += (this.cssClass) ? ` ${this.cssClass}` : ``;\r\n\r\n    return (\r\n\r\n        <div class={wrapperClass}>\r\n\r\n          {(!this.allFieldsRequired) ?\r\n\r\n            [\r\n            <yeti-required-symbol></yeti-required-symbol>,\r\n            <span class=\"yeti-form-required-key-label\">Indicates required field</span>\r\n            ]\r\n\r\n          :\r\n\r\n            <span class=\"yeti-form-required-key-label\">All fields required</span>\r\n\r\n          }\r\n\r\n        </div>\r\n\r\n    );\r\n  }\r\n\r\n}"],"version":3}