{"file":"yeti-progress-bar.entry.esm.js","mappings":";;;MAOa,eAAe;;;sBAOgC,EAAE;oBAKN,EAAE;kBAKN,EAAE;iBAQjC,EAAE;oBAQC,CAAC;iBAYC,EAAE;uBAKI,EAAE;2BAKE,EAAE;sBAKP,EAAE;iBAKN,KAAK;oBAKD,KAAK;;EAnClC,oBAAoB,CAAC,QAAgB;IACnC,IAAI,KAAK,CAAC,QAAQ,CAAC,IAAI,QAAQ,GAAG,CAAC,IAAI,QAAQ,GAAG,GAAG,EAAE;MACrD,OAAO,CAAC,IAAI,CAAC,qEAAqE,CAAC,CAAC;MACpF,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;KACnB;GACF;EAkCD,UAAU;IACR,IAAI,KAAK,GAAG,EAAE,CAAC;IAEf,IAAI,IAAI,CAAC,KAAK,EAAE;MACd,KAAK;QAEH,WAAK,KAAK,EAAC,yBAAyB,IAElC,YAAM,KAAK,EAAC,6CAA6C,YAAa,CAElE,CAAC;KAEV;IAED,IAAI,IAAI,CAAC,QAAQ,IAAI,GAAG,EAAE;MACxB,KAAK;QAEH,WAAK,KAAK,EAAC,yBAAyB,IAElC,YAAM,KAAK,EAAC,6CAA6C,iBAAa,MAAM,mBAAoB,EAChG,YAAM,KAAK,EAAC,kBAAkB,eAAgB,CAE1C,CAAC;KAEV;IAED,OAAO,KAAK,CAAC;GAEd;EAID,WAAW,CAAC,QAAgB;IAC1B,IAAI,KAAK,GAAG,EAAE,CAAC;IACf,IAAI,SAAS,GAAG,GAAG,IAAI,CAAC,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC;IAExD,IAAI,IAAI,CAAC,WAAW,IAAI,EAAE,IAAI,IAAI,CAAC,eAAe,IAAI,OAAO,EAAE;MAE7D,KAAK,GAAG,oBAAc,IAAI,EAAE,IAAI,CAAC,WAAW,EAAE,EAAE,EAAE,SAAS,IACzD,WAAK,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC,IAAG,IAAI,CAAC,KAAK,OAAE,YAAM,KAAK,EAAC,kBAAkB,IAAE,IAAI,CAAC,QAAQ,MAAS,CAAM,CAC/F,CAAC;KAEjB;SAAM;MAEL,KAAK,GAAG,WAAK,KAAK,EAAE,QAAQ,IAAG,IAAI,CAAC,KAAK,OAAE,YAAM,KAAK,EAAC,kBAAkB,IAAE,IAAI,CAAC,QAAQ,MAAS,CAAM,CAAC;KAEzG;IAED,OAAO,KAAK,CAAC;GAEd;EAID,iBAAiB,CAAC,UAAU,EAAE,QAAQ,EAAE,MAAM,EAAE,WAAW;IACvD,IAAI,WAAW,GAEb,yBACE,KAAK,EAAE,UAAU,EACjB,EAAE,EAAE,IAAI,CAAC,KAAK,KACT,CAAC,IAAI,CAAC,WAAW,IAAI,EAAE,IAAI,IAAI,CAAC,eAAe,IAAI,OAAO,IAAI,EAAC,QAAQ,EAAE,CAAC,EAAC,GAAG,EAAE,IAErF,WAAK,KAAK,EAAC,0BAA0B,IAElC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,EAE1B,IAAI,CAAC,UAAU,EAAE,CAEd,EAEN,WAAK,KAAK,EAAE,MAAM,iBAAc,MAAM,IAClC,WAAK,KAAK,EAAC,8BAA8B,EAAC,KAAK,EAAE,WAAW,GAAQ,CAClE,EAEL,CAAC,IAAI,CAAC,UAAU,IAAI,EAAE;MAErB,WAAK,KAAK,EAAC,uBAAuB,IAAE,IAAI,CAAC,UAAU,CAAO;;QAI1D,EAAE,CAIA,CAAA;IAER,OAAO,WAAW,CAAC;GACtB;EAID,iBAAiB;;IAGf,IAAI,WAAW,GAAG,IAAI,CAAC,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;IAE7C,IAAI,CAAC,WAAW,IAAI,WAAW,IAAI,EAAE,EAAE;MACrC,WAAW,GAAG,KAAK,CAAC,gBAAgB,EAAE,CAAC;MACvC,IAAI,CAAC,EAAE,CAAC,YAAY,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;KACzC;IAED,IAAI,CAAC,KAAK,GAAG,CAAC,IAAI,CAAC,KAAK,IAAI,EAAE,IAAI,IAAI,CAAC,KAAK,GAAG,GAAG,WAAW,MAAM,CAAC;IAEpE,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;GAC1C;EAID,MAAM;IAEJ,IAAI,UAAU,GAAG,mBAAmB,CAAC;IACrC,IAAI,QAAQ,GAAG,yBAAyB,CAAC;IACzC,IAAI,MAAM,GAAG,uBAAuB,CAAC;IACrC,IAAI,SAAS,GAAG,GAAG,IAAI,CAAC,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC;IAExD,UAAU,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,GAAG,IAAI,8BAA8B,GAAG,EAAE,CAAC;IAC3E,UAAU,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,2BAA2B,GAAG,EAAE,CAAC;IAE9D,UAAU,IAAI,CAAC,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,IAAI,EAAE,IAAI,GAAG,GAAG,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;IACtF,QAAQ,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,IAAI,EAAE,IAAI,GAAG,GAAG,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;IAC9E,MAAM,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,IAAI,EAAE,IAAI,GAAG,GAAG,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;IAEtE,IAAI,WAAW,GAAG;MACd,KAAK,EAAE,GAAG,IAAI,CAAC,QAAQ,GAAG;KAC7B,CAAC;IAEF,QAEE,CAAC,IAAI,CAAC,WAAW,IAAI,EAAE,IAAI,IAAI,CAAC,eAAe,IAAI,OAAO;MAExD,oBACE,IAAI,EAAE,IAAI,CAAC,WAAW,EACtB,QAAQ,EAAE,IAAI,CAAC,eAAe,EAC9B,EAAE,EAAE,SAAS,EACb,WAAW,EAAE,IAAI,IAEd,IAAI,CAAC,iBAAiB,CAAC,UAAU,EAAE,QAAQ,EAAE,MAAM,EAAE,WAAW,CAAC,CAEvD;;QAIf,IAAI,CAAC,iBAAiB,CAAC,UAAU,EAAE,QAAQ,EAAE,MAAM,EAAE,WAAW,CAAC,EAEnE;GACH;;;;;;;;;","names":[],"sources":["src/components/yeti-progress-bar/yeti-progress-bar.tsx"],"sourcesContent":["import { Component, Prop, h, State, Element, Watch } from '@stencil/core';\r\nimport { utils } from '../../utils/utils';\r\n\r\n@Component({\r\n  tag: 'yeti-progress-bar',\r\n  shadow: false,\r\n})\r\nexport class YetiProgressBar {\r\n\r\n  @Element() el: HTMLElement;\r\n\r\n  /**\r\n   * CSS classlist to add to the component's outer wrapper element.\r\n   */\r\n  @Prop({ attribute: 'wrapper-class'}) wrapperCSS: string = '';\r\n\r\n  /**\r\n   * CSS classlist to add to the component's actual label element.\r\n   */\r\n  @Prop({ attribute: 'label-class'}) labelCSS: string = '';\r\n\r\n  /**\r\n   * CSS classlist to add to the element representing the component's progress bar.\r\n   */\r\n  @Prop({ attribute: 'bar-class'}) barCSS: string = '';\r\n\r\n  /**\r\n   * id of the element representing the component's progress bar. Will be given an auto-generated unique id if one is not provided.\r\n   */\r\n  @Prop({\r\n    mutable: true,\r\n    reflect: true\r\n  }) barId: string = \"\"; // Set on load\r\n\r\n  /**\r\n   * Number between 0 and 100 that describes the percentage complete to display in the bar.\r\n   */\r\n  @Prop({\r\n    mutable: true,\r\n    reflect: true\r\n  }) progress: number = 0;\r\n  @Watch('progress')\r\n  handleProgressChange(newValue: number) {\r\n    if (isNaN(newValue) || newValue < 0 || newValue > 100) {\r\n      console.warn(\"Error in progress bar. Progress must be a number between 0 and 100.\");\r\n      this.progress = 0;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Text content for the component's label.\r\n   */\r\n  @Prop() label: string = \"\";\r\n\r\n  /**\r\n   * Text content for the component's tooltip.\r\n   */\r\n  @Prop() tooltipText: string = \"\";\r\n\r\n  /**\r\n   * Token list describing the component's tooltip's position relative to the bar: left | right and/or above | below.\r\n   */\r\n  @Prop() tooltipPosition: string = \"\";\r\n\r\n  /**\r\n   * Text content that appears beneath the bar as helper text.\r\n   */\r\n  @Prop() helperText: string = \"\";\r\n\r\n  /**\r\n   * Whether or not the bar should depict an error state.\r\n   */\r\n  @Prop() error: boolean = false;\r\n\r\n  /**\r\n   * Toggle to re-render the entire component.\r\n   */\r\n  @State() iLoveJSX: boolean = false;\r\n\r\n\r\n\r\n  renderIcon() {\r\n    let state = \"\";\r\n    \r\n    if (this.error) {\r\n      state = \r\n      \r\n        <div class=\"yeti-progress_bar-state\">\r\n\r\n          <span class=\"material-icons yeti-progress_bar-state-icon\">error</span>\r\n\r\n        </div>;\r\n\r\n    }\r\n\r\n    if (this.progress == 100) {\r\n      state = \r\n      \r\n        <div class=\"yeti-progress_bar-state\">\r\n\r\n          <span class=\"material-icons yeti-progress_bar-state-icon\" aria-hidden=\"true\">check_circle</span>\r\n          <span class=\"yeti-a11y-hidden\">Finished</span>\r\n\r\n        </div>;\r\n\r\n    }\r\n\r\n    return state;\r\n\r\n  }\r\n\r\n\r\n\r\n  renderLabel(labelCSS: string) {\r\n    let state = \"\";\r\n    let tooltipId = `${this.el.getAttribute(\"id\")}_tooltip`;\r\n    \r\n    if (this.tooltipText != \"\" && this.tooltipPosition != \"below\") {\r\n      \r\n      state = <yeti-tooltip text={this.tooltipText} id={tooltipId}>\r\n        <div class={labelCSS} tabIndex={0}>{this.label} <span class=\"yeti-a11y-hidden\">{this.progress}%</span></div>\r\n      </yeti-tooltip>;\r\n\r\n    } else {\r\n\r\n      state = <div class={labelCSS}>{this.label} <span class=\"yeti-a11y-hidden\">{this.progress}%</span></div>;\r\n\r\n    }\r\n\r\n    return state;\r\n\r\n  }\r\n\r\n\r\n\r\n  renderProgressBar(wrapperCSS, labelCSS, barCSS, actualStyle) {\r\n      let progressBar =\r\n\r\n        <div \r\n          class={wrapperCSS}\r\n          id={this.barId}\r\n          {...((this.tooltipText != \"\" && this.tooltipPosition == \"below\") ? {tabIndex: 0} : {})}>\r\n\r\n          <div class=\"yeti-progress_bar-header\">\r\n            \r\n            {this.renderLabel(labelCSS)}\r\n\r\n            {this.renderIcon()}\r\n\r\n          </div>\r\n\r\n          <div class={barCSS} aria-hidden=\"true\">\r\n              <div class=\"yeti-progress_bar-bar-actual\" style={actualStyle}></div>\r\n          </div>\r\n\r\n          {(this.helperText != \"\") ?\r\n          \r\n            <div class=\"yeti-progress_bar-tip\">{this.helperText}</div>\r\n\r\n          : \r\n            \r\n            \"\"\r\n\r\n          }\r\n\r\n        </div>\r\n\r\n      return progressBar;\r\n  }\r\n\r\n\r\n\r\n  componentWillLoad() {\r\n\r\n    // Set up ids\r\n    let componentId = this.el.getAttribute(\"id\");\r\n\r\n    if (!componentId || componentId == \"\") {\r\n      componentId = utils.generateUniqueId();\r\n      this.el.setAttribute(\"id\", componentId);\r\n    }\r\n\r\n    this.barId = (this.barId != \"\") ? this.barId : `${componentId}_bar`;\r\n\r\n    this.handleProgressChange(this.progress);\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n\r\n    let wrapperCSS = 'yeti-progress_bar';\r\n    let labelCSS = 'yeti-progress_bar-label';\r\n    let barCSS = 'yeti-progress_bar-bar';\r\n    let tooltipId = `${this.el.getAttribute(\"id\")}_tooltip`;\r\n\r\n    wrapperCSS += (this.progress == 100) ? \" yeti-progress_bar__complete\" : \"\";\r\n    wrapperCSS += (this.error) ? \" yeti-progress_bar__error\" : \"\";\r\n\r\n    wrapperCSS += (this.wrapperCSS && this.wrapperCSS != \"\") ? \" \" + this.wrapperCSS : \"\";\r\n    labelCSS += (this.labelCSS && this.labelCSS != \"\") ? \" \" + this.labelCSS : \"\";\r\n    barCSS += (this.barCSS && this.barCSS != \"\") ? \" \" + this.barCSS : \"\";\r\n\r\n    let actualStyle = {\r\n        width: `${this.progress}%`\r\n    };\r\n\r\n    return (\r\n\r\n      (this.tooltipText != \"\" && this.tooltipPosition == \"below\") ?\r\n\r\n        <yeti-tooltip \r\n          text={this.tooltipText} \r\n          position={this.tooltipPosition}\r\n          id={tooltipId}\r\n          blockAnchor={true}>\r\n            \r\n            {this.renderProgressBar(wrapperCSS, labelCSS, barCSS, actualStyle)}\r\n            \r\n        </yeti-tooltip>\r\n      \r\n      :\r\n        \r\n        this.renderProgressBar(wrapperCSS, labelCSS, barCSS, actualStyle)\r\n\r\n    );\r\n  }\r\n\r\n}"],"version":3}