{"file":"yeti-progress-bar.entry.esm.js","mappings":"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","names":[],"sources":["src/components/yeti-progress-bar/yeti-progress-bar.tsx"],"sourcesContent":["import { Component, Prop, h, State, Element, Watch } from '@stencil/core';\nimport { utils } from '../../utils/utils';\n\n@Component({\n  tag: 'yeti-progress-bar',\n  shadow: false,\n})\nexport class YetiProgressBar {\n\n  @Element() el: HTMLElement;\n\n  /**\n   * CSS classlist to add to the component's outer wrapper element.\n   */\n  @Prop() wrapperClass: string = '';\n\n  /**\n   * CSS classlist to add to the component's actual label element.\n   */\n  @Prop() labelClass: string = '';\n\n  /**\n   * CSS classlist to add to the element representing the component's progress bar.\n   */\n  @Prop() barClass: string = '';\n\n  /**\n   * id of the element representing the component's progress bar. Will be given an auto-generated unique id if one is not provided.\n   */\n  @Prop({\n    mutable: true,\n    reflect: true\n  }) barId: string = \"\"; // Set on load\n\n  /**\n   * Number between 0 and 100 that describes the percentage complete to display in the bar.\n   */\n  @Prop({\n    mutable: true,\n    reflect: true\n  }) progress: number = 0;\n  @Watch('progress')\n  handleProgressChange(newValue: number) {\n    if (isNaN(newValue) || newValue < 0 || newValue > 100) {\n      console.warn(\"Error in progress bar. Progress must be a number between 0 and 100.\");\n      this.progress = 0;\n    }\n  }\n\n  /**\n   * Text content for the component's label.\n   */\n  @Prop() label: string = \"\";\n\n  /**\n   * Text content for the component's tooltip.\n   */\n  @Prop() tooltipText: string = \"\";\n\n  /**\n   * Token list describing the component's tooltip's position relative to the bar: left | right and/or above | below.\n   */\n  @Prop() tooltipPosition: string = \"\";\n\n  /**\n   * Text content that appears beneath the bar as helper text.\n   */\n  @Prop() helperText: string = \"\";\n\n  /**\n   * Whether or not the bar should depict an error state.\n   */\n  @Prop() error: boolean = false;\n\n  /**\n   * Toggle to re-render the entire component.\n   */\n  @State() iLoveJSX: boolean = false;\n\n\n\n  renderIcon() {\n    let state = \"\";\n    \n    if (this.error) {\n      state = \n      \n        <div class=\"yeti-progress_bar-state\">\n\n          <span class=\"material-icons yeti-progress_bar-state-icon\">error</span>\n\n        </div>;\n\n    }\n\n    if (this.progress == 100) {\n      state = \n      \n        <div class=\"yeti-progress_bar-state\">\n\n          <span class=\"material-icons yeti-progress_bar-state-icon\" aria-hidden=\"true\">check_circle</span>\n          <span class=\"yeti-a11y-hidden\">Finished</span>\n\n        </div>;\n\n    }\n\n    return state;\n\n  }\n\n\n\n  renderLabel(labelClass: string) {\n    let state = \"\";\n    let tooltipId = `${this.el.getAttribute(\"id\")}_tooltip`;\n    \n    if (this.tooltipText != \"\" && this.tooltipPosition != \"below\") {\n      \n      state = <yeti-tooltip text={this.tooltipText} id={tooltipId}>\n        <div class={labelClass} tabIndex={0}>{this.label} <span class=\"yeti-a11y-hidden\">{this.progress}%</span></div>\n      </yeti-tooltip>;\n\n    } else {\n\n      state = <div class={labelClass}>{this.label} <span class=\"yeti-a11y-hidden\">{this.progress}%</span></div>;\n\n    }\n\n    return state;\n\n  }\n\n\n\n  renderProgressBar(wrapperClass, labelClass, barClass, actualStyle) {\n      let progressBar =\n\n        <div \n          class={wrapperClass}\n          id={this.barId}\n          {...((this.tooltipText != \"\" && this.tooltipPosition == \"below\") ? {tabIndex: 0} : {})}>\n\n          <div class=\"yeti-progress_bar-header\">\n            \n            {this.renderLabel(labelClass)}\n\n            {this.renderIcon()}\n\n          </div>\n\n          <div class={barClass} aria-hidden=\"true\">\n              <div class=\"yeti-progress_bar-bar-actual\" style={actualStyle}></div>\n          </div>\n\n          {(this.helperText != \"\") ?\n          \n            <div class=\"yeti-progress_bar-tip\">{this.helperText}</div>\n\n          : \n            \n            \"\"\n\n          }\n\n        </div>\n\n      return progressBar;\n  }\n\n\n\n  componentWillLoad() {\n\n    // Set up ids\n    let componentId = this.el.getAttribute(\"id\");\n\n    if (!componentId || componentId == \"\") {\n      componentId = utils.generateUniqueId();\n      this.el.setAttribute(\"id\", componentId);\n    }\n\n    this.barId = (this.barId != \"\") ? this.barId : `${componentId}_bar`;\n\n    this.handleProgressChange(this.progress);\n  }\n\n\n\n  render() {\n\n    let wrapperClass = 'yeti-progress_bar';\n    let labelClass = 'yeti-progress_bar-label';\n    let barClass = 'yeti-progress_bar-bar';\n    let tooltipId = `${this.el.getAttribute(\"id\")}_tooltip`;\n\n    wrapperClass += (this.progress == 100) ? \" yeti-progress_bar__complete\" : \"\";\n    wrapperClass += (this.error) ? \" yeti-progress_bar__error\" : \"\";\n\n    wrapperClass += (this.wrapperClass && this.wrapperClass != \"\") ? \" \" + this.wrapperClass : \"\";\n    labelClass += (this.labelClass && this.labelClass != \"\") ? \" \" + this.labelClass : \"\";\n    barClass += (this.barClass && this.barClass != \"\") ? \" \" + this.barClass : \"\";\n\n    let actualStyle = {\n        width: `${this.progress}%`\n    };\n\n    return (\n\n      (this.tooltipText != \"\" && this.tooltipPosition == \"below\") ?\n\n        <yeti-tooltip \n          text={this.tooltipText} \n          position={this.tooltipPosition}\n          id={tooltipId}\n          blockAnchor={true}>\n            \n            {this.renderProgressBar(wrapperClass, labelClass, barClass, actualStyle)}\n            \n        </yeti-tooltip>\n      \n      :\n        \n        this.renderProgressBar(wrapperClass, labelClass, barClass, actualStyle)\n\n    );\n  }\n\n}"],"version":3}