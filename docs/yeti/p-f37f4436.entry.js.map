{"version":3,"names":["YetiLoading","this","previouslyFocusedElement","shouldStealFocus","shouldReturnFocus","slottedContent","handleFocus","newValue","setBackgroundElementStyles","modalIsActivating","document","body","classList","add","remove","focusTrap","e","isActive","preventDefault","componentWillLoad","componentId","el","getAttribute","utils","generateUniqueId","setAttribute","innerHTML","trim","render","modalOverlayCSS","baseLoading","h","key","class","tabindex","viewBox","cx","cy","r","componentDidRender","loadingDiv","getElementsByClassName","activeElement","focus"],"sources":["src/components/yeti-loading/yeti-loading.tsx"],"sourcesContent":["import { Component, Prop, h, Element, Watch, Listen } from '@stencil/core';\nimport { utils } from '../../utils/utils';\n\n@Component({\n  tag: 'yeti-loading',\n  shadow: false,\n})\nexport class YetiLoading {\n\n  @Element() el: HTMLElement;\n\n  /**\n   * Whether to display the Loading pattern as a modal (covering its parent container) or as an inline-block object.\n   */\n  @Prop() isModal: boolean = false;\n\n  /**\n   * Tracks whether the Loader is displaying or not.\n   */\n  @Prop() isActive: boolean = false;\n  @Watch('isActive')\n  handleFocus(newValue: boolean) {\n    // When the Loading becomes active it should take focus away from whatever had it before, but\n    // we want to keep track of what that was so we can return focus if Loading becomes inactive.\n\n    // Becoming active, take focus\n    if (newValue) {\n      this.shouldStealFocus = true;\n      this.setBackgroundElementStyles(true);\n    }\n\n    // Becoming inactive, return focus\n    else {\n      this.shouldReturnFocus = true;\n      this.setBackgroundElementStyles(false);\n    }\n  }\n\n\n  previouslyFocusedElement: HTMLElement = null; // So we can return focus to wherever the user was when the Loading component appeared.\n  shouldStealFocus = false;\n  shouldReturnFocus = false;\n  slottedContent = null;\n\n\n  setBackgroundElementStyles(modalIsActivating: boolean) {\n    if (modalIsActivating) {\n        document.body.classList.add(\"yeti-modal-has_active_modal\");\n    } else {\n        document.body.classList.remove(\"yeti-modal-has_active_modal\");\n    }\n  }\n\n\n\n  @Listen('keydown')\n  focusTrap(e) {\n    if (this.isActive) {\n      e.preventDefault();\n    }\n  }\n\n\n  componentWillLoad() {\n    // Set up ids\n    let componentId = this.el.getAttribute(\"id\");\n\n    if (!componentId || componentId == \"\") {\n      componentId = utils.generateUniqueId();\n      this.el.setAttribute(\"id\", componentId);\n    }\n    \n    // Check to see if there's slotted content\n    let innerHTML = this.el.innerHTML.trim();\n\n    if (innerHTML != \"\" && innerHTML != \"<!---->\") {\n      this.slottedContent = innerHTML;\n    } else {\n      this.slottedContent = null;\n    }\n\n  }\n\n\n\n  render() {\n\n    let modalOverlayCSS = \"yeti-modal-overlay yeti-modal-overlay-light\";\n\n    let baseLoading =\n\n      <div class=\"yeti-loading\" tabindex=\"-1\">\n\n        <div class=\"yeti-loading-icon\">\n            <svg class=\"yeti-loading-icon-svg\" viewBox=\"0 0 100 100\" aria-hidden=\"true\">\n                <circle class=\"yeti-loading-icon-svg-circle\" cx=\"50%\" cy=\"50%\" r=\"44\"></circle>\n            </svg>\n        </div>\n\n        <div class=\"yeti-loading-label\">Loading...</div>\n\n        {(this.slottedContent == null && this.slottedContent != \"<!---->\") ?\n          \n          \"\"\n\n        :\n        \n          <div class=\"yeti-loading-content\">\n            \n            <slot />\n          \n          </div>\n        }\n\n      </div>\n\n    modalOverlayCSS += (this.isActive) ? \"\" : \" yeti-modal-overlay__inert\";\n\n    return (\n      (this.isModal) ?\n\n        <div class={modalOverlayCSS}>\n          <div class=\"yeti-modal yeti-modal-size-xs\">\n              {baseLoading}\n          </div>\n        </div>\n\n      :\n\n        baseLoading\n\n    );\n  }\n\n\n\n  componentDidRender() {\n    // Handle focus management. We can't do this when the property changes because the inactive state uses display: none,\n    // which interferes with the ability to accept focus depending on some race conditions.\n\n    if (this.shouldStealFocus) {\n      // Becoming active, take focus\n      let loadingDiv = this.el.getElementsByClassName(\"yeti-loading\")[0] as HTMLElement;\n      this.previouslyFocusedElement = document.activeElement as HTMLElement;\n      loadingDiv.focus();\n    }\n\n    if (this.shouldReturnFocus) {\n      // Becoming inactive, return focus\n      if (this.previouslyFocusedElement) {\n        this.previouslyFocusedElement.focus();\n      }\n    }\n\n    this.shouldStealFocus = false;\n    this.shouldReturnFocus = false;\n  }\n\n}\n"],"mappings":"4FAOaA,EAAW,M,yBAgCtBC,KAAAC,yBAAwC,KACxCD,KAAAE,iBAAmB,MACnBF,KAAAG,kBAAoB,MACpBH,KAAAI,eAAiB,K,aA5BU,M,cAKC,K,CAE5B,WAAAC,CAAYC,GAKV,GAAIA,EAAU,CACZN,KAAKE,iBAAmB,KACxBF,KAAKO,2BAA2B,K,KAI7B,CACHP,KAAKG,kBAAoB,KACzBH,KAAKO,2BAA2B,M,EAWpC,0BAAAA,CAA2BC,GACzB,GAAIA,EAAmB,CACnBC,SAASC,KAAKC,UAAUC,IAAI,8B,KACzB,CACHH,SAASC,KAAKC,UAAUE,OAAO,8B,EAOrC,SAAAC,CAAUC,GACR,GAAIf,KAAKgB,SAAU,CACjBD,EAAEE,gB,EAKN,iBAAAC,GAEE,IAAIC,EAAcnB,KAAKoB,GAAGC,aAAa,MAEvC,IAAKF,GAAeA,GAAe,GAAI,CACrCA,EAAcG,EAAMC,mBACpBvB,KAAKoB,GAAGI,aAAa,KAAML,E,CAI7B,IAAIM,EAAYzB,KAAKoB,GAAGK,UAAUC,OAElC,GAAID,GAAa,IAAMA,GAAa,gBAAW,CAC7CzB,KAAKI,eAAiBqB,C,KACjB,CACLzB,KAAKI,eAAiB,I,EAO1B,MAAAuB,GAEE,IAAIC,EAAkB,8CAEtB,IAAIC,EAEFC,EAAA,OAAAC,IAAA,2CAAKC,MAAM,eAAeC,SAAS,MAEjCH,EAAA,OAAAC,IAAA,2CAAKC,MAAM,qBACPF,EAAA,OAAAC,IAAA,2CAAKC,MAAM,wBAAwBE,QAAQ,cAAa,cAAa,QACjEJ,EAAA,UAAAC,IAAA,2CAAQC,MAAM,+BAA+BG,GAAG,MAAMC,GAAG,MAAMC,EAAE,SAIzEP,EAAA,OAAAC,IAAA,2CAAKC,MAAM,sBAAoB,cAE7BhC,KAAKI,gBAAkB,MAAQJ,KAAKI,gBAAkB,gBAEtD,GAIA0B,EAAA,OAAKE,MAAM,wBAETF,EAAA,eAORF,GAAoB5B,KAAa,SAAI,GAAK,6BAE1C,OACGA,KAAY,QAEX8B,EAAA,OAAKE,MAAOJ,GACVE,EAAA,OAAKE,MAAM,iCACNH,IAMPA,C,CAON,kBAAAS,GAIE,GAAItC,KAAKE,iBAAkB,CAEzB,IAAIqC,EAAavC,KAAKoB,GAAGoB,uBAAuB,gBAAgB,GAChExC,KAAKC,yBAA2BQ,SAASgC,cACzCF,EAAWG,O,CAGb,GAAI1C,KAAKG,kBAAmB,CAE1B,GAAIH,KAAKC,yBAA0B,CACjCD,KAAKC,yBAAyByC,O,EAIlC1C,KAAKE,iBAAmB,MACxBF,KAAKG,kBAAoB,K"}