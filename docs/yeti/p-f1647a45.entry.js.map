{"version":3,"names":["YetiTablePagination","utils","generateUniqueId","watchRecordsHandler","this","updatePages","updateIndices","watchRecordsDisplayed","paginationUpdated","emit","currentPage","selectedPage","recordsDisplayed","parseOptionElements","options","newItemsPerPageOptions","i","length","option","item","tagName","toLowerCase","attributes","selectedItemsPerPageOptionIndex","push","contents","parseInt","innerHTML","Number","isNaN","console","warn","itemsPerPageOptions","j","remove","getItemsPerPageOption","itemsPerPage","records","startIndex","Math","min","p","ceil","pages","handleItemsPerPageChange","e","select","target","selectedIndex","preventDefault","handlePageSelectChange","value","handlePreviousPageButtonClick","ev","max","handleNextPageButtonClick","componentWillLoad","optionElements","el","children","render","cssClasses","cssClass","h","key","class","htmlFor","recordAliasPlural","id","onChange","map","recordAliasSingular","Object","assign","selected","onClick","disabled","componentDidRender"],"sources":["src/components/yeti-table-pagination/yeti-table-pagination.tsx"],"sourcesContent":["import { Component, Prop, h, Element, State, Watch, Event, EventEmitter } from '@stencil/core';\nimport { utils } from '../../utils/utils';\n\n@Component({\n  tag: 'yeti-table-pagination',\n  shadow: false,\n})\nexport class YetiTablePagination {\n\n  @Event() paginationUpdated: EventEmitter;\n\n  @Element() el: HTMLElement;\n\n  @Prop() cssClass: string = '';\n\n  @Prop() htmlId: string = utils.generateUniqueId();\n\n  @Prop() records: number = 0;\n\n  @Prop() showOptions: boolean = true;\n\n  /**\n   * Descriptor of one record (e.g. \"1 item\")\n   */\n  @Prop() recordAliasSingular: string = \"item\";\n\n  /**\n   * Descriptor of multiple records (e.g. \"22 items\")\n   */\n  @Prop() recordAliasPlural: string = \"items\";\n\n  @Watch('records')\n  watchRecordsHandler() {\n    this.updatePages();\n    this.updateIndices();\n  }\n\n  @Prop({\n    reflect: true,\n    mutable: true\n  }) startIndex: number = 0;\n\n  @Prop({\n    reflect: true,\n    mutable: true\n  }) recordsDisplayed: number = 0;\n\n  @Watch('recordsDisplayed')\n  watchRecordsDisplayed() {\n    this.paginationUpdated.emit({\n      \"currentPage\": this.selectedPage-1,\n      \"recordsDisplayed\": this.recordsDisplayed\n    });\n  }\n\n  @State() itemsPerPageOptions: (number | string)[] = [10, 25, 50, 100, \"All\"];\n\n  @State() selectedItemsPerPageOptionIndex: number = 0;\n\n  @Prop({\n    reflect: true,\n    mutable: true\n  }) selectedPage: number = 1;\n\n  @State() pages: number = 1;\n\n\n\n  parseOptionElements(options: HTMLCollection) {\n\n    let newItemsPerPageOptions: Array<number | string> = [];\n\n    for (let i = 0; i < options.length; i++) {\n      \n      let option = options.item(i);\n      \n      // First, confirm this element is indeed a yeti-table-pagination-option element.\n      if (option.tagName.toLowerCase() == 'yeti-table-pagination-option') {\n\n        // Check to see if it has a selected attribute.\n        if (option.attributes && option.attributes['selected']) {\n          this.selectedItemsPerPageOptionIndex = i;\n        }\n\n        // Check to see if it has an all attribute, and push the string \"All\" if it does.\n        if (option.attributes && option.attributes['all']) {\n\n          newItemsPerPageOptions.push(\"All\");\n\n        } else {\n\n          // Check to see if it has a valid number for its contents, and warn if it doesn't.\n          let contents = parseInt(option.innerHTML);\n\n          if (!Number.isNaN(contents)) {\n\n            newItemsPerPageOptions.push(contents);\n\n          } else {\n            \n            console.warn(`Ignoring \\<yeti-table-pagination-option\\> with invalid value \\\"${option.innerHTML}\\\". Numbers only please.`);\n          \n          }\n\n        }\n\n      }\n\n    } // End for\n\n    // Update itemsPerPageOptions if necessary.\n    if (newItemsPerPageOptions.length > 0) {\n      this.itemsPerPageOptions = newItemsPerPageOptions;\n    }\n\n    // Finally, we need to remove the option elements.\n    for (let j = options.length - 1; j >= 0; --j) {\n      options.item(j).remove();\n    }\n\n  }\n\n\n\n  getItemsPerPageOption() {\n    return this.itemsPerPageOptions[ this.selectedItemsPerPageOptionIndex ];\n  }\n\n\n\n  updateIndices() {\n    let itemsPerPage = this.getItemsPerPageOption();\n\n    // First set start index\n    if (itemsPerPage == \"All\" || itemsPerPage as number > this.records) {\n\n      this.startIndex = 0;\n\n    } else {\n\n      this.startIndex = ((this.selectedPage - 1) * (itemsPerPage as number));\n\n    }\n\n    // Second set end index\n    if (itemsPerPage == \"All\" || itemsPerPage as number > this.records) {\n\n      this.recordsDisplayed = this.records;\n\n    } else {\n      \n      this.recordsDisplayed = Math.min(\n        (this.records - this.startIndex),\n        (itemsPerPage as number)\n      )\n\n    }\n\n  }\n\n\n\n  updatePages() {\n    let p = this.getItemsPerPageOption();\n    p = (p == \"All\") ? 1 : Math.ceil(this.records / (p as number));\n    this.pages = p;\n  }\n\n\n\n  handleItemsPerPageChange(e: Event) {\n    let select = e.target as HTMLSelectElement;\n    this.selectedItemsPerPageOptionIndex = select.selectedIndex;\n    this.selectedPage = 1;\n    this.updatePages();\n    this.updateIndices();\n    e.preventDefault();\n    this.paginationUpdated.emit({\n      \"currentPage\": this.selectedPage-1,\n      \"recordsDisplayed\": this.recordsDisplayed\n    });\n  }\n\n\n\n  handlePageSelectChange(e: Event) {\n    let select = e.target as HTMLSelectElement;\n    this.selectedPage = parseInt(select.value);\n    this.updateIndices();\n    e.preventDefault();\n    this.paginationUpdated.emit({\n      \"currentPage\": this.selectedPage-1,\n      \"recordsDisplayed\": this.recordsDisplayed\n    });\n  }\n\n\n\n  handlePreviousPageButtonClick(ev) {\n    this.selectedPage = Math.max(1, this.selectedPage - 1);\n    this.updateIndices();\n    ev.preventDefault();\n    this.paginationUpdated.emit({\n      \"currentPage\": this.selectedPage-1,\n      \"recordsDisplayed\": this.recordsDisplayed\n    });\n  }\n\n\n\n  handleNextPageButtonClick(ev) {\n    this.selectedPage = Math.min(this.pages, this.selectedPage + 1);\n    this.updateIndices();\n    ev.preventDefault();\n    this.paginationUpdated.emit({\n      \"currentPage\": this.selectedPage-1,\n      \"recordsDisplayed\": this.recordsDisplayed\n    });\n  }\n\n\n\n  componentWillLoad() {\n    let optionElements = this.el.children;\n\n    // Look for and handle any <yeti-table-pagnation-option> elements.\n    if (optionElements.length > 0) {\n      \n      this.parseOptionElements(optionElements);\n\n    }\n\n  }\n\n\n\n  render() {\n\n    let cssClasses = 'yeti-table-pagination';\n\n    //console.warn('Pagination render()', this.el);\n\n    if (this.cssClass != '') {\n      cssClasses += ' ' + this.cssClass;\n    }\n\n    return (\n      \n      <nav class={cssClasses} aria-label=\"Table Pagination\">\n\n        {/* Items per page */}\n        \n          <div class=\"yeti-table-pagination-items_per_page\">\n\n            { (this.showOptions) ?\n\n              \n              [<label htmlFor=\"demo-items_per_page\" class=\"yeti-table-pagination-items_per_page-label\">{this.recordAliasPlural} per page:</label>,\n\n              <select id=\"demo-items_per_page\" class=\"yeti-select yeti-table-pagination-items_per_page-select\" onChange={(e) => {\n                this.handleItemsPerPageChange(e);\n              }}>\n                {\n                  this.itemsPerPageOptions.map((option) => {\n                    return <option value={option} class=\"yeti-table-pagination-items_per_page-select-option\">{option}</option>\n                  })\n                }\n              </select>]\n\n            :\n              \n              \"\"\n            \n            }\n\n              <span class=\"yeti-table-pagination-items_per_page-count\">\n                { \n                  this.getItemsPerPageOption() == \"All\" || this.records == 0 ? \n                    \"\" \n                    : (this.startIndex + 1) + ' to ' + (this.startIndex + this.recordsDisplayed) /*(this.endIndex + 1)*/ + ' of '\n                }\n                {this.records} { this.records == 1 ? this.recordAliasSingular : this.recordAliasPlural}\n              </span>\n\n          </div>\n\n\n        {/* Pages */}\n        {\n          (this.records > 0) ?\n          <div class=\"yeti-table-pagination-pages\">\n\n              <label htmlFor=\"demo-pages\" class=\"yeti-a11y-hidden\">Page number, of {this.pages} page{this.pages == 1 ? '' : 's'}</label>\n\n              <select id=\"demo-pages\" class=\"yeti-select yeti-table-pagination-pages-select\" onChange={(e) => {\n                this.handlePageSelectChange(e);\n              }}>\n                  {(() => {\n                    let options = [];\n                    for (let i=1; i <= this.pages; i++) {\n                      options.push(<option value={i} class=\"yeti-table-pagination-pages-select-page\"  {...((i == this.selectedPage) && { selected: true })}>{i}</option>);\n                    }\n                    return options;\n                  })()}\n              </select>\n\n              <span class=\"yeti-table-pagination-pages-of_pages\" aria-hidden=\"true\">of {this.pages} page{this.pages == 1 ? '' : 's'}</span>\n\n              <ul class=\"yeti-table-pagination-pages-buttons\">\n\n                  <li class=\"yeti-table-pagination-pages-buttons-action\">\n\n                      <button \n                        class=\"yeti-table-pagination-pages-buttons-button\"\n                        onClick={(ev) => {this.handlePreviousPageButtonClick(ev)}}\n                        {...((this.selectedPage == 1) && { disabled: true })}\n                      >\n\n                          <span class=\"material-icons\" aria-hidden=\"true\">arrow_left</span>\n                          <span class=\"yeti-a11y-hidden\">Previous page</span>\n\n                      </button>\n\n                  </li>\n\n                  <li class=\"yeti-table-pagination-pages-buttons-action\">\n                    \n                      <button \n                        class=\"yeti-table-pagination-pages-buttons-button\"\n                        onClick={(ev) => {this.handleNextPageButtonClick(ev)}}\n                        {...((this.selectedPage == this.pages) && { disabled: true })}\n                      >\n                          <span class=\"material-icons\" aria-hidden=\"true\">arrow_right</span>\n                          <span class=\"yeti-a11y-hidden\">Next page</span>\n                      </button>\n\n                  </li>\n\n              </ul>\n\n          </div>\n          :\n          \"\"\n        }\n        \n    </nav>\n    );\n  }\n\n\n  componentDidRender() {\n    //console.warn(\"Pagination did render.\", this.el)\n    \n  }\n\n}\n"],"mappings":"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"}