{"version":3,"names":["YetiFileExplorer","handleItemClick","e","depth","index","path","currentTarget","getAttribute","parentPath","substring","lastIndexOf","parentFolder","this","getFolderFromPath","setNewSelectedTerminus","updatePath","isSelected","selectedIndex","fileExplorerChange","emit","iLoveJSX","targetPath","folderNamesInPath","slice","split","model","root","i","length","currentTargetFolderNames","content","map","name","indexOf","targetFolder","clearTerminusPath","isTerminus","terminus","currentStepNameInPath","renderFolders","folders","emptyFolder","isRoot","minDisplayDepth","push","renderFolder","workingFolder","folder","jsx","h","class","renderFolderContents","item","renderItem","buttonCSS","onClick","iconCode","alt","componentWillLoad","workingFolderContents","placeholderModel","offset","pageSize","totalElements","forEach","value","render","wrapperCSS","componentDidRender","folderElements","el","querySelectorAll","scrollIntoView","behavior","block"],"sources":["src/components/yeti-file-explorer/yeti-file-explorer.tsx"],"sourcesContent":["import { Component, Prop, h, State, Element, Event, EventEmitter } from '@stencil/core';\r\nimport { YetiFileSystem, YetiFileSystemItem } from '../../utils/utils';\r\n\r\n@Component({\r\n  tag: 'yeti-file-explorer',\r\n  shadow: false,\r\n})\r\nexport class YetiFileExplorer {\r\n\r\n  /**\r\n   * Fires when the user clicks a folder\r\n   */\r\n  @Event() fileExplorerChange: EventEmitter;\r\n\r\n  @Element() el: HTMLElement;\r\n\r\n  /**\r\n   * CSS classlist applied to the explorer wrapper element.\r\n   */\r\n  @Prop({ attribute: 'wrapper-css'}) wrapperCSS?: string = '';\r\n\r\n  /**\r\n   * Whether or not to show files (folders are always shown).\r\n   */\r\n  @Prop() showFiles: boolean = true;\r\n\r\n  /**\r\n   * Data model object that describes the state and contents of the explorable file system. See utils.js for details.\r\n   */\r\n  @Prop({ mutable: true }) model: YetiFileSystem;\r\n\r\n  /**\r\n   * The YetiFileFolderContent object that is the last selected item in the path\r\n   */\r\n  @Prop({ mutable: true }) terminus: YetiFileSystemItem;\r\n\r\n  /**\r\n   * Toggle to trigger a re-render of the whole component.\r\n   */\r\n  @State() iLoveJSX: boolean = false;\r\n\r\n\r\n\r\n  handleItemClick(e: Event, depth: number = 0, index: number = 0) {\r\n    // A folder or file was just clicked. Handle it.\r\n    let path = (e.currentTarget as HTMLElement).getAttribute(\"data-path\");\r\n    let parentPath = path.substring( 0, path.lastIndexOf(\"/\") );\r\n    let parentFolder = this.getFolderFromPath(parentPath);\r\n\r\n    // 1. Update terminus and path\r\n    this.setNewSelectedTerminus(path); // Update the isSelected state of everything in the file system to point to the thing that was just clicked.\r\n    this.updatePath(path);\r\n\r\n    // 2. Update parent folder\r\n    parentFolder.isSelected = true;\r\n    parentFolder.selectedIndex = index;\r\n    \r\n    // 3. Fire item selected event. Include isFolder and path.\r\n    this.fileExplorerChange.emit({\r\n      \"path\": path,\r\n      \"depth\": depth,\r\n      \"index\": index\r\n    });\r\n\r\n    // 4. Rerender\r\n    this.iLoveJSX = !this.iLoveJSX;\r\n  }\r\n\r\n\r\n  \r\n  updatePath(targetPath) {\r\n    let folderNamesInPath = (targetPath.slice(1)).split('/'); // Array of folder names, e.g. /root/path/to/terminus is [\"root\", \"path\", \"to\", \"terminus\"]\r\n    let currentTarget = this.model.root;\r\n\r\n    for (let i=0; i<folderNamesInPath.length; i++) {\r\n        \r\n      let currentTargetFolderNames = currentTarget.content.map( content => content.name );\r\n\r\n      currentTarget.isSelected = true;\r\n      currentTarget.selectedIndex = currentTargetFolderNames.indexOf( folderNamesInPath[i] );\r\n\r\n      currentTarget = currentTarget.content[\r\n        currentTargetFolderNames.indexOf( folderNamesInPath[i] )\r\n      ]; // Move to the next step down the path\r\n\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  setNewSelectedTerminus(targetPath) {\r\n    // Set the isSelected state of everything in the file system to reflect that the new terminus is at depth targetDepth and index targetIndex.\r\n\r\n    let targetFolder: YetiFileSystemItem; // The folder we're updating in this function\r\n\r\n    // 1. Navigate to the correct depth\r\n    targetFolder = this.getFolderFromPath( targetPath );\r\n\r\n    // 2. Reset the previous terminus to the unselected state\r\n    this.clearTerminusPath();\r\n\r\n    // 3. Update to the new terminus\r\n    this.model.root.isSelected = true;\r\n    targetFolder.isSelected = true;\r\n    targetFolder.isTerminus = true;\r\n    this.terminus = targetFolder;\r\n  }\r\n\r\n\r\n\r\n  clearTerminusPath() {\r\n    // Deselects all folders along the path to terminus and sets the terminus internal variable to null\r\n    if (!this.terminus) {\r\n      return;\r\n    } else {\r\n\r\n      // Terminus was set. Unset it and unselect every folder in its path.\r\n\r\n      let folderNamesInPath = (this.terminus.path.slice(1)).split('/'); // Array of folder names, e.g. /root/path/to/terminus is [\"root\", \"path\", \"to\", \"terminus\"]\r\n      let currentTarget = this.model.root;\r\n\r\n      for (let i=0; i<folderNamesInPath.length; i++) {\r\n        \r\n        let currentTargetFolderNames = currentTarget.content.map( content => content.name );\r\n        currentTarget = currentTarget.content[\r\n          currentTargetFolderNames.indexOf( folderNamesInPath[i] )\r\n        ]; // Move to the next step down the path\r\n        currentTarget.isSelected = false;\r\n        currentTarget.isTerminus = false;\r\n      }\r\n\r\n      this.terminus = null;\r\n\r\n    }\r\n  }\r\n\r\n\r\n\r\n  getFolderFromPath(path: string) {\r\n    // path will be of format /folder/subfolder/subsubfolder/fileorfoldername\r\n    let folderNamesInPath;\r\n    let currentTarget = this.model.root;\r\n\r\n    if (path == \"\") {\r\n      return this.model.root;\r\n    }\r\n\r\n    path = path.slice(1); // Remove the leading slash\r\n    folderNamesInPath = path.split('/');\r\n\r\n    for (let i=0; i<folderNamesInPath.length; i++) {\r\n      // Work through the whole path until currentTarget points at the last one.\r\n      let currentStepNameInPath = folderNamesInPath[i];\r\n      let currentTargetFolderNames = currentTarget.content.map( content => content.name );\r\n      currentTarget = currentTarget.content[\r\n        currentTargetFolderNames.indexOf(currentStepNameInPath)\r\n      ]\r\n    }\r\n\r\n    return currentTarget;\r\n  }\r\n\r\n\r\n\r\n  renderFolders() {\r\n    // Render all the displayed folders for the currently selected path.\r\n    let folders = [];\r\n    let emptyFolder: YetiFileSystemItem = {\r\n      name: \"\",\r\n      path: \"/\",\r\n      content: [],\r\n      selectedIndex: -1,\r\n      isRoot: false,\r\n      isSelected: false,\r\n      isTerminus: false\r\n    }\r\n\r\n    \r\n    // First, handle the initial or reset state where the path is empty\r\n    if (this.model.root.content.length == 0) {\r\n\r\n      for (let i=0; i<this.model.minDisplayDepth; i++) {\r\n        folders.push(\r\n          this.renderFolder(\r\n            (i == 0) ? this.model.root : emptyFolder // Show the root folder and then empty ones to fill out the rest of the display depth\r\n          )\r\n        )\r\n      }\r\n      \r\n    } else {\r\n\r\n      let workingFolder = this.model.root;\r\n      do {\r\n        folders.push(this.renderFolder(workingFolder));\r\n        workingFolder = workingFolder.content[ workingFolder.selectedIndex ];\r\n      } while (workingFolder && workingFolder.isSelected);\r\n\r\n    }\r\n\r\n    return folders;\r\n\r\n  }\r\n\r\n\r\n\r\n  renderFolder(folder: YetiFileSystemItem) {\r\n\r\n    let depth = folder.path.split(\"/\").length-1;\r\n\r\n    let jsx =\r\n\r\n      <div class=\"yeti-file_explorer-folder\">\r\n\r\n        <ul class=\"yeti-file_explorer-folder-items\">\r\n\r\n          {this.renderFolderContents(folder, depth)}\r\n\r\n        </ul>\r\n\r\n      </div>\r\n\r\n    return jsx;\r\n      \r\n  }\r\n\r\n\r\n\r\n  renderFolderContents(folder: YetiFileSystemItem, depth: number = -1) {\r\n\r\n    return folder.content.map((item, index) => {\r\n      return this.renderItem(item, depth, index);\r\n    });\r\n\r\n  }\r\n\r\n\r\n\r\n  renderItem(item: YetiFileSystemItem, depth: number = -1, index: number = -1) {\r\n\r\n    let buttonCSS = \"yeti-file_explorer-folder-item-wrapper\" + ((item.isSelected) ? \" yeti-file_explorer-folder-item-wrapper__selected\" : \"\");\r\n    let jsx = \r\n\r\n      <li class=\"yeti-file_explorer-folder-item\">\r\n\r\n          <button class={buttonCSS} onClick={(e) => { this.handleItemClick(e, depth, index); }} data-path={item.path}>\r\n\r\n              <yeti-icon iconCode=\"folder\" alt=\"subfolder\" icon-style=\"outlined\" class=\"yeti-file_explorer-folder-item-icon\"></yeti-icon>\r\n            \r\n              <span class=\"yeti-file_explorer-folder-item-name\">{item.name}</span>\r\n            \r\n              {/* {\r\n                (item.content.length) ? \r\n                  <yeti-icon iconCode=\"chevron_right\" alt=\"open subfolder\" class=\"yeti-file_explorer-folder-more\"></yeti-icon>\r\n                : \r\n                  \"\"\r\n              } */}\r\n\r\n              <yeti-icon iconCode=\"chevron_right\" alt=\"open subfolder\" class=\"yeti-file_explorer-folder-more\"></yeti-icon>\r\n        \r\n          </button>\r\n\r\n      </li>\r\n\r\n    return jsx;\r\n  }\r\n\r\n\r\n\r\n  componentWillLoad() {\r\n\r\n    let workingFolderContents: YetiFileSystemItem[];\r\n    \r\n    if (!this.model) {\r\n      // The model doesn't exist yet, so we have to create a dummy one.\r\n      let placeholderModel: YetiFileSystem = {\r\n        root: {\r\n          name: \"\",\r\n          path: \"/\",\r\n          content: [],\r\n          selectedIndex: -1,\r\n          offset: 0,\r\n          pageSize: 0,\r\n          totalElements: 0,\r\n          isRoot: true,\r\n          isSelected: false,\r\n          isTerminus: false\r\n        },\r\n        minDisplayDepth: 3\r\n      }\r\n\r\n      this.model = placeholderModel;\r\n    }\r\n\r\n    // Initialize path\r\n    workingFolderContents = this.model.root.content;\r\n\r\n    workingFolderContents.forEach((value, index) => {\r\n      if (value.isSelected) {\r\n        value.selectedIndex = index;\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n\r\n    let wrapperCSS = 'yeti-file_explorer-wrapper';\r\n\r\n    wrapperCSS += (this.wrapperCSS != '') ? ` ${this.wrapperCSS}` : '';\r\n\r\n    return (\r\n\r\n      <div class={wrapperCSS}>\r\n\r\n        <div class=\"yeti-file_explorer\">\r\n\r\n          <div class=\"yeti-file_explorer-folders\">\r\n\r\n            {this.renderFolders()}\r\n\r\n          </div>{/* /folders */}\r\n\r\n        </div>{/* /file_explorer */}\r\n\r\n      \r\n        <div class=\"yeti-file_explorer-path\">{(this.terminus) ? this.terminus.path : ''}</div>\r\n\r\n      </div>\r\n\r\n    );\r\n  }\r\n\r\n\r\n\r\n  componentDidRender() {\r\n    // Scroll the last folder into view\r\n    let folderElements = this.el.querySelectorAll(\".yeti-file_explorer-folder\");\r\n\r\n    if (folderElements && folderElements.length) {\r\n      folderElements[ folderElements.length-1 ].scrollIntoView({\r\n        behavior: \"smooth\",\r\n        block: \"nearest\"\r\n      });\r\n    }\r\n  }\r\n\r\n}"],"mappings":"+DAOaA,EAAgB,M,gGAY8B,G,eAK5B,K,2DAeA,K,CAI7B,eAAAC,CAAgBC,EAAUC,EAAgB,EAAGC,EAAgB,GAE3D,IAAIC,EAAQH,EAAEI,cAA8BC,aAAa,aACzD,IAAIC,EAAaH,EAAKI,UAAW,EAAGJ,EAAKK,YAAY,MACrD,IAAIC,EAAeC,KAAKC,kBAAkBL,GAG1CI,KAAKE,uBAAuBT,GAC5BO,KAAKG,WAAWV,GAGhBM,EAAaK,WAAa,KAC1BL,EAAaM,cAAgBb,EAG7BQ,KAAKM,mBAAmBC,KAAK,CAC3Bd,KAAQA,EACRF,MAASA,EACTC,MAASA,IAIXQ,KAAKQ,UAAYR,KAAKQ,Q,CAKxB,UAAAL,CAAWM,GACT,IAAIC,EAAqBD,EAAWE,MAAM,GAAIC,MAAM,KACpD,IAAIlB,EAAgBM,KAAKa,MAAMC,KAE/B,IAAK,IAAIC,EAAE,EAAGA,EAAEL,EAAkBM,OAAQD,IAAK,CAE7C,IAAIE,EAA2BvB,EAAcwB,QAAQC,KAAKD,GAAWA,EAAQE,OAE7E1B,EAAcU,WAAa,KAC3BV,EAAcW,cAAgBY,EAAyBI,QAASX,EAAkBK,IAElFrB,EAAgBA,EAAcwB,QAC5BD,EAAyBI,QAASX,EAAkBK,I,EAS1D,sBAAAb,CAAuBO,GAGrB,IAAIa,EAGJA,EAAetB,KAAKC,kBAAmBQ,GAGvCT,KAAKuB,oBAGLvB,KAAKa,MAAMC,KAAKV,WAAa,KAC7BkB,EAAalB,WAAa,KAC1BkB,EAAaE,WAAa,KAC1BxB,KAAKyB,SAAWH,C,CAKlB,iBAAAC,GAEE,IAAKvB,KAAKyB,SAAU,CAClB,M,KACK,CAIL,IAAIf,EAAqBV,KAAKyB,SAAShC,KAAKkB,MAAM,GAAIC,MAAM,KAC5D,IAAIlB,EAAgBM,KAAKa,MAAMC,KAE/B,IAAK,IAAIC,EAAE,EAAGA,EAAEL,EAAkBM,OAAQD,IAAK,CAE7C,IAAIE,EAA2BvB,EAAcwB,QAAQC,KAAKD,GAAWA,EAAQE,OAC7E1B,EAAgBA,EAAcwB,QAC5BD,EAAyBI,QAASX,EAAkBK,KAEtDrB,EAAcU,WAAa,MAC3BV,EAAc8B,WAAa,K,CAG7BxB,KAAKyB,SAAW,I,EAOpB,iBAAAxB,CAAkBR,GAEhB,IAAIiB,EACJ,IAAIhB,EAAgBM,KAAKa,MAAMC,KAE/B,GAAIrB,GAAQ,GAAI,CACd,OAAOO,KAAKa,MAAMC,I,CAGpBrB,EAAOA,EAAKkB,MAAM,GAClBD,EAAoBjB,EAAKmB,MAAM,KAE/B,IAAK,IAAIG,EAAE,EAAGA,EAAEL,EAAkBM,OAAQD,IAAK,CAE7C,IAAIW,EAAwBhB,EAAkBK,GAC9C,IAAIE,EAA2BvB,EAAcwB,QAAQC,KAAKD,GAAWA,EAAQE,OAC7E1B,EAAgBA,EAAcwB,QAC5BD,EAAyBI,QAAQK,G,CAIrC,OAAOhC,C,CAKT,aAAAiC,GAEE,IAAIC,EAAU,GACd,IAAIC,EAAkC,CACpCT,KAAM,GACN3B,KAAM,IACNyB,QAAS,GACTb,eAAgB,EAChByB,OAAQ,MACR1B,WAAY,MACZoB,WAAY,OAKd,GAAIxB,KAAKa,MAAMC,KAAKI,QAAQF,QAAU,EAAG,CAEvC,IAAK,IAAID,EAAE,EAAGA,EAAEf,KAAKa,MAAMkB,gBAAiBhB,IAAK,CAC/Ca,EAAQI,KACNhC,KAAKiC,aACFlB,GAAK,EAAKf,KAAKa,MAAMC,KAAOe,G,MAK9B,CAEL,IAAIK,EAAgBlC,KAAKa,MAAMC,KAC/B,EAAG,CACDc,EAAQI,KAAKhC,KAAKiC,aAAaC,IAC/BA,EAAgBA,EAAchB,QAASgB,EAAc7B,c,OAC9C6B,GAAiBA,EAAc9B,W,CAI1C,OAAOwB,C,CAMT,YAAAK,CAAaE,GAEX,IAAI5C,EAAQ4C,EAAO1C,KAAKmB,MAAM,KAAKI,OAAO,EAE1C,IAAIoB,EAEFC,EAAA,OAAKC,MAAM,6BAETD,EAAA,MAAIC,MAAM,mCAEPtC,KAAKuC,qBAAqBJ,EAAQ5C,KAMzC,OAAO6C,C,CAMT,oBAAAG,CAAqBJ,EAA4B5C,GAAiB,GAEhE,OAAO4C,EAAOjB,QAAQC,KAAI,CAACqB,EAAMhD,IACxBQ,KAAKyC,WAAWD,EAAMjD,EAAOC,I,CAOxC,UAAAiD,CAAWD,EAA0BjD,GAAiB,EAAGC,GAAiB,GAExE,IAAIkD,EAAY,0CAA6CF,EAAe,WAAI,oDAAsD,IACtI,IAAIJ,EAEFC,EAAA,MAAIC,MAAM,kCAEND,EAAA,UAAQC,MAAOI,EAAWC,QAAUrD,IAAQU,KAAKX,gBAAgBC,EAAGC,EAAOC,EAAM,EAAG,YAAagD,EAAK/C,MAElG4C,EAAA,aAAWO,SAAS,SAASC,IAAI,YAAW,aAAY,WAAWP,MAAM,wCAEzED,EAAA,QAAMC,MAAM,uCAAuCE,EAAKpB,MASxDiB,EAAA,aAAWO,SAAS,gBAAgBC,IAAI,iBAAiBP,MAAM,qCAMzE,OAAOF,C,CAKT,iBAAAU,GAEE,IAAIC,EAEJ,IAAK/C,KAAKa,MAAO,CAEf,IAAImC,EAAmC,CACrClC,KAAM,CACJM,KAAM,GACN3B,KAAM,IACNyB,QAAS,GACTb,eAAgB,EAChB4C,OAAQ,EACRC,SAAU,EACVC,cAAe,EACfrB,OAAQ,KACR1B,WAAY,MACZoB,WAAY,OAEdO,gBAAiB,GAGnB/B,KAAKa,MAAQmC,C,CAIfD,EAAwB/C,KAAKa,MAAMC,KAAKI,QAExC6B,EAAsBK,SAAQ,CAACC,EAAO7D,KACpC,GAAI6D,EAAMjD,WAAY,CACpBiD,EAAMhD,cAAgBb,C,KAQ5B,MAAA8D,GAEE,IAAIC,EAAa,6BAEjBA,GAAevD,KAAKuD,YAAc,GAAM,IAAIvD,KAAKuD,aAAe,GAEhE,OAEElB,EAAA,OAAKC,MAAOiB,GAEVlB,EAAA,OAAKC,MAAM,sBAETD,EAAA,OAAKC,MAAM,8BAERtC,KAAK2B,kBAOVU,EAAA,OAAKC,MAAM,2BAA4BtC,KAAa,SAAIA,KAAKyB,SAAShC,KAAO,I,CASnF,kBAAA+D,GAEE,IAAIC,EAAiBzD,KAAK0D,GAAGC,iBAAiB,8BAE9C,GAAIF,GAAkBA,EAAezC,OAAQ,CAC3CyC,EAAgBA,EAAezC,OAAO,GAAI4C,eAAe,CACvDC,SAAU,SACVC,MAAO,W"}