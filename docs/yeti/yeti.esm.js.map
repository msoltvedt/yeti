{"version":3,"names":["patchBrowser","importMeta","url","opts","resourcesUrl","URL","href","promiseResolve","then","options","bootstrapLazy","tableClass","tableId","noMatchesText","records","contents","sortSelf","filterSelf","paginateSelf","iLoveJSX","firstRecordIndexToDisplay","numRecordsToDisplay","paginationComponent","filtersAreActive","inputId","inputName","type","fieldClass","label","tip","required","errorMessage","isValid","defaultValue","autovalidate","isDirty","wrapperCSS","labelCSS","barCSS","barId","progress","tooltipText","tooltipPosition","helperText","error","first","middle","last","iconCode","iconCSS","iconId","alt","focusable","isModal","isActive","cssClass","htmlId","useGrid","showOptions","recordAliasSingular","recordAliasPlural","startIndex","recordsDisplayed","selectedPage","itemsPerPageOptions","selectedItemsPerPageOptionIndex","pages","inputClass","value","describedBy","isTouched","buttonCSS","menuCSS","buttonId","buttonType","menuId","menuAlignment","hasTooltip","labelledBy","isOpen","cursorPosition","facadeId","actualId","actualName","placeholder","showClear","numSelections","cursorDate","isPickerVisible","pickerJustOpened","tooltipCSS","text","position","slotId","tipId","blockAnchor"],"sources":["node_modules/@stencil/core/internal/client/patch-browser.js","@lazy-browser-entrypoint?app-data=conditional"],"sourcesContent":["/*\n Stencil Client Patch Browser v4.0.1 | MIT Licensed | https://stenciljs.com\n */\nimport { BUILD, NAMESPACE } from '@stencil/core/internal/app-data';\nimport { consoleDevInfo, doc, promiseResolve, H } from '@stencil/core';\nconst patchBrowser = () => {\n    // NOTE!! This fn cannot use async/await!\n    if (BUILD.isDev && !BUILD.isTesting) {\n        consoleDevInfo('Running in development mode.');\n    }\n    if (BUILD.cloneNodeFix) {\n        // opted-in to polyfill cloneNode() for slot polyfilled components\n        patchCloneNodeFix(H.prototype);\n    }\n    if (BUILD.profile && !performance.mark) {\n        // not all browsers support performance.mark/measure (Safari 10)\n        // because the mark/measure APIs are designed to write entries to a buffer in the browser that does not exist,\n        // simply stub the implementations out.\n        // TODO(STENCIL-323): Remove this patch when support for older browsers is removed (breaking)\n        // @ts-ignore\n        performance.mark = performance.measure = () => {\n            /*noop*/\n        };\n        performance.getEntriesByName = () => [];\n    }\n    // @ts-ignore\n    const scriptElm = BUILD.scriptDataOpts\n        ? Array.from(doc.querySelectorAll('script')).find((s) => new RegExp(`\\/${NAMESPACE}(\\\\.esm)?\\\\.js($|\\\\?|#)`).test(s.src) ||\n            s.getAttribute('data-stencil-namespace') === NAMESPACE)\n        : null;\n    const importMeta = import.meta.url;\n    const opts = BUILD.scriptDataOpts ? (scriptElm || {})['data-opts'] || {} : {};\n    if (importMeta !== '') {\n        opts.resourcesUrl = new URL('.', importMeta).href;\n    }\n    return promiseResolve(opts);\n};\nconst patchCloneNodeFix = (HTMLElementPrototype) => {\n    const nativeCloneNodeFn = HTMLElementPrototype.cloneNode;\n    HTMLElementPrototype.cloneNode = function (deep) {\n        if (this.nodeName === 'TEMPLATE') {\n            return nativeCloneNodeFn.call(this, deep);\n        }\n        const clonedNode = nativeCloneNodeFn.call(this, false);\n        const srcChildNodes = this.childNodes;\n        if (deep) {\n            for (let i = 0; i < srcChildNodes.length; i++) {\n                // Node.ATTRIBUTE_NODE === 2, and checking because IE11\n                if (srcChildNodes[i].nodeType !== 2) {\n                    clonedNode.appendChild(srcChildNodes[i].cloneNode(true));\n                }\n            }\n        }\n        return clonedNode;\n    };\n};\nexport { patchBrowser };\n","export { setNonce } from '@stencil/core';\nimport { bootstrapLazy } from '@stencil/core';\nimport { patchBrowser } from '@stencil/core/internal/client/patch-browser';\nimport { globalScripts } from '@stencil/core/internal/app-globals';\npatchBrowser().then(options => {\n  globalScripts();\n  return bootstrapLazy([/*!__STENCIL_LAZY_DATA__*/], options);\n});\n"],"mappings":"sFAKA,MAAMA,EAAe,KAyBjB,MAAMC,cAAyBC,IAC/B,MAAMC,EAAqE,GAC3E,GAAIF,IAAe,GAAI,CACnBE,EAAKC,aAAe,IAAIC,IAAI,IAAKJ,GAAYK,IACrD,CACI,OAAOC,EAAeJ,EAAK,EC/B/BH,IAAeQ,MAAKC,GAEXC,EAAc,gCAA8B,CAAAC,WAAS,kBAAAC,QAAA,eAAAC,cAAA,sBAAAC,QAAA,IAAAC,SAAA,KAAAC,SAAA,gBAAAC,WAAA,kBAAAC,aAAA,oBAAAC,SAAA,KAAAC,0BAAA,KAAAC,oBAAA,KAAAC,oBAAA,KAAAC,iBAAA,wOAAAC,QAAA,eAAAC,UAAA,iBAAAC,KAAA,IAAAC,WAAA,kBAAAC,MAAA,IAAAC,IAAA,IAAAC,SAAA,IAAAC,aAAA,uBAAAC,QAAA,kBAAAC,aAAA,oBAAAC,aAAA,IAAAC,QAAA,oGAAAC,WAAA,oBAAAC,SAAA,kBAAAC,OAAA,gBAAAC,MAAA,gBAAAC,SAAA,OAAAZ,MAAA,IAAAa,YAAA,mBAAAC,gBAAA,uBAAAC,WAAA,kBAAAC,MAAA,IAAAzB,SAAA,2CAAA0B,MAAA,IAAAC,OAAA,IAAAC,KAAA,uCAAAC,SAAA,WAAAC,QAAA,eAAAC,OAAA,cAAAC,IAAA,IAAAC,UAAA,IAAAjC,SAAA,2CAAAkC,QAAA,eAAAC,SAAA,wFAAAC,SAAA,gBAAAC,OAAA,iBAAAC,QAAA,8DAAAF,SAAA,gBAAAC,OAAA,cAAA1C,QAAA,IAAA4C,YAAA,mBAAAC,oBAAA,4BAAAC,kBAAA,0BAAAC,WAAA,qBAAAC,iBAAA,2BAAAC,aAAA,uBAAAC,oBAAA,KAAAC,gCAAA,KAAAC,MAAA,yCAAAC,WAAA,kBAAA3C,QAAA,eAAAC,UAAA,iBAAAK,SAAA,IAAAE,QAAA,kBAAAoC,MAAA,OAAAC,YAAA,mBAAAC,UAAA,2EAAAlC,WAAA,oBAAAmC,UAAA,mBAAAC,QAAA,iBAAAC,SAAA,mBAAAC,WAAA,kBAAAC,OAAA,iBAAAlC,YAAA,mBAAAmC,cAAA,qBAAAC,WAAA,kBAAAT,MAAA,OAAAU,WAAA,kBAAAT,YAAA,mBAAA5D,QAAA,KAAA6D,UAAA,KAAAnD,SAAA,KAAA4D,OAAA,KAAAC,eAAA,mGAAAzB,SAAA,gBAAA0B,SAAA,mBAAAC,SAAA,mBAAAC,WAAA,qBAAArD,SAAA,IAAA8C,cAAA,qBAAA5C,QAAA,kBAAAoC,MAAA,OAAAU,WAAA,kBAAAT,YAAA,mBAAAe,YAAA,IAAAC,UAAA,iBAAA5E,QAAA,KAAA6D,UAAA,KAAAgB,cAAA,KAAAnE,SAAA,KAAA4D,OAAA,KAAAC,eAAA,oHAAAb,WAAA,kBAAA3C,QAAA,kBAAAC,UAAA,oBAAAK,SAAA,IAAAE,QAAA,kBAAAoC,MAAA,OAAAU,WAAA,kBAAAT,YAAA,mBAAAC,UAAA,KAAAiB,WAAA,KAAApE,SAAA,KAAAqE,gBAAA,KAAAC,iBAAA,6IAAArD,WAAA,oBAAAsD,WAAA,oBAAAC,KAAA,IAAAC,SAAA,IAAAC,OAAA,iBAAAC,MAAA,gBAAAC,YAAA,mBAAA5E,SAAA,8EAAAV"}