{"file":"yeti-titletip.entry.esm.js","mappings":"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","names":[],"sources":["src/components/yeti-titletip/yeti-titletip.tsx"],"sourcesContent":["import { Component, Prop, h, State, Element, Listen } from '@stencil/core';\nimport { utils } from '../../utils/utils';\n@Component({\n  tag: 'yeti-titletip',\n  shadow: false,\n})\nexport class YetiTitleTip {\n\n  @Element() el: HTMLElement;\n\n  /**\n   * CSS classlist to add to the element serving as the component's wrapper.\n   */\n  @Prop() wrapperClass: string = '';\n\n  /**\n   * CSS classlist to add to the actual titletip element.\n   */\n  @Prop() titletipClass: string = '';\n\n  /**\n   * Text value to display as the titletip's contents.\n   */\n  @Prop() text: string = \"I'm a helpful titletip.\";\n\n  /**\n   * Token list to describe the titletip's position relative to its anchor: left | right and/or above | below.\n   */\n  @Prop() position: string = \"above\";\n\n  /**\n   * Boolean value that sets whether the titletip opens on hover/focus (default) or on click.\n   */\n  @Prop() clickToOpen: boolean = false;\n\n  /**\n   * id of the component's slot element.\n   */\n  @Prop({\n    mutable: true,\n    reflect: true\n  }) slotId: string = \"\"; // Set on load\n\n  /**\n   * id of the component's actual element corresponding to the titletip. Will be auto-populated with a unique value if not provided.\n   */\n  @Prop({\n    mutable: true,\n    reflect: true\n  }) tipId: string = \"\"; // Set on load\n\n  /**\n   * Whether the anchor should be forced to be a CSS display block style or left as is.\n   */\n  @Prop() blockAnchor: boolean = false;\n\n  /**\n   * Whether the titletip should remain open permanently.\n   */\n  @Prop() forceOpen: boolean = false;\n\n  /**\n   * Toggle to force a re-render of the whole component.\n   */\n  @State() iLoveJSX: boolean = false;\n\n  /**\n   * Whether the titletip has been clicked open or not.\n   */\n  @State() isClickedOpen: boolean = false;\n\n  justClickedClosed: boolean = false;\n\n\n  @Listen('mouseover')\n  handleSlotHover() {\n    if (!this.clickToOpen) {\n      this.scrollTitletipIntoView();\n    }\n  }\n\n\n\n  @Listen('focusin')\n  handleSlotFocus() {\n    if (!this.clickToOpen) {\n      this.scrollTitletipIntoView();\n    }\n  }\n\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n  scrollTitletipIntoView() {\n    let actual = this.el.querySelector(\".yeti-titletip\");\n    actual.scrollIntoView({\n      behavior: \"smooth\",\n      block: \"nearest\"\n    });\n  }\n\n\n\n  componentWillLoad() {\n    // Set up ids\n    let componentId = this.el.getAttribute(\"id\");\n\n    if (!componentId || componentId == \"\") {\n      componentId = utils.generateUniqueId();\n      this.el.setAttribute(\"id\", componentId);\n    }\n\n    this.tipId = (this.tipId != \"\") ? this.tipId : `${componentId}_tip`;\n    this.slotId = (this.slotId != \"\") ? this.slotId : `${componentId}_slot`;\n  }\n\n\n  render() {\n\n    let wrapperClass = 'yeti-titletip-wrapper';\n    let tipClass = 'yeti-titletip';\n\n    wrapperClass += (this.wrapperClass != '') ? ` ${this.wrapperClass}` : '';\n    tipClass += (this.titletipClass != '') ? ` ${this.titletipClass}` : '';\n\n  \n\n\n\n    switch (this.position) {\n\n      case \"right\":\n\n        tipClass += \" yeti-titletip-right\";\n        break;\n\n      case \"below\":\n\n        tipClass += \" yeti-titletip-below\";\n        break;\n\n      case \"left\":\n\n        tipClass += \" yeti-titletip-left\";\n        break;\n\n      case \"below-left\":\n\n        tipClass += \" yeti-titletip-below-left\";\n        break;\n\n      case \"below-right\":\n\n        tipClass += \" yeti-titletip-below-right\";\n        break;\n\n      case \"above-left\":\n\n        tipClass += \" yeti-titletip-above-left\";\n        break;\n\n      case \"above-right\":\n\n        tipClass += \" yeti-titletip-above-right\";\n        break;\n\n    }\n\n    return ([\n      <div class={wrapperClass}>\n\n        <div \n \n       \n        >\n\n          <slot />\n\n        </div>\n\n\n        <div class={tipClass}>\n\n          <div class=\"yeti-titletip-content\" id={this.tipId}>{this.text}</div>\n\n        </div>\n\n      </div>\n    ]);\n  }\n\n\n\n  componentDidRender() {\n    let slot = this.el.querySelector(\".yeti-titletip-trigger\").firstElementChild;\n    let trigger = this.el.querySelector(\".yeti-titletip-trigger\") as HTMLElement;\n    //slot.setAttribute(\"tabindex\", \"0\");\n    slot.setAttribute(\"aria-describedby\",this.tipId);\n\n    if (this.justClickedClosed && trigger) {\n      // The user just clicked the tooltip closed. Restore focus to the trigger.\n      this.justClickedClosed = false;\n      trigger.focus();\n    }\n\n  }\n\n}\n"],"version":3}