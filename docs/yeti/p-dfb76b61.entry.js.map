{"version":3,"names":["YetiReorderee","handleUpTrigger","event","console","log","this","reorderRequested","emit","assignedId","isUp","isDisabled","render","wrapperClass","h","key","class","componentDidLoad","upTrigger","el","querySelector","addEventListener","e"],"sources":["src/components/yeti-reorderee/yeti-reorderee.tsx"],"sourcesContent":["import { Component, Prop, h, State, Element, Event, EventEmitter } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'yeti-reorderee',\r\n  shadow: false,\r\n})\r\nexport class YetiReorderee {\r\n\r\n  @Element() el: HTMLElement;\r\n\r\n\r\n  @Event() reorderRequested: EventEmitter;\r\n\r\n\r\n  /**\r\n   * Id of the HTML element that should move this reorderee up the order when clicked.\r\n   */\r\n  @Prop() assignedId: string = '';\r\n\r\n  /**\r\n   * CSS class list that should apply to the HTML element wrapping the slotted content.\r\n   */\r\n  @Prop() wrapperClass?: string = '';\r\n\r\n  /**\r\n   * Id of the HTML element that should move this reorderee up the order when clicked.\r\n   */\r\n  @Prop() upTrigger: string = '';\r\n\r\n  /**\r\n   * Id of the HTML element that should move this reorderee up the order when clicked.\r\n   */\r\n  @Prop() downTrigger: string = '';\r\n\r\n  /**\r\n   * Used to toggle a re-render of the icon.\r\n   */\r\n  @State() iLoveJSX: boolean = false;\r\n\r\n  handleUpTrigger(event: MouseEvent) {\r\n    console.log('up trigger!', event);\r\n    this.reorderRequested.emit({\r\n      \"assignedId\": this.assignedId,\r\n      \"isUp\": true,\r\n      \"isDisabled\": false\r\n    });\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    let wrapperClass = \"yeti-reorderee\";\r\n\r\n    if (this.wrapperClass != '') {\r\n      wrapperClass += ` ${this.wrapperClass}`;\r\n    }\r\n\r\n    return (\r\n\r\n        <li class={wrapperClass}><slot /></li>\r\n\r\n    );\r\n  }\r\n\r\n\r\n\r\n  componentDidLoad() {\r\n    // Register click handlers on up and down triggers\r\n    let upTrigger = this.el.querySelector(`#${this.upTrigger}`);\r\n    //let downTrigger = this.el.querySelector(`#${this.downTrigger}`);\r\n    \r\n    if (upTrigger) {\r\n      upTrigger.addEventListener(\"click\", (e: MouseEvent) => { this.handleUpTrigger(e) });\r\n    }\r\n  }\r\n\r\n}"],"mappings":"+DAMaA,EAAa,M,4FAWK,G,kBAKG,G,eAKJ,G,iBAKE,G,cAKD,K,CAE7B,eAAAC,CAAgBC,GACdC,QAAQC,IAAI,cAAeF,GAC3BG,KAAKC,iBAAiBC,KAAK,CACzBC,WAAcH,KAAKG,WACnBC,KAAQ,KACRC,WAAc,O,CAKlB,MAAAC,GAEE,IAAIC,EAAe,iBAEnB,GAAIP,KAAKO,cAAgB,GAAI,CAC3BA,GAAgB,IAAIP,KAAKO,c,CAG3B,OAEIC,EAAA,MAAAC,IAAA,2CAAIC,MAAOH,GAAcC,EAAA,QAAAC,IAAA,6C,CAO/B,gBAAAE,GAEE,IAAIC,EAAYZ,KAAKa,GAAGC,cAAc,IAAId,KAAKY,aAG/C,GAAIA,EAAW,CACbA,EAAUG,iBAAiB,SAAUC,IAAoBhB,KAAKJ,gBAAgBoB,EAAE,G"}