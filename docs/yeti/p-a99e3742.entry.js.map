{"version":3,"names":["YetiToast","constructor","hostRef","this","actualClass","toastType","isHighContrast","showCloseButton","iconCode","iconAltText","textTitle","size","actionLabel","slotId","toastId","closesSelfAfter","iLoveJSX","isClosed","handleCloseClick","e","stopImmediatePropagation","preventDefault","handleActionClick","toastActionClick","emit","componentWillLoad","componentId","el","getAttribute","utils","generateUniqueId","setAttribute","setTimeout","render","altText","wrapperClass","h","key","class","id","role","onClick"],"sources":["src/components/yeti-toast/yeti-toast.tsx"],"sourcesContent":["import { Component, Prop, h, State, Element, Event, EventEmitter } from '@stencil/core';\r\nimport { utils } from '../../utils/utils';\r\n\r\n@Component({\r\n  tag: 'yeti-toast',\r\n  shadow: false,\r\n})\r\nexport class YetiToast {\r\n\r\n  @Element() el: HTMLElement;\r\n\r\n  /**\r\n   * Fires when the user clicks the action button.\r\n   */\r\n  @Event({ bubbles: true }) toastActionClick: EventEmitter;\r\n\r\n\r\n  /**\r\n   * CSS classlist to add to the element serving as the component's wrapper.\r\n   */\r\n  @Prop() actualClass: string = '';\r\n\r\n  /**\r\n   * The type of toast: error (default) | info | success | warning | warningAlt.\r\n   */\r\n  @Prop() toastType: string = \"\";\r\n\r\n  /**\r\n   * Whether to use the high-contrast variant or not.\r\n   */\r\n  @Prop() isHighContrast: boolean = false;\r\n\r\n  /**\r\n   * Whether to show the close button or not.\r\n   */\r\n  @Prop() showCloseButton: boolean = true;\r\n\r\n  /**\r\n   * Which icon to use (see Google Material Icons).\r\n   */\r\n  @Prop() iconCode: string = \"\";\r\n\r\n  /**\r\n   * The alt text for the icon.\r\n   */\r\n  @Prop() iconAltText: string = \"\";\r\n\r\n  /**\r\n   * Text value to display as the toast's title.\r\n   */\r\n  @Prop() textTitle: string = \"Mmmm Toast!\";\r\n\r\n  /**\r\n   * Optionally set a size (currently only supports default and \"full\")\r\n   */\r\n  @Prop() size: string = \"\";\r\n\r\n  /**\r\n   * Text label for the action button.\r\n   */\r\n  @Prop() actionLabel: string = \"\";\r\n\r\n  /**\r\n   * id of the component's slot element.\r\n   */\r\n  @Prop({\r\n    mutable: true,\r\n    reflect: true\r\n  }) slotId: string = \"\"; // Set on load\r\n\r\n  /**\r\n   * id of the component's actual element corresponding to the tooltip. Will be auto-populated with a unique value if not provided.\r\n   */\r\n  @Prop({\r\n    mutable: true,\r\n    reflect: true\r\n  }) toastId: string = \"\"; // Set on load\r\n\r\n  /**\r\n   * Time in ms before the Toast closes itself. Values of less than 1 will be ignored.\r\n   */\r\n  @Prop() closesSelfAfter: number = 0;\r\n\r\n  /**\r\n   * Toggle to force a re-render of the whole component.\r\n   */\r\n  @State() iLoveJSX: boolean = false;\r\n\r\n  /**\r\n   * Whether the toast is closed or not.\r\n   */\r\n  @Prop() isClosed: boolean = false;\r\n\r\n\r\n\r\n  handleCloseClick(e) {\r\n\r\n    e.stopImmediatePropagation();\r\n    e.preventDefault();\r\n    this.isClosed = true;\r\n\r\n  }\r\n\r\n\r\n\r\n  handleActionClick(e) {\r\n    this.toastActionClick.emit();\r\n    e.stopImmediatePropagation();\r\n    e.preventDefault();\r\n  }\r\n\r\n\r\n\r\n  componentWillLoad() {\r\n    // Set up ids\r\n    let componentId = this.el.getAttribute(\"id\");\r\n\r\n    if (!componentId || componentId == \"\") {\r\n      componentId = utils.generateUniqueId();\r\n      this.el.setAttribute(\"id\", componentId);\r\n    }\r\n\r\n    this.toastId = (this.toastId != \"\") ? this.toastId : `${componentId}_tip`;\r\n    this.slotId = (this.slotId != \"\") ? this.slotId : `${componentId}_slot`;\r\n\r\n    if (this.closesSelfAfter > 0) {\r\n      setTimeout(() => {\r\n        this.isClosed = true;\r\n      }, this.closesSelfAfter);\r\n    }\r\n\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    let altText = this.iconAltText;\r\n    let iconCode = this.iconCode;\r\n    let wrapperClass = 'yeti-toast-wrapper';\r\n    let actualClass = 'yeti-toast';\r\n    actualClass += (this.size == 'full') ? ' yeti-toast_full' : '';\r\n    actualClass += (this.actualClass !== '') ? ` ${this.actualClass}` : ``;\r\n\r\n    wrapperClass += (this.isClosed) ? ' yeti-toast-wrapper__closed' : '';\r\n\r\n    // Set type-based CSS class\r\n    switch (this.toastType) {\r\n\r\n      case \"error\":\r\n\r\n        actualClass += ' yeti-toast-error';\r\n        altText = (altText != '') ? altText : 'Error';\r\n        iconCode = (iconCode != '') ? iconCode : 'error';\r\n        break;\r\n\r\n      case \"success\":\r\n\r\n        actualClass += ' yeti-toast-success';\r\n        altText = (altText != '') ? altText : 'Success';\r\n        iconCode = (iconCode != '') ? iconCode : 'check_circle';\r\n        break;\r\n\r\n      case \"warning\":\r\n\r\n        actualClass += ' yeti-toast-warning';\r\n        altText = (altText != '') ? altText : 'Warning';\r\n        iconCode = (iconCode != '') ? iconCode : 'warning';\r\n        break;\r\n\r\n      case \"\":\r\n      case \"info\":\r\n      default:\r\n\r\n        actualClass += ' yeti-toast-info';\r\n        altText = (altText != '') ? altText : 'Information';\r\n        iconCode = (iconCode != '') ? iconCode : 'info';\r\n        break;\r\n\r\n    }\r\n    \r\n\r\n    // Set low-contrast mode\r\n    actualClass += (this.isHighContrast) ? ' yeti-toast-high_contrast' : '';\r\n  \r\n\r\n    return (\r\n      <div class={wrapperClass}>\r\n\r\n        <div class={actualClass} id={this.toastId} role=\"status\">\r\n\r\n          <div class=\"yeti-toast-icon\">\r\n            \r\n            <span class=\"material-icons\" aria-hidden=\"true\">{iconCode}</span>\r\n            <span class=\"yeti-a11y-hidden\">{altText}</span>\r\n\r\n          </div>\r\n\r\n\r\n          <div class=\"yeti-toast-content\">\r\n\r\n            <div class=\"yeti-toast-content-text\">\r\n          \r\n              {\r\n                (this.textTitle != \"\") ?\r\n                  <div class=\"yeti-toast-content-text-title\">{this.textTitle}</div>\r\n                :\r\n                  ''\r\n              }\r\n              <div class=\"yeti-toast-content-text-copy\">\r\n\r\n                <slot />\r\n\r\n              </div>\r\n\r\n            </div>\r\n\r\n\r\n            {\r\n              (this.actionLabel != \"\") ?\r\n\r\n                <button class=\"yeti-toast-action yeti-button yeti-button-tertiary yeti-button-size-xs\" onClick={(e) => this.handleActionClick(e)}>\r\n                  {this.actionLabel}\r\n                </button>\r\n              :\r\n                \"\"\r\n            }\r\n\r\n          </div>\r\n\r\n          {\r\n            (this.showCloseButton) ?\r\n\r\n              <button class=\"yeti-toast-close\" onClick={(e) => this.handleCloseClick(e)}>\r\n                <span class=\"material-icons\">close</span>\r\n              </button>\r\n            :\r\n              \"\"\r\n          }\r\n\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n\r\n}"],"mappings":"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","ignoreList":[]}