{"version":3,"names":["YetiTooltip","handleSlotHover","this","scrollTooltipIntoView","handleSlotFocus","actual","el","querySelector","scrollIntoView","behavior","block","componentWillLoad","componentId","getAttribute","utils","generateUniqueId","setAttribute","tipId","slotId","render","wrapperCSS","tipClass","position","h","class","id","text","componentDidRender","slot","nextElementSibling"],"sources":["src/components/yeti-tooltip/yeti-tooltip.tsx"],"sourcesContent":["import { Component, Prop, h, State, Element, Listen } from '@stencil/core';\r\nimport { utils } from '../../utils/utils';\r\n\r\n@Component({\r\n  tag: 'yeti-tooltip',\r\n  shadow: false,\r\n})\r\nexport class YetiTooltip {\r\n\r\n  @Element() el: HTMLElement;\r\n\r\n  /**\r\n   * CSS classlist to add to the element serving as the component's wrapper.\r\n   */\r\n  @Prop({ attribute: 'wrapper-class'}) wrapperCSS: string = '';\r\n\r\n  /**\r\n   * CSS classlist to add to the actual tooltip element.\r\n   */\r\n  @Prop({ attribute: 'tooltip-class'}) tooltipCSS: string = '';\r\n\r\n  /**\r\n   * Text value to display as the tooltip's contents.\r\n   */\r\n  @Prop() text: string = \"I'm a helpful tooltip.\";\r\n\r\n  /**\r\n   * Token list to describe the tooltip's position relative to its anchor: left | right and/or above | below.\r\n   */\r\n  @Prop() position: string = \"above\";\r\n\r\n  /**\r\n   * id of the component's slot element.\r\n   */\r\n  @Prop({\r\n    mutable: true,\r\n    reflect: true\r\n  }) slotId: string = \"\"; // Set on load\r\n\r\n  /**\r\n   * id of the component's actual element corresponding to the tooltip. Will be auto-populated with a unique value if not provided.\r\n   */\r\n  @Prop({\r\n    mutable: true,\r\n    reflect: true\r\n  }) tipId: string = \"\"; // Set on load\r\n\r\n  /**\r\n   * Whether the anchor should be forced to be a CSS display block style or left as is.\r\n   */\r\n  @Prop() blockAnchor: boolean = false;\r\n\r\n  /**\r\n   * Toggle to force a re-render of the whole component.\r\n   */\r\n  @State() iLoveJSX: boolean = false;\r\n\r\n\r\n\r\n  @Listen('mouseover')\r\n  handleSlotHover() {\r\n    this.scrollTooltipIntoView();\r\n  }\r\n\r\n\r\n\r\n  @Listen('focusin')\r\n  handleSlotFocus() {\r\n    this.scrollTooltipIntoView();\r\n  }\r\n\r\n\r\n\r\n  scrollTooltipIntoView() {\r\n    let actual = this.el.querySelector(\".yeti-tooltip\");\r\n    actual.scrollIntoView({\r\n      behavior: \"smooth\",\r\n      block: \"nearest\"\r\n    });\r\n  }\r\n\r\n\r\n\r\n  componentWillLoad() {\r\n    // Set up ids\r\n    let componentId = this.el.getAttribute(\"id\");\r\n\r\n    if (!componentId || componentId == \"\") {\r\n      componentId = utils.generateUniqueId();\r\n      this.el.setAttribute(\"id\", componentId);\r\n    }\r\n\r\n    this.tipId = (this.tipId != \"\") ? this.tipId : `${componentId}_tip`;\r\n    this.slotId = (this.slotId != \"\") ? this.slotId : `${componentId}_slot`;\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    let wrapperCSS = 'yeti-tooltip-wrapper';\r\n    let tipClass = 'yeti-tooltip';\r\n\r\n    wrapperCSS += (this.blockAnchor) ? ' yeti-tooltip-wrapper-has_block_anchor' : '';\r\n\r\n    switch (this.position) {\r\n\r\n      case \"right\":\r\n\r\n        tipClass += \" yeti-tooltip-right\";\r\n        break;\r\n\r\n      case \"below\":\r\n\r\n        tipClass += \" yeti-tooltip-below\";\r\n        break;\r\n\r\n      case \"left\":\r\n\r\n        tipClass += \" yeti-tooltip-left\";\r\n        break;\r\n\r\n    }\r\n\r\n    return ([\r\n      <div class={wrapperCSS}>\r\n\r\n        <div class={tipClass}>\r\n\r\n          <div class=\"yeti-tooltip-content\" id={this.tipId}>{this.text}</div>\r\n          \r\n        </div>\r\n\r\n\r\n        <slot />\r\n\r\n      </div>\r\n    ]);\r\n  }\r\n\r\n\r\n\r\n  componentDidRender() {\r\n    let slot = this.el.querySelector(\".yeti-tooltip\").nextElementSibling;\r\n    slot.setAttribute(\"tabindex\", \"0\");\r\n    slot.setAttribute(\"aria-describedby\",this.tipId);\r\n  }\r\n\r\n}\r\n"],"mappings":"4FAOaA,EAAW,M,yCAOoC,G,gBAKA,G,UAKnC,yB,cAKI,Q,YAQP,G,WAQD,G,iBAKY,M,cAKF,K,CAK7B,eAAAC,GACEC,KAAKC,uB,CAMP,eAAAC,GACEF,KAAKC,uB,CAKP,qBAAAA,GACE,IAAIE,EAASH,KAAKI,GAAGC,cAAc,iBACnCF,EAAOG,eAAe,CACpBC,SAAU,SACVC,MAAO,W,CAMX,iBAAAC,GAEE,IAAIC,EAAcV,KAAKI,GAAGO,aAAa,MAEvC,IAAKD,GAAeA,GAAe,GAAI,CACrCA,EAAcE,EAAMC,mBACpBb,KAAKI,GAAGU,aAAa,KAAMJ,E,CAG7BV,KAAKe,MAASf,KAAKe,OAAS,GAAMf,KAAKe,MAAQ,GAAGL,QAClDV,KAAKgB,OAAUhB,KAAKgB,QAAU,GAAMhB,KAAKgB,OAAS,GAAGN,Q,CAIvD,MAAAO,GAEE,IAAIC,EAAa,uBACjB,IAAIC,EAAW,eAEfD,GAAelB,KAAgB,YAAI,yCAA2C,GAE9E,OAAQA,KAAKoB,UAEX,IAAK,QAEHD,GAAY,sBACZ,MAEF,IAAK,QAEHA,GAAY,sBACZ,MAEF,IAAK,OAEHA,GAAY,qBACZ,MAIJ,OACEE,EAAA,OAAKC,MAAOJ,GAEVG,EAAA,OAAKC,MAAOH,GAEVE,EAAA,OAAKC,MAAM,uBAAuBC,GAAIvB,KAAKe,OAAQf,KAAKwB,OAK1DH,EAAA,c,CAQN,kBAAAI,GACE,IAAIC,EAAO1B,KAAKI,GAAGC,cAAc,iBAAiBsB,mBAClDD,EAAKZ,aAAa,WAAY,KAC9BY,EAAKZ,aAAa,mBAAmBd,KAAKe,M"}