{"version":3,"names":["YetiAccordionSection","this","index","utils","generateUniqueId","handleSectionClick","e","preventDefault","stopImmediatePropagation","accordionSectionHeaderClick","emit","originalEvent","section","el","sectionIndex","sectionStatus","status","isOpen","handleActionClick","actionType","stopPropagation","accordionActionClick","renderStatusIcon","h","iconCode","alt","iconClass","renderActions","hasActions","name","actions","push","class","onClick","of","Object","assign","isInWizard","disabled","tabIndex","componentWillLoad","potentialActionsSlot","querySelector","elementsTaggedAsActions","querySelectorAll","forEach","element","addEventListener","getAttribute","render","wrapperCSS","key","id","headingId","sectionId","isOpenable","heading","role"],"sources":["src/components/yeti-accordion-section/yeti-accordion-section.tsx"],"sourcesContent":["import { Component, Prop, h, State, Element, Event, EventEmitter } from '@stencil/core';\r\nimport { utils } from '../../utils/utils';\r\n\r\n@Component({\r\n  tag: 'yeti-accordion-section',\r\n  shadow: false,\r\n})\r\nexport class YetiAccordionSection {\r\n\r\n  @Element() el: HTMLElement;\r\n\r\n  @Event() accordionActionClick: EventEmitter;\r\n\r\n  @Event() accordionSectionHeaderClick: EventEmitter;\r\n\r\n  /**\r\n   * The descriptive text that appears in the heading bar above the content.\r\n   */\r\n  @Prop({\r\n    mutable: true,\r\n    reflect: true\r\n  }) heading: string = 'Heading';\r\n\r\n  /**\r\n   * Whether or not to automatically number the section headings\r\n   */\r\n  @Prop({\r\n    mutable: true,\r\n    reflect: true\r\n  }) isNumbered: boolean = true;\r\n\r\n  /**\r\n   * The 0-based index of this section relative to its peers. This should only be set by the parent Accordion component.\r\n   */\r\n  @Prop({\r\n    mutable: true,\r\n    reflect: true\r\n  }) index: number = 0;\r\n\r\n  /**\r\n   * The total number of sections the parent Accordion has. Should only be set by the parent.\r\n   */\r\n  @Prop({\r\n    mutable: true,\r\n    reflect: true\r\n  }) of: number = 1;\r\n\r\n  /**\r\n   * Whether the panel is open or not.\r\n   */\r\n  @Prop({\r\n    mutable: true,\r\n    reflect: true\r\n  }) isOpen: boolean = (this.index == 0);\r\n\r\n  /**\r\n   * Whether the panel is openable or not.\r\n   */\r\n  @Prop({\r\n    mutable: true,\r\n    reflect: true\r\n  }) isOpenable: boolean = (this.index == 0);\r\n\r\n  /**\r\n   * Whether the panel is a step in a wizard or not. This should be set by the parent Accordion component.\r\n   */\r\n  @Prop({\r\n    mutable: true,\r\n    reflect: true\r\n  }) isInWizard: boolean = false;\r\n\r\n  /**\r\n   * Whether the consumer supplied buttons or not. Let the component set this.\r\n   */\r\n  @Prop({\r\n    mutable: true,\r\n    reflect: true\r\n  }) hasActions: boolean = false;\r\n\r\n  /**\r\n   * The panel's status: can be \"success\", \"error\", \"reachable\", or \"undefined\".\r\n   */\r\n  @Prop({\r\n    mutable: true,\r\n    reflect: true\r\n  }) status: string = \"undefined\";\r\n\r\n  /**\r\n   * The heading button's HTML id.\r\n   */\r\n  @Prop() headingId: string = utils.generateUniqueId();\r\n\r\n  /**\r\n   * The section's HTML id.\r\n   */\r\n  @Prop() sectionId: string = utils.generateUniqueId();\r\n\r\n  /**\r\n   * Used to toggle a re-render of the icon.\r\n   */\r\n  @State() iLoveJSX: boolean = false;\r\n\r\n\r\n\r\n  handleSectionClick(e) {\r\n    e.preventDefault();\r\n    e.stopImmediatePropagation();\r\n    this.accordionSectionHeaderClick.emit({\r\n      \"originalEvent\": e,\r\n      \"section\": this.el,\r\n      \"sectionIndex\": this.index,\r\n      \"sectionStatus\": this.status,\r\n      \"isOpen\": this.isOpen\r\n    });\r\n  }\r\n\r\n\r\n\r\n  handleActionClick(e, actionType) {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    this.accordionActionClick.emit({\r\n      \"originalEvent\": e,\r\n      \"section\": this.el,\r\n      \"sectionIndex\": this.index,\r\n      \"sectionStatus\": this.status,\r\n      \"actionType\": actionType\r\n    });\r\n  }\r\n\r\n\r\n\r\n  renderStatusIcon() {\r\n    switch (this.status) {\r\n\r\n      case \"success\": {\r\n        return <yeti-icon iconCode='check_circle' alt='complete' iconClass='yeti-accordion-section-status_icon yeti-accordion-section-status_icon-success'></yeti-icon>\r\n      }\r\n\r\n      case \"error\": {\r\n        return <yeti-icon iconCode='error' alt='error' iconClass='yeti-accordion-section-status_icon yeti-accordion-section-status_icon-error'></yeti-icon>\r\n      }\r\n\r\n      default: return \"\";\r\n\r\n    }\r\n  }\r\n\r\n\r\n\r\n  renderActions() {\r\n    // Render the action buttons for a section.\r\n\r\n    // Use the user's content if provided...\r\n    if (this.hasActions) {\r\n\r\n      return <slot name=\"actions\"></slot>\r\n\r\n    // ...otherwise automatically create our own.\r\n    } else {\r\n\r\n      let actions = [];\r\n\r\n      // Previous\r\n      if (this.index != 0) {\r\n        actions.push(\r\n          \r\n          <li>\r\n            <button \r\n              class=\"yeti-button yeti-button-secondary yeti-button-size-s\" \r\n              onClick={(e) => {this.handleActionClick(e, \"previous\")}}\r\n            >\r\n              <yeti-icon iconCode='navigate_before' alt=\"\" iconClass='yeti-accordion-action-button-icon' />Previous\r\n            </button>\r\n          </li>\r\n\r\n        );\r\n      }\r\n      \r\n      // Next\r\n      if (this.index  <  this.of - 1) {\r\n        actions.push(\r\n          \r\n          <li>\r\n            <button \r\n              class=\"yeti-button yeti-button-primary yeti-button-size-s\" \r\n              onClick={(e) => {this.handleActionClick(e, \"next\")}}\r\n              {...((this.isInWizard && this.status != \"success\") ? {\"disabled\": true, \"tabIndex\": -1} : {})}\r\n            >\r\n              Next<yeti-icon iconCode='navigate_next' alt=\"\" iconClass='yeti-accordion-action-button-icon' />\r\n            </button>\r\n          </li>\r\n\r\n        );\r\n      }\r\n\r\n      // Cancel\r\n      actions.push(\r\n        <li><button class=\"yeti-button yeti-button-ghost yeti-button-size-s\" onClick={(e) => {this.handleActionClick(e, \"cancel\")}}>Cancel</button></li>\r\n      );\r\n\r\n\r\n      return <ul class=\"yeti-button-group\">{actions}</ul>;\r\n      \r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  componentWillLoad() {\r\n    \r\n    let potentialActionsSlot = this.el.querySelector('[slot=\"actions\"]');\r\n\r\n    // User supplied actions, see if they marked them with an accordion-action attribute.\r\n    if (potentialActionsSlot) {\r\n      let elementsTaggedAsActions = potentialActionsSlot.querySelectorAll('[accordion-action]');\r\n      this.hasActions = true;\r\n\r\n      elementsTaggedAsActions.forEach((element) => {\r\n        element.addEventListener(\"click\", (e) => {\r\n          this.handleActionClick(e, element.getAttribute(\"accordion-action\"));\r\n        });\r\n      });\r\n\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n\r\n    let wrapperCSS = 'yeti-accordion-section';\r\n    wrapperCSS += (this.isOpen) ? ' yeti-accordion-section__open' : '';\r\n\r\n    return (\r\n\r\n        <div class={wrapperCSS}>\r\n\r\n          <button \r\n            id={this.headingId}\r\n            class=\"yeti-accordion-section-heading\"\r\n            onClick={(e) => { this.handleSectionClick(e); }}\r\n            aria-expanded={`${this.isOpen}`}\r\n            aria-controls={this.sectionId}\r\n            {...(!this.isOpenable ? {\"disabled\": true, \"tabIndex\": -1} : {})}\r\n          >\r\n\r\n            <div class='yeti-accordion-section-heading-contents'>\r\n\r\n              {(this.isOpen) ?\r\n              \r\n                <yeti-icon iconCode='expand_less' alt='' iconClass='yeti-accordion-section-heading-caret'></yeti-icon>\r\n\r\n              :\r\n\r\n                <yeti-icon iconCode='expand_more' alt='' iconClass='yeti-accordion-section-heading-caret'></yeti-icon>\r\n\r\n              }\r\n\r\n              \r\n              <div class=\"yeti-accordion-section-heading-actual\">\r\n\r\n                {(this.isNumbered) ? (this.index + 1) : \"\"} {this.heading}\r\n                \r\n              </div>\r\n\r\n\r\n              {this.renderStatusIcon()}\r\n\r\n\r\n            </div>\r\n\r\n          </button>\r\n\r\n          \r\n          <div \r\n            id={this.sectionId}\r\n            class=\"yeti-accordion-section-content\"\r\n            role=\"region\"\r\n            aria-labelledby={this.headingId}\r\n          >\r\n\r\n            <slot name=\"content\" />\r\n\r\n          </div>\r\n\r\n\r\n          <div class=\"yeti-accordion-section-actions\">\r\n\r\n            {this.renderActions()}\r\n          \r\n          </div>\r\n\r\n\r\n        </div>\r\n\r\n    );\r\n  }\r\n\r\n}"],"mappings":"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","ignoreList":[]}