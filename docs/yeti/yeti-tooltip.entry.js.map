{"file":"yeti-tooltip.entry.esm.js","mappings":"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","names":[],"sources":["src/components/yeti-tooltip/yeti-tooltip.tsx"],"sourcesContent":["import { Component, Prop, h, State, Element, Listen } from '@stencil/core';\nimport { utils } from '../../utils/utils';\n\n@Component({\n  tag: 'yeti-tooltip',\n  shadow: false,\n})\nexport class YetiTooltip {\n\n  @Element() el: HTMLElement;\n\n  /**\n   * CSS classlist to add to the element serving as the component's wrapper.\n   */\n  @Prop({ attribute: 'wrapper-class'}) wrapperCSS: string = '';\n\n  /**\n   * CSS classlist to add to the actual tooltip element.\n   */\n  @Prop({ attribute: 'tooltip-class'}) tooltipCSS: string = '';\n\n  /**\n   * Text value to display as the tooltip's contents.\n   */\n  @Prop() text: string = \"I'm a helpful tooltip.\";\n\n  /**\n   * Token list to describe the tooltip's position relative to its anchor: left | right and/or above | below.\n   */\n  @Prop() position: string = \"above\";\n\n  /**\n   * Token list to describe the tooltip's position relative to its anchor: left | right and/or above | below.\n   */\n  @Prop() clickToOpen: boolean = false;\n\n  /**\n   * id of the component's slot element.\n   */\n  @Prop({\n    mutable: true,\n    reflect: true\n  }) slotId: string = \"\"; // Set on load\n\n  /**\n   * id of the component's actual element corresponding to the tooltip. Will be auto-populated with a unique value if not provided.\n   */\n  @Prop({\n    mutable: true,\n    reflect: true\n  }) tipId: string = \"\"; // Set on load\n\n  /**\n   * Whether the anchor should be forced to be a CSS display block style or left as is.\n   */\n  @Prop() blockAnchor: boolean = false;\n\n  /**\n   * Toggle to force a re-render of the whole component.\n   */\n  @State() iLoveJSX: boolean = false;\n\n  /**\n   * Whether the tooltip has been clicked open or not.\n   */\n  @State() isClickedOpen: boolean = false;\n\n\n\n  @Listen('mouseover')\n  handleSlotHover() {\n    if (!this.clickToOpen) {\n      this.scrollTooltipIntoView();\n    }\n  }\n\n\n\n  @Listen('focusin')\n  handleSlotFocus() {\n    if (!this.clickToOpen) {\n      this.scrollTooltipIntoView();\n    }\n  }\n\n\n\n  @Listen('click', {\n    target: 'body'\n  })\n  handleDeFocusingClick() {\n    this.isClickedOpen = false;\n  }\n\n\n\n  @Listen('click')\n  handleClick(e) {\n    e.stopImmediatePropagation(); // Intercept the click event before it gets to the body-level handler\n  }\n\n  \n\n  handleTriggerClick(e) {\n    if (this.clickToOpen) {\n      this.isClickedOpen = !this.isClickedOpen;\n      e.stopImmediatePropagation();\n      e.preventDefault();\n      this.scrollTooltipIntoView();\n      return false;\n    }\n  }\n\n\n\n  handleCloseTooltipClick(e) {\n    this.isClickedOpen = false;\n    e.stopImmediatePropagation();\n    e.preventDefault();\n  }\n\n\n\n  scrollTooltipIntoView() {\n    let actual = this.el.querySelector(\".yeti-tooltip\");\n    actual.scrollIntoView({\n      behavior: \"smooth\",\n      block: \"nearest\"\n    });\n  }\n\n\n\n  componentWillLoad() {\n    // Set up ids\n    let componentId = this.el.getAttribute(\"id\");\n\n    if (!componentId || componentId == \"\") {\n      componentId = utils.generateUniqueId();\n      this.el.setAttribute(\"id\", componentId);\n    }\n\n    this.tipId = (this.tipId != \"\") ? this.tipId : `${componentId}_tip`;\n    this.slotId = (this.slotId != \"\") ? this.slotId : `${componentId}_slot`;\n  }\n\n\n  render() {\n\n    let wrapperCSS = 'yeti-tooltip-wrapper';\n    let tipClass = 'yeti-tooltip';\n\n    wrapperCSS += (this.wrapperCSS != '') ? ` ${this.wrapperCSS}` : '';\n    tipClass += (this.tooltipCSS != '') ? ` ${this.tooltipCSS}` : '';\n\n    tipClass += (this.isClickedOpen) ? ' yeti-tooltip__clicked_open' : '';\n\n    wrapperCSS += (this.clickToOpen) ? ' yeti-tooltip-wrapper-is_click_to_open' : '';\n    wrapperCSS += (this.blockAnchor) ? ' yeti-tooltip-wrapper-has_block_anchor' : '';\n\n    switch (this.position) {\n\n      case \"right\":\n\n        tipClass += \" yeti-tooltip-right\";\n        break;\n\n      case \"below\":\n\n        tipClass += \" yeti-tooltip-below\";\n        break;\n\n      case \"left\":\n\n        tipClass += \" yeti-tooltip-left\";\n        break;\n\n      case \"below-left\":\n\n        tipClass += \" yeti-tooltip-below-left\";\n        break;\n\n      case \"below-right\":\n\n        tipClass += \" yeti-tooltip-below-right\";\n        break;\n\n      case \"above-left\":\n\n        tipClass += \" yeti-tooltip-above-left\";\n        break;\n\n      case \"above-right\":\n\n        tipClass += \" yeti-tooltip-above-right\";\n        break;\n\n    }\n\n    return ([\n      <div class={wrapperCSS}>\n\n      <div class=\"yeti-tooltip-trigger\" onClick={(e) => this.handleTriggerClick(e)}>\n\n        <slot />\n\n      </div>\n\n        <div class={tipClass}>\n\n          <div class=\"yeti-tooltip-content\" id={this.tipId}>{this.text}</div>\n\n          {\n            (this.clickToOpen) ?\n\n              <button class=\"yeti-tooltip-close\" onClick={(e) => { this.handleCloseTooltipClick(e); }}>\n                <yeti-icon iconCode=\"close\" iconCSS='yeti-color-white yeti-typo-size-5'></yeti-icon>\n              </button>\n\n            :\n              null\n          }\n          \n        </div>\n\n      </div>\n    ]);\n  }\n\n\n\n  componentDidRender() {\n    let slot = this.el.querySelector(\".yeti-tooltip-trigger\").firstElementChild;\n    slot.setAttribute(\"tabindex\", \"0\");\n    slot.setAttribute(\"aria-describedby\",this.tipId);\n  }\n\n}\n"],"version":3}