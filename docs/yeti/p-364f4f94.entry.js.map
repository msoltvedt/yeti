{"version":3,"names":["YetiModal","constructor","hostRef","this","isSideSheet","heading","describedBy","size","modalClass","isScrollable","isActive","showClose","isAnimating","isOpening","isClosing","previouslyFocusedElement","bodyInnerWrapper","shouldStealFocus","shouldReturnFocus","hasOpened","headingId","utils","generateUniqueId","handleFocus","newValue","setBackgroundElementStyles","modalIsActivating","document","body","classList","add","remove","focusTrap","e","keyCode","handleTransitionEnd","propertyName","activeElement","handleInitialFocus","focus","contentArea","el","querySelector","firstFocusableContentItem","aria","focusFirstDescendant","setAttribute","componentWillLoad","componentId","getAttribute","content","buttons","headerAction","console","error","render","modalOverlayCSS","modalCSS","modalProperties","role","h","key","class","tabIndex","Object","assign","id","name","onClick","preventDefault","componentDidRender","setTimeout","componentDidLoad","frontBumper","backBumper","addEventListener","focusLastDescendant"],"sources":["src/components/yeti-modal/yeti-modal.tsx"],"sourcesContent":["import { Component, Prop, State, h, Element, Watch, Listen } from '@stencil/core';\r\nimport { utils } from '../../utils/utils';\r\n\r\n@Component({\r\n  tag: 'yeti-modal',\r\n  shadow: false,\r\n})\r\nexport class YetiModal {\r\n\r\n  @Element() el: HTMLElement;\r\n\r\n  /**\r\n   * Whether or not it's the special Side Sheet variant of Modal.\r\n   */\r\n  @Prop() isSideSheet: boolean = false;\r\n\r\n  /**\r\n   * The string that will display in the modal's heading and serve as its title.\r\n   */\r\n  @Prop() heading: string = \"Modal Heading\";\r\n\r\n  /**\r\n   * The optional id of an element that describes the modal's content.\r\n   */\r\n  @Prop() describedBy: string = \"\";\r\n\r\n  /**\r\n   * The optional size of the modal (other than the default). Options are xl, l, s, xs.\r\n   */\r\n  @Prop() size: string = \"\";\r\n\r\n  /**\r\n   * Optional CSS classes to add to the modal element.\r\n   */\r\n  @Prop() modalClass: string = \"\";\r\n\r\n  /**\r\n   * Whether overflowing contents are shown via scrolling or clipped.\r\n   */\r\n  @Prop() isScrollable: boolean = true;\r\n\r\n  /**\r\n   * Tracks whether the Modal is displaying or not.\r\n   */\r\n  @Prop({\r\n    mutable: true,\r\n    reflect: true\r\n  }) isActive: boolean = false;\r\n  @Watch('isActive')\r\n  handleFocus(newValue: boolean) {\r\n    // When the Modal becomes active it should take focus away from whatever had it before, but\r\n    // we want to keep track of what that was so we can return focus if Modal becomes inactive.\r\n\r\n    // First, normal Modals have only two states: active and inactive (i.e. they don't use the isOpening and isClosing states)\r\n    if (!this.isSideSheet) {\r\n      // Becoming active, take focus\r\n      if (newValue) {\r\n        this.shouldStealFocus = true;\r\n        this.setBackgroundElementStyles(true);\r\n      }\r\n\r\n      // Becoming inactive, return focus\r\n      else {\r\n        this.shouldReturnFocus = true;\r\n        this.setBackgroundElementStyles(false);\r\n      }\r\n\r\n    // Side Sheet modals have four states: inactive, opening, active, and closing.\r\n    } else {\r\n\r\n      // It's a side sheet modal\r\n\r\n      if (newValue) {\r\n        // Side sheet modal becoming active\r\n        this.setBackgroundElementStyles(true);\r\n        this.isAnimating = true;\r\n      }\r\n\r\n      else {\r\n        this.isAnimating = true;\r\n      }\r\n    }\r\n\r\n\r\n  }\r\n\r\n  /**\r\n   * Choose to show the close icon (currently an X) or not\r\n   */\r\n  @Prop() showClose: boolean = true;\r\n\r\n  @State() isAnimating: boolean = false;\r\n\r\n  @State() isOpening: boolean = false;\r\n\r\n  @State() isClosing: boolean = false;\r\n\r\n\r\n  previouslyFocusedElement: HTMLElement = null; // So we can return focus to wherever the user was when the Loading component appeared.\r\n  bodyInnerWrapper: HTMLElement = null; // A div wrapped around everything in the body except the modal. Used to prevent background scrolling.\r\n  shouldStealFocus = false;\r\n  shouldReturnFocus = false;\r\n  hasOpened = false;\r\n  headingId = utils.generateUniqueId();\r\n  \r\n\r\n\r\n  setBackgroundElementStyles(modalIsActivating: boolean) {\r\n    if (modalIsActivating) {\r\n        document.body.classList.add(\"yeti-modal-has_active_modal\");\r\n    } else {\r\n        document.body.classList.remove(\"yeti-modal-has_active_modal\");\r\n    }\r\n  }\r\n\r\n\r\n\r\n  @Listen('keydown', { target: 'window'})\r\n  focusTrap(e) {\r\n\r\n    if (this.isActive && e.keyCode == 27 && this.showClose) { // Escape button\r\n        this.isActive = false;    \r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  @Listen('transitionend')\r\n  handleTransitionEnd(e) {\r\n\r\n    if (!e.propertyName || e.propertyName != \"transform\") {\r\n      return;\r\n    }\r\n\r\n    if (this.isOpening) {\r\n\r\n      // Becoming active, take focus\r\n      this.previouslyFocusedElement = document.activeElement as HTMLElement;\r\n      this.handleInitialFocus();\r\n      this.isOpening = false;\r\n      this.hasOpened = true;\r\n\r\n    } else if (this.isClosing) {\r\n\r\n      this.setBackgroundElementStyles(false);\r\n      if (this.previouslyFocusedElement) {\r\n        this.previouslyFocusedElement.focus();\r\n      }\r\n      this.isClosing = false;\r\n\r\n    }\r\n\r\n    this.isAnimating = false;\r\n\r\n  }\r\n\r\n\r\n\r\n  handleInitialFocus() {\r\n    // Sets focus on the correct thing within the modal's content when it first opens. If nothing is focusable, uses the content area itself.\r\n    let contentArea = this.el.querySelector('.yeti-modal-content') as HTMLElement;\r\n    let firstFocusableContentItem = utils.aria.focusFirstDescendant(contentArea); // either false or an HTMLElement\r\n\r\n    if (!firstFocusableContentItem) {\r\n        // There is nothing focusable within the content of the modal, so make the content area itself focusable.\r\n        contentArea.setAttribute(\"tabIndex\", \"-1\");\r\n        contentArea.focus();\r\n    }\r\n  }\r\n\r\n\r\n\r\n  componentWillLoad() {\r\n    // Set up ids and handle slotted content\r\n    let componentId = this.el.getAttribute(\"id\");\r\n    let content = this.el.querySelector(\"yeti-modal-content\");\r\n    let buttons = this.el.querySelector(\"yeti-modal-buttons\");\r\n    let headerAction = this.el.querySelector(\"yeti-modal-header-action\");\r\n\r\n    if (!content) {\r\n        console.error(\"Yeti Modal components must have a yeti-modal-content element.\");\r\n    } else {\r\n        content.setAttribute(\"slot\", \"content\");\r\n    }\r\n\r\n    if (!buttons) {\r\n        console.error(\"Yeti Modal components must have a yeti-modal-buttons element.\");\r\n    } else {\r\n        buttons.setAttribute(\"slot\", \"buttons\");\r\n    }\r\n\r\n    if (headerAction) {\r\n      headerAction.setAttribute(\"slot\", \"header_action\");\r\n    }\r\n\r\n    if (!componentId || componentId == \"\") {\r\n      componentId = utils.generateUniqueId();\r\n      this.el.setAttribute(\"id\", componentId);\r\n    }\r\n\r\n    if (this.isActive) {\r\n      this.setBackgroundElementStyles(true);\r\n    }\r\n\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    let modalOverlayCSS = (this.isSideSheet) ? \"yeti-modal_ss-overlay\" : \"yeti-modal-overlay\";\r\n    let modalCSS = `yeti-modal${(this.isSideSheet) ? \" yeti-modal_ss\" : \"\"}`;\r\n    let modalProperties = {\r\n        \"role\": \"dialog\",\r\n        \"aria-modal\": \"true\",\r\n        \"aria-labelledby\": this.headingId\r\n    };\r\n\r\n    if (this.describedBy != \"\") {\r\n        modalProperties[\"aria-describedby\"] = this.describedBy;\r\n    }\r\n\r\n    modalOverlayCSS += (this.isActive || this.isAnimating) ? \"\" : \" yeti-modal-overlay__inert\";\r\n\r\n    modalOverlayCSS += (this.isOpening) ? \" yeti-modal__opening\" : \"\";\r\n    modalOverlayCSS += (this.hasOpened) ? \" yeti-modal__open\" : \"\";\r\n    modalOverlayCSS += (this.isClosing) ? \" yeti-modal__closing\" : \"\";\r\n\r\n    modalCSS += (this.size == \"\") ? \"\" : ` yeti-modal-size-${this.size}`;\r\n\r\n    modalCSS += (this.modalClass != \"\") ? ` ${this.modalClass}` : \"\";\r\n\r\n    modalCSS += (this.isScrollable) ? \"\" : \" yeti-modal__unscrollable\";\r\n\r\n    return (\r\n        <div class={modalOverlayCSS}>\r\n            \r\n            <div class=\"yeti-modal-bumper-front\" tabIndex={0}></div>\r\n\r\n\r\n            <div class={modalCSS} {...modalProperties}>\r\n        \r\n                <div class=\"yeti-modal-header\">\r\n                    <h1 class=\"yeti-modal-header-heading\" id={this.headingId}>{this.heading}</h1>\r\n\r\n                    <div class=\"yeti-modal-header-action\">\r\n                      <slot name=\"header_action\" />\r\n                    </div>\r\n\r\n                    {(this.showClose) ?\r\n\r\n                      <button class=\"yeti-modal-header-close yeti-button-ghost\" onClick={(e) => { e.preventDefault(); this.isActive = false }}>\r\n                      <span class=\"material-icons\">close</span>\r\n                      </button>\r\n\r\n                    :\r\n\r\n                      null\r\n\r\n                    }\r\n                    \r\n                </div>\r\n\r\n        \r\n                <div class=\"yeti-modal-content\">\r\n\r\n                    <div class=\"yeti-modal-content-actual\">\r\n                      \r\n                      <slot name=\"content\" />\r\n                    \r\n                    </div>\r\n                    \r\n        \r\n                    <div class=\"yeti-modal-content-fade\"></div>\r\n        \r\n                </div>\r\n\r\n        \r\n                <div class=\"yeti-modal-actions\">\r\n\r\n                    <div class=\"yeti-modal-actions-buttons\">\r\n                    \r\n                        <slot name=\"buttons\" />\r\n                    \r\n                    </div>\r\n                \r\n                </div>\r\n        \r\n            </div>\r\n\r\n\r\n            <div class=\"yeti-modal-bumper-back\" tabIndex={0}></div>\r\n\r\n        </div>\r\n\r\n    );\r\n  }\r\n\r\n\r\n\r\n  componentDidRender() {\r\n    // Handle focus management. We can't do this when the property changes because the inactive state uses display: none,\r\n    // which interferes with the ability to accept focus depending on some race conditions.\r\n\r\n    // For regular modals...\r\n    if (this.shouldStealFocus) {\r\n      // Becoming active, take focus\r\n      this.previouslyFocusedElement = document.activeElement as HTMLElement;\r\n      this.handleInitialFocus();\r\n    }\r\n\r\n    if (this.shouldReturnFocus) {\r\n      // Becoming inactive, return focus\r\n      if (this.previouslyFocusedElement) {\r\n        this.previouslyFocusedElement.focus();\r\n      }\r\n    }\r\n\r\n    \r\n    // For side sheet modals\r\n    if (this.isAnimating) {\r\n      // It's a side sheet modal, and it's opening. Add the opening class to the overlay to initiate the CSS transition.\r\n      if (this.isActive) {\r\n        setTimeout(() => {\r\n          this.isOpening = true;\r\n          this.isClosing = false;\r\n        }, 1);\r\n      } else {\r\n        setTimeout(() => {\r\n          this.isOpening = false;\r\n          this.hasOpened = false;\r\n          this.isClosing = true;\r\n        }, 1);\r\n      }\r\n      \r\n    }\r\n\r\n    this.shouldStealFocus = false;\r\n    this.shouldReturnFocus = false;\r\n  }\r\n\r\n\r\n\r\n  componentDidLoad() {\r\n    let frontBumper = this.el.querySelector(\".yeti-modal-bumper-front\");\r\n    let backBumper  = this.el.querySelector(\".yeti-modal-bumper-back\");\r\n\r\n    frontBumper.addEventListener(\"focus\", () => {\r\n        utils.aria.focusLastDescendant(this.el.querySelector(\".yeti-modal\"));\r\n    });\r\n\r\n    backBumper.addEventListener(\"focus\", () => {\r\n        utils.aria.focusFirstDescendant(this.el.querySelector(\".yeti-modal\"));\r\n    });\r\n  }\r\n\r\n}"],"mappings":"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","ignoreList":[]}