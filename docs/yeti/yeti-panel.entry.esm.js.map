{"version":3,"file":"yeti-panel.entry.esm.js","sources":["src/components/yeti-panel/yeti-panel.tsx"],"sourcesContent":["import { Component, Prop, h, State, Element, Event, EventEmitter, Watch } from '@stencil/core';\r\nimport { utils } from '../../utils/utils';\r\n\r\n@Component({\r\n  tag: 'yeti-panel',\r\n  shadow: false,\r\n})\r\nexport class YetiPanel {\r\n\r\n  @Element() el: HTMLElement;\r\n\r\n  /**\r\n   * Event that fires when the panel's isExpanded state changes to expanded.\r\n   */\r\n  @Event({ bubbles: true }) panelExpansionChanged: EventEmitter;\r\n\r\n  /**\r\n   * The descriptive text that appears in the heading bar above the content.\r\n   */\r\n  @Prop({\r\n    mutable: true,\r\n    reflect: true\r\n  }) heading: string = 'Heading';\r\n\r\n  /**\r\n   * Whether or not this panel can expand or collapse\r\n   */\r\n  @Prop({\r\n    mutable: true,\r\n    reflect: true\r\n  }) isExpandable: boolean = false;\r\n\r\n  /**\r\n   * Whether or not this panel has a header (it will have by default)\r\n   */\r\n  @Prop() hasHeader: boolean = true;\r\n\r\n  /**\r\n   * Whether or not this panel is currently expanded.\r\n   */\r\n  @Prop({\r\n    mutable: true,\r\n    reflect: true\r\n  }) isExpanded: boolean = true;\r\n  @Watch('isExpanded')\r\n  watchIsExpandedHandler(newValue: boolean) {\r\n    \r\n    this.panelExpansionChanged.emit({\r\n      \"yetiPanel\": this.el,\r\n      \"isExpanded\": newValue\r\n    });\r\n\r\n  }\r\n\r\n  /**\r\n   * The id of the HTML element representing the panel header\r\n   */\r\n  @Prop({\r\n    mutable: true,\r\n    reflect: true\r\n  }) headerId: string = utils.generateUniqueId();\r\n\r\n  /**\r\n   * The id of the HTML element representing the panel's content container\r\n   */\r\n  @Prop({\r\n    mutable: true,\r\n    reflect: true\r\n  }) contentId: string = utils.generateUniqueId();\r\n\r\n  /**\r\n   * A string of CSS space-separated CSS classes to add to the HTML element that represents the panel's outer wrapper\r\n   */\r\n  @Prop({\r\n    mutable: true,\r\n    reflect: true\r\n  }) wrapperClass: string = '';\r\n\r\n  /**\r\n   * Used to toggle a re-render of the icon.\r\n   */\r\n  @State() iLoveJSX: boolean = false;\r\n\r\n\r\n  hasSubheader: boolean = false;\r\n\r\n\r\n\r\n  handleHeaderClick() {\r\n    if (this.isExpandable) {\r\n      this.isExpanded = !this.isExpanded;\r\n    }\r\n  }\r\n\r\n\r\n\r\n  componentWillLoad() {\r\n    \r\n    let potentialSubheader = this.el.querySelector('[slot=\"subheader\"]');\r\n    \r\n    if (potentialSubheader) {\r\n      this.hasSubheader = true;\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n\r\n    let wrapperCSS = 'yeti-panel';\r\n\r\n    wrapperCSS += (this.wrapperClass) ? ` ${this.wrapperClass}` : '';\r\n\r\n    wrapperCSS += (this.isExpandable) ? ' yeti-panel-expandable' : '';\r\n    wrapperCSS += (this.isExpandable && this.isExpanded) ? ' yeti-panel__expanded' : '';\r\n\r\n    return (\r\n\r\n        <div class={wrapperCSS}>\r\n\r\n          {/* Header */}\r\n          {(this.hasHeader) ?\r\n            (this.isExpandable) ? \r\n            \r\n              // It's expandable, use a button for the header.\r\n              <button \r\n                id={this.headerId}\r\n                class=\"yeti-panel-header\"\r\n                onClick={() => { this.handleHeaderClick(); }}\r\n                aria-expanded={this.isExpanded}\r\n                aria-controls={this.contentId}\r\n                type=\"button\"\r\n              >\r\n\r\n                <div class='yeti-panel-header-contents'>\r\n\r\n                  {(this.isExpanded) ?\r\n                  \r\n                    <yeti-icon iconCode='expand_less' alt='' iconClass='yeti-panel-header-caret'></yeti-icon>\r\n\r\n                  :\r\n\r\n                    <yeti-icon iconCode='expand_more' alt='' iconClass='yeti-panel-header-caret'></yeti-icon>\r\n\r\n                  }\r\n                  \r\n                  <div class=\"yeti-panel-header-actual\">\r\n\r\n                    {this.heading}\r\n                    \r\n                  </div>\r\n\r\n\r\n                  <slot name=\"subheader\" />\r\n\r\n\r\n                </div>\r\n\r\n              </button>\r\n\r\n            :\r\n\r\n              // It's not expandable, just use a div for the header.\r\n              <div \r\n                id={this.headerId}\r\n                class=\"yeti-panel-header\"\r\n              >\r\n\r\n                <div class='yeti-panel-header-contents'>\r\n\r\n                  \r\n                  <div class=\"yeti-panel-header-actual\">\r\n\r\n                    {this.heading}\r\n                    \r\n                  </div>\r\n\r\n\r\n                  <slot name=\"subheader\" />\r\n\r\n\r\n                </div>\r\n\r\n              </div>\r\n          \r\n          :\r\n            \r\n            ''\r\n          \r\n          }\r\n          \r\n\r\n\r\n          {/* Content */}\r\n          <div \r\n            id={this.contentId}\r\n            class=\"yeti-panel-content\"\r\n            role=\"region\"\r\n            aria-labelledby={this.headerId}\r\n          >\r\n\r\n            <slot />\r\n\r\n          </div>\r\n\r\n\r\n        </div>\r\n\r\n    );\r\n  }\r\n\r\n}"],"names":[],"mappings":"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"}