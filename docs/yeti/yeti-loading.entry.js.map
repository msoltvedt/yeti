{"file":"yeti-loading.entry.esm.js","mappings":"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","names":[],"sources":["src/components/yeti-loading/yeti-loading.tsx"],"sourcesContent":["import { Component, Prop, h, Element, Watch, Listen } from '@stencil/core';\nimport { utils } from '../../utils/utils';\n\n@Component({\n  tag: 'yeti-loading',\n  shadow: false,\n})\nexport class YetiLoading {\n\n  @Element() el: HTMLElement;\n\n  /**\n   * Whether to display the Loading pattern inline or default mode.\n   */\n  @Prop() isInline: boolean = false;\n\n  /**\n   * Whether to display the Loading pattern as a modal (covering its parent container) or as an inline-block object.\n   */\n  @Prop() isModal: boolean = false;\n\n  /**\n   * Tracks whether the Loader is displaying or not.\n   */\n  @Prop() isActive: boolean = false;\n  @Watch('isActive')\n  handleFocus(newValue: boolean) {\n    // When the Loading becomes active it should take focus away from whatever had it before, but\n    // we want to keep track of what that was so we can return focus if Loading becomes inactive.\n\n    // Becoming active, take focus\n    if (newValue) {\n      this.shouldStealFocus = true;\n      this.setBackgroundElementStyles(true);\n    }\n\n    // Becoming inactive, return focus\n    else {\n      this.shouldReturnFocus = true;\n      this.setBackgroundElementStyles(false);\n    }\n  }\n\n\n  previouslyFocusedElement: HTMLElement = null; // So we can return focus to wherever the user was when the Loading component appeared.\n  shouldStealFocus = false;\n  shouldReturnFocus = false;\n  slottedContent = null;\n\n\n  setBackgroundElementStyles(modalIsActivating: boolean) {\n    if (modalIsActivating) {\n        document.body.classList.add(\"yeti-modal-has_active_modal\");\n    } else {\n        document.body.classList.remove(\"yeti-modal-has_active_modal\");\n    }\n  }\n\n\n\n  @Listen('keydown')\n  focusTrap(e) {\n    if (this.isActive) {\n      e.preventDefault();\n    }\n  }\n\n\n  componentWillLoad() {\n    // Set up ids\n    let componentId = this.el.getAttribute(\"id\");\n\n    if (!componentId || componentId == \"\") {\n      componentId = utils.generateUniqueId();\n      this.el.setAttribute(\"id\", componentId);\n    }\n    \n    // Check to see if there's slotted content\n    let innerHTML = this.el.innerHTML.trim();\n\n    if (innerHTML != \"\" && innerHTML != \"<!---->\") {\n      this.slottedContent = innerHTML;\n    } else {\n      this.slottedContent = null;\n    }\n\n  }\n\n\n\n  render() {\n\n    let modalOverlayCSS = \"yeti-modal-overlay yeti-modal-overlay-light\";\n\n    let baseLoading =\n\n      <div class=\"yeti-loading\" tabindex=\"-1\">\n\n        <div class=\"yeti-loading-icon\">\n            <svg class=\"yeti-loading-icon-svg\" viewBox=\"0 0 100 100\" aria-hidden=\"true\">\n                <circle class=\"yeti-loading-icon-svg-circle\" cx=\"50%\" cy=\"50%\" r=\"44\"></circle>\n            </svg>\n        </div>\n\n        <div class=\"yeti-loading-label\">Loading...</div>\n\n        {(this.slottedContent == null && this.slottedContent != \"<!---->\") ?\n          \n          \"\"\n\n        :\n        \n          <div class=\"yeti-loading-content\">\n            \n            <slot />\n          \n          </div>\n        }\n\n      </div>\n\n\n    let inlineLoading = \n    \n      <div class=\"yeti-loading_inline\">\n          \n        <div class=\"yeti-loading_inline-icon\">\n            <svg class=\"yeti-loading_inline-icon-svg\" viewBox=\"0 0 100 100\">\n                <circle class=\"yeti-loading_inline-icon-svg-background\" cx=\"50%\" cy=\"50%\" r=\"44\"></circle>\n                <circle class=\"yeti-loading_inline-icon-svg-stroke\" cx=\"50%\" cy=\"50%\" r=\"44\"></circle>\n            </svg>\n        </div>\n\n        <div class=\"yeti-loading_inline-label\">Loading...</div>\n      \n      </div>;\n\n\n    modalOverlayCSS += (this.isActive) ? \"\" : \" yeti-modal-overlay__inert\";\n\n    return (\n      (this.isModal) ?\n\n        <div class={modalOverlayCSS}>\n          <div class=\"yeti-modal yeti-modal-size-xs\">\n              {baseLoading}\n          </div>\n        </div>\n\n      :\n\n        (this.isInline) ? inlineLoading : baseLoading\n\n    );\n  }\n\n\n\n  componentDidRender() {\n    // Handle focus management. We can't do this when the property changes because the inactive state uses display: none,\n    // which interferes with the ability to accept focus depending on some race conditions.\n\n    if (this.shouldStealFocus) {\n      // Becoming active, take focus\n      let loadingDiv = this.el.getElementsByClassName(\"yeti-loading\")[0] as HTMLElement;\n      this.previouslyFocusedElement = document.activeElement as HTMLElement;\n      loadingDiv.focus();\n    }\n\n    if (this.shouldReturnFocus) {\n      // Becoming inactive, return focus\n      if (this.previouslyFocusedElement) {\n        this.previouslyFocusedElement.focus();\n      }\n    }\n\n    this.shouldStealFocus = false;\n    this.shouldReturnFocus = false;\n  }\n\n}\n"],"version":3}