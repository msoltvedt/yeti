{"version":3,"names":["YetiFileExplorer","name","content","path","isFolder","isRoot","isSelected","selectedIndex","offset","pageSize","totalElements","id","utils","generateUniqueId","type","handlePathChange","handleItemClick","depth","index","serverPathStringToClickedFolder","this","length","pop","forEach","val","fileExplorerChange","emit","newFolderObject","folder","undefined","renderFolders","folders","emptyFolder","push","renderFolder","minimumDisplayDepth","jsx","h","class","renderFolderContents","map","item","renderItem","buttonCSS","onClick","iconCode","alt","render","wrapperCSS","componentDidRender","folderElements","el","querySelectorAll","scrollIntoView","behavior","block"],"sources":["src/components/yeti-file-explorer/yeti-file-explorer.tsx"],"sourcesContent":["import { Component, Prop, h, State, Element, Event, EventEmitter, Method, Watch } from '@stencil/core';\nimport { YetiFileSystemItem, utils } from '../../utils/utils';\n\n@Component({\n  tag: 'yeti-file-explorer',\n  shadow: false,\n})\nexport class YetiFileExplorer {\n\n  /**\n   * Fires when the user clicks a folder\n   */\n  @Event() fileExplorerChange: EventEmitter;\n\n  @Element() el: HTMLElement;\n\n  /**\n   * CSS classlist applied to the explorer wrapper element.\n   */\n  @Prop({ attribute: 'wrapper-css'}) wrapperCSS?: string = '';\n\n  /**\n   * Whether or not to show files (folders are always shown).\n   */\n  @Prop() showFiles: boolean = true;\n\n  /**\n   * minimum number of folder layers to show\n   */\n  @Prop() minimumDisplayDepth: number = 3;\n\n  /**\n   * All the displayed folders in order from root to terminus\n   */\n  @Prop({ mutable: true }) path: YetiFileSystemItem[] = /*[\n    {\n      name: \"root\",\n      content: [],\n      path: \"//\",\n      isFolder: true,\n      isRoot: true,\n      isSelected: true,\n      isTerminus: false,\n      selectedIndex: -1,\n      offset: 0,\n      pageSize: 1000,\n      totalElements: 0,\n      id: utils.generateUniqueId(),\n      type: \"folder\"\n    }\n  ];*/\n  [\n    {\n      name: \"root\",\n      content: [\n        {\n          name: \"subfolder1\",\n          content: [],\n          path: \"//subfolder1\",\n          isFolder: true,\n          isRoot: false,\n          isSelected: false,\n          selectedIndex: -1,\n          offset: 0,\n          pageSize: 1000,\n          totalElements: 0,\n          id: utils.generateUniqueId(),\n          type: \"folder\"\n        },\n        {\n          name: \"subfolder2\",\n          content: [],\n          path: \"//subfolder2\",\n          isFolder: true,\n          isRoot: false,\n          isSelected: false,\n          selectedIndex: -1,\n          offset: 0,\n          pageSize: 1000,\n          totalElements: 0,\n          id: utils.generateUniqueId(),\n          type: \"folder\"\n        },\n        {\n          name: \"subfolder3\",\n          content: [],\n          path: \"//subfolder3\",\n          isFolder: true,\n          isRoot: false,\n          isSelected: false,\n          selectedIndex: -1,\n          offset: 0,\n          pageSize: 1000,\n          totalElements: 0,\n          id: utils.generateUniqueId(),\n          type: \"folder\"\n        },\n      ],\n      path: \"\",\n      isFolder: true,\n      isRoot: true,\n      isSelected: true,\n      selectedIndex: -1,\n      offset: 0,\n      pageSize: 1000,\n      totalElements: 3,\n      id: utils.generateUniqueId(),\n      type: \"folder\"\n    }\n  ];\n  @Watch(\"path\")\n  handlePathChange() {\n    // TODO: validate the incoming path variable\n  }\n\n  /**\n   * Toggle to trigger a re-render of the whole component.\n   */\n  @State() iLoveJSX: boolean = false;\n\n\n\n  handleItemClick(depth: number = 0, index: number = 0) {\n    // A folder or file was just clicked. Handle it.\n    let serverPathStringToClickedFolder = \"\"; // This will be the term by which the server identifies this folder\n    \n    // If necessary, prune any folders that would be to the right of this.\n    while (this.path.length > depth + 1) {\n      this.path.pop();\n    }\n\n    // (Re)set the isSelected state for this folder and its sibling\n    this.path[depth].content.forEach((val) => {\n      val.isSelected = false;\n    })\n\n    // Update the path at this depth\n    this.path[depth].isSelected = true;\n    this.path[depth].selectedIndex = index;\n\n    // Derive the server path to this folder\n    serverPathStringToClickedFolder += this.path[depth].content[index].path;\n\n    // Fire the change event so the component consumer can provide new data\n    this.fileExplorerChange.emit({\n      \"path\": serverPathStringToClickedFolder,\n      \"depth\": depth,\n      \"index\": index\n    });\n    \n  }\n\n\n\n  @Method()\n  async newFolderObject() {\n    let folder: YetiFileSystemItem = {\n      content: [],\n      name: undefined,\n      path: undefined,\n      isFolder: true,\n      isRoot: false,\n      isSelected: false,\n      selectedIndex: -1,\n      id: utils.generateUniqueId()\n    };\n    return folder;\n  }\n\n\n\n  renderFolders() {\n    // Render all the displayed folders for the currently selected path.\n    let folders = [];\n    let emptyFolder: YetiFileSystemItem = {\n      name: \"\",\n      path: \"/\",\n      content: [],\n      selectedIndex: -1,\n      isRoot: false,\n      isSelected: false\n    }\n\n    // Loop through the path and render each folder in it\n    this.path.forEach((folder, index) => {\n      folders.push(this.renderFolder(folder, index));\n    });\n\n    while (folders.length < this.minimumDisplayDepth) {\n      folders.push(this.renderFolder(emptyFolder, -1));\n    }\n\n    return folders;\n  }\n\n\n\n  renderFolder(folder: YetiFileSystemItem, depth) {\n\n    let jsx =\n\n      <div class=\"yeti-file_explorer-folder\">\n\n        <ul class=\"yeti-file_explorer-folder-items\">\n\n          {this.renderFolderContents(folder, depth)}\n\n        </ul>\n\n      </div>\n\n    return jsx;\n      \n  }\n\n\n\n  renderFolderContents(folder: YetiFileSystemItem, depth: number = -1) {\n\n    return folder.content.map((item, index) => {\n      return this.renderItem(item, depth, index);\n    });\n\n  }\n\n\n\n  renderItem(item: YetiFileSystemItem, depth: number = -1, index: number = -1) {\n\n    let buttonCSS = \"yeti-file_explorer-folder-item-wrapper\" + ((item.isSelected) ? \" yeti-file_explorer-folder-item-wrapper__selected\" : \"\");\n    let jsx = \n\n      <li class=\"yeti-file_explorer-folder-item\">\n\n          <button class={buttonCSS} onClick={() => { this.handleItemClick(depth, index); }} data-path={item.path}>\n\n              <yeti-icon iconCode=\"folder\" alt=\"subfolder\" icon-style=\"outlined\" class=\"yeti-file_explorer-folder-item-icon\"></yeti-icon>\n            \n              <span class=\"yeti-file_explorer-folder-item-name\">{item.name}</span>\n            \n              {/* {\n                (item.content.length) ? \n                  <yeti-icon iconCode=\"chevron_right\" alt=\"open subfolder\" class=\"yeti-file_explorer-folder-more\"></yeti-icon>\n                : \n                  \"\"\n              } */}\n\n              <yeti-icon iconCode=\"chevron_right\" alt=\"open subfolder\" class=\"yeti-file_explorer-folder-more\"></yeti-icon>\n        \n          </button>\n\n      </li>\n\n    return jsx;\n  }\n\n\n\n  render() {\n\n    let wrapperCSS = 'yeti-file_explorer-wrapper';\n\n    wrapperCSS += (this.wrapperCSS != '') ? ` ${this.wrapperCSS}` : '';\n\n    return (\n\n      <div class={wrapperCSS}>\n\n        <div class=\"yeti-file_explorer\">\n\n          <div class=\"yeti-file_explorer-folders\">\n\n            {this.renderFolders()}\n\n          </div>{/* /folders */}\n\n        </div>{/* /file_explorer */}\n\n      \n        <div class=\"yeti-file_explorer-path\">{this.path[ this.path.length - 1 ].path}</div>\n\n      </div>\n\n    );\n  }\n\n\n\n  componentDidRender() {\n    // Scroll the last folder into view\n    let folderElements = this.el.querySelectorAll(\".yeti-file_explorer-folder\");\n\n    if (folderElements && folderElements.length) {\n      folderElements[ folderElements.length-1 ].scrollIntoView({\n        behavior: \"smooth\",\n        block: \"nearest\"\n      });\n    }\n  }\n\n}"],"mappings":"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"}