{"file":"yeti-modal.entry.esm.js","mappings":"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","names":[],"sources":["src/components/yeti-modal/yeti-modal.tsx"],"sourcesContent":["import { Component, Prop, State, h, Element, Watch, Listen } from '@stencil/core';\r\nimport { utils } from '../../utils/utils';\r\n\r\n@Component({\r\n  tag: 'yeti-modal',\r\n  shadow: false,\r\n})\r\nexport class YetiModal {\r\n\r\n  @Element() el: HTMLElement;\r\n\r\n  /**\r\n   * Whether or not it's the special Side Sheet variant of Modal.\r\n   */\r\n  @Prop() isSideSheet: boolean = false;\r\n\r\n  /**\r\n   * The string that will display in the modal's heading and serve as its title.\r\n   */\r\n  @Prop() heading: string = \"Modal Heading\";\r\n\r\n  /**\r\n   * The optional id of an element that describes the modal's content.\r\n   */\r\n  @Prop() describedBy: string = \"\";\r\n\r\n  /**\r\n   * The optional size of the modal (other than the default). Options are xl, l, s, xs.\r\n   */\r\n  @Prop() size: string = \"\";\r\n\r\n  /**\r\n   * Optional CSS classes to add to the modal element.\r\n   */\r\n  @Prop() modalClass: string = \"\";\r\n\r\n  /**\r\n   * Whether overflowing contents are shown via scrolling or clipped.\r\n   */\r\n  @Prop() isScrollable: boolean = true;\r\n\r\n  /**\r\n   * Tracks whether the Modal is displaying or not.\r\n   */\r\n  @Prop({\r\n    mutable: true,\r\n    reflect: true\r\n  }) isActive: boolean = false;\r\n  @Watch('isActive')\r\n  handleFocus(newValue: boolean) {\r\n    // When the Modal becomes active it should take focus away from whatever had it before, but\r\n    // we want to keep track of what that was so we can return focus if Modal becomes inactive.\r\n\r\n    // First, normal Modals have only two states: active and inactive (i.e. they don't use the isOpening and isClosing states)\r\n    if (!this.isSideSheet) {\r\n      // Becoming active, take focus\r\n      if (newValue) {\r\n        this.shouldStealFocus = true;\r\n        this.setBackgroundElementStyles(true);\r\n      }\r\n\r\n      // Becoming inactive, return focus\r\n      else {\r\n        this.shouldReturnFocus = true;\r\n        this.setBackgroundElementStyles(false);\r\n      }\r\n\r\n    // Side Sheet modals have four states: inactive, opening, active, and closing.\r\n    } else {\r\n\r\n      // It's a side sheet modal\r\n\r\n      if (newValue) {\r\n        // Side sheet modal becoming active\r\n        this.setBackgroundElementStyles(true);\r\n        this.isAnimating = true;\r\n      }\r\n\r\n      else {\r\n        this.isAnimating = true;\r\n      }\r\n    }\r\n\r\n\r\n  }\r\n\r\n  /**\r\n   * Choose to show the close icon (currently an X) or not\r\n   */\r\n  @Prop() showClose: boolean = true;\r\n\r\n  @State() isAnimating: boolean = false;\r\n\r\n  @State() isOpening: boolean = false;\r\n\r\n  @State() isClosing: boolean = false;\r\n\r\n\r\n  previouslyFocusedElement: HTMLElement = null; // So we can return focus to wherever the user was when the Loading component appeared.\r\n  bodyInnerWrapper: HTMLElement = null; // A div wrapped around everything in the body except the modal. Used to prevent background scrolling.\r\n  shouldStealFocus = false;\r\n  shouldReturnFocus = false;\r\n  hasOpened = false;\r\n  headingId = utils.generateUniqueId();\r\n  \r\n\r\n\r\n  setBackgroundElementStyles(modalIsActivating: boolean) {\r\n    if (modalIsActivating) {\r\n        document.body.classList.add(\"yeti-modal-has_active_modal\");\r\n    } else {\r\n        document.body.classList.remove(\"yeti-modal-has_active_modal\");\r\n    }\r\n  }\r\n\r\n\r\n\r\n  @Listen('keydown', { target: 'window'})\r\n  focusTrap(e) {\r\n\r\n    if (this.isActive && e.keyCode == 27 && this.showClose) { // Escape button\r\n        this.isActive = false;    \r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  @Listen('transitionend')\r\n  handleTransitionEnd(e) {\r\n\r\n    if (!e.propertyName || e.propertyName != \"transform\") {\r\n      return;\r\n    }\r\n\r\n    if (this.isOpening) {\r\n\r\n      // Becoming active, take focus\r\n      this.previouslyFocusedElement = document.activeElement as HTMLElement;\r\n      this.handleInitialFocus();\r\n      this.isOpening = false;\r\n      this.hasOpened = true;\r\n\r\n    } else if (this.isClosing) {\r\n\r\n      this.setBackgroundElementStyles(false);\r\n      if (this.previouslyFocusedElement) {\r\n        this.previouslyFocusedElement.focus();\r\n      }\r\n      this.isClosing = false;\r\n\r\n    }\r\n\r\n    this.isAnimating = false;\r\n\r\n  }\r\n\r\n\r\n\r\n  handleInitialFocus() {\r\n    // Sets focus on the correct thing within the modal's content when it first opens. If nothing is focusable, uses the content area itself.\r\n    let contentArea = this.el.querySelector('.yeti-modal-content') as HTMLElement;\r\n    let firstFocusableContentItem = utils.aria.focusFirstDescendant(contentArea); // either false or an HTMLElement\r\n\r\n    if (!firstFocusableContentItem) {\r\n        // There is nothing focusable within the content of the modal, so make the content area itself focusable.\r\n        contentArea.setAttribute(\"tabIndex\", \"-1\");\r\n        contentArea.focus();\r\n    }\r\n  }\r\n\r\n\r\n\r\n  componentWillLoad() {\r\n    // Set up ids and handle slotted content\r\n    let componentId = this.el.getAttribute(\"id\");\r\n    let content = this.el.querySelector(\"yeti-modal-content\");\r\n    let buttons = this.el.querySelector(\"yeti-modal-buttons\");\r\n    let headerAction = this.el.querySelector(\"yeti-modal-header-action\");\r\n\r\n    if (!content) {\r\n        console.error(\"Yeti Modal components must have a yeti-modal-content element.\");\r\n    } else {\r\n        content.setAttribute(\"slot\", \"content\");\r\n    }\r\n\r\n    if (!buttons) {\r\n        console.error(\"Yeti Modal components must have a yeti-modal-buttons element.\");\r\n    } else {\r\n        buttons.setAttribute(\"slot\", \"buttons\");\r\n    }\r\n\r\n    if (headerAction) {\r\n      headerAction.setAttribute(\"slot\", \"header_action\");\r\n    }\r\n\r\n    if (!componentId || componentId == \"\") {\r\n      componentId = utils.generateUniqueId();\r\n      this.el.setAttribute(\"id\", componentId);\r\n    }\r\n\r\n    if (this.isActive) {\r\n      this.setBackgroundElementStyles(true);\r\n    }\r\n\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    let modalOverlayCSS = (this.isSideSheet) ? \"yeti-modal_ss-overlay\" : \"yeti-modal-overlay\";\r\n    let modalCSS = `yeti-modal${(this.isSideSheet) ? \" yeti-modal_ss\" : \"\"}`;\r\n    let modalProperties = {\r\n        \"role\": \"dialog\",\r\n        \"aria-modal\": \"true\",\r\n        \"aria-labelledby\": this.headingId\r\n    };\r\n\r\n    if (this.describedBy != \"\") {\r\n        modalProperties[\"aria-describedby\"] = this.describedBy;\r\n    }\r\n\r\n    modalOverlayCSS += (this.isActive || this.isAnimating) ? \"\" : \" yeti-modal-overlay__inert\";\r\n\r\n    modalOverlayCSS += (this.isOpening) ? \" yeti-modal__opening\" : \"\";\r\n    modalOverlayCSS += (this.hasOpened) ? \" yeti-modal__open\" : \"\";\r\n    modalOverlayCSS += (this.isClosing) ? \" yeti-modal__closing\" : \"\";\r\n\r\n    modalCSS += (this.size == \"\") ? \"\" : ` yeti-modal-size-${this.size}`;\r\n\r\n    modalCSS += (this.modalClass != \"\") ? ` ${this.modalClass}` : \"\";\r\n\r\n    modalCSS += (this.isScrollable) ? \"\" : \" yeti-modal__unscrollable\";\r\n\r\n    return (\r\n        <div class={modalOverlayCSS}>\r\n            \r\n            <div class=\"yeti-modal-bumper-front\" tabIndex={0}></div>\r\n\r\n\r\n            <div class={modalCSS} {...modalProperties}>\r\n        \r\n                <div class=\"yeti-modal-header\">\r\n                    <h1 class=\"yeti-modal-header-heading\" id={this.headingId}>{this.heading}</h1>\r\n\r\n                    <div class=\"yeti-modal-header-action\">\r\n                      <slot name=\"header_action\" />\r\n                    </div>\r\n\r\n                    {(this.showClose) ?\r\n\r\n                      <button class=\"yeti-modal-header-close yeti-button-ghost\" onClick={() => { this.isActive = false }}>\r\n                      <span class=\"material-icons\">close</span>\r\n                      </button>\r\n\r\n                    :\r\n\r\n                      null\r\n\r\n                    }\r\n                    \r\n                </div>\r\n\r\n        \r\n                <div class=\"yeti-modal-content\">\r\n\r\n                    <div class=\"yeti-modal-content-actual\">\r\n                      \r\n                      <slot name=\"content\" />\r\n                    \r\n                    </div>\r\n                    \r\n        \r\n                    <div class=\"yeti-modal-content-fade\"></div>\r\n        \r\n                </div>\r\n\r\n        \r\n                <div class=\"yeti-modal-actions\">\r\n\r\n                    <div class=\"yeti-modal-actions-buttons\">\r\n                    \r\n                        <slot name=\"buttons\" />\r\n                    \r\n                    </div>\r\n                \r\n                </div>\r\n        \r\n            </div>\r\n\r\n\r\n            <div class=\"yeti-modal-bumper-back\" tabIndex={0}></div>\r\n\r\n        </div>\r\n\r\n    );\r\n  }\r\n\r\n\r\n\r\n  componentDidRender() {\r\n    // Handle focus management. We can't do this when the property changes because the inactive state uses display: none,\r\n    // which interferes with the ability to accept focus depending on some race conditions.\r\n\r\n    // For regular modals...\r\n    if (this.shouldStealFocus) {\r\n      // Becoming active, take focus\r\n      this.previouslyFocusedElement = document.activeElement as HTMLElement;\r\n      this.handleInitialFocus();\r\n    }\r\n\r\n    if (this.shouldReturnFocus) {\r\n      // Becoming inactive, return focus\r\n      if (this.previouslyFocusedElement) {\r\n        this.previouslyFocusedElement.focus();\r\n      }\r\n    }\r\n\r\n    \r\n    // For side sheet modals\r\n    if (this.isAnimating) {\r\n      // It's a side sheet modal, and it's opening. Add the opening class to the overlay to initiate the CSS transition.\r\n      if (this.isActive) {\r\n        setTimeout(() => {\r\n          this.isOpening = true;\r\n          this.isClosing = false;\r\n        }, 1);\r\n      } else {\r\n        setTimeout(() => {\r\n          this.isOpening = false;\r\n          this.hasOpened = false;\r\n          this.isClosing = true;\r\n        }, 1);\r\n      }\r\n      \r\n    }\r\n\r\n    this.shouldStealFocus = false;\r\n    this.shouldReturnFocus = false;\r\n  }\r\n\r\n\r\n\r\n  componentDidLoad() {\r\n    let frontBumper = this.el.querySelector(\".yeti-modal-bumper-front\");\r\n    let backBumper  = this.el.querySelector(\".yeti-modal-bumper-back\");\r\n\r\n    frontBumper.addEventListener(\"focus\", () => {\r\n        utils.aria.focusLastDescendant(this.el.querySelector(\".yeti-modal\"));\r\n    });\r\n\r\n    backBumper.addEventListener(\"focus\", () => {\r\n        utils.aria.focusFirstDescendant(this.el.querySelector(\".yeti-modal\"));\r\n    });\r\n  }\r\n\r\n}"],"version":3}