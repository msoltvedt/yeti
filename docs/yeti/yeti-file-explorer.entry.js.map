{"file":"yeti-file-explorer.entry.esm.js","mappings":"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","names":[],"sources":["src/components/yeti-file-explorer/yeti-file-explorer.tsx"],"sourcesContent":["import { Component, Prop, h, State, Element, Event, EventEmitter, Method, Watch } from '@stencil/core';\nimport { YetiFileSystemItem, utils } from '../../utils/utils';\n\n@Component({\n  tag: 'yeti-file-explorer',\n  shadow: false,\n})\nexport class YetiFileExplorer {\n\n  /**\n   * Fires when the user clicks a folder\n   */\n  @Event() fileExplorerChange: EventEmitter;\n\n  @Element() el: HTMLElement;\n\n  /**\n   * CSS classlist applied to the explorer wrapper element.\n   */\n  @Prop({ attribute: 'wrapper-css'}) wrapperCSS?: string = '';\n\n  /**\n   * Whether or not to show files (folders are always shown).\n   */\n  @Prop() showFiles: boolean = true;\n\n  /**\n   * minimum number of folder layers to show\n   */\n  @Prop() minimumDisplayDepth: number = 3;\n\n  /**\n   * All the displayed folders in order from root to terminus\n   */\n  @Prop({ mutable: true }) path: YetiFileSystemItem[] = /*[\n    {\n      name: \"root\",\n      content: [],\n      path: \"//\",\n      isFolder: true,\n      isRoot: true,\n      isSelected: true,\n      isTerminus: false,\n      selectedIndex: -1,\n      offset: 0,\n      pageSize: 1000,\n      totalElements: 0,\n      id: utils.generateUniqueId(),\n      type: \"folder\"\n    }\n  ];*/\n  [\n    {\n      name: \"root\",\n      content: [\n        {\n          name: \"subfolder1\",\n          content: [],\n          path: \"//subfolder1\",\n          isFolder: true,\n          isRoot: false,\n          isSelected: false,\n          selectedIndex: -1,\n          offset: 0,\n          pageSize: 1000,\n          totalElements: 0,\n          id: utils.generateUniqueId(),\n          type: \"folder\"\n        },\n        {\n          name: \"subfolder2\",\n          content: [],\n          path: \"//subfolder2\",\n          isFolder: true,\n          isRoot: false,\n          isSelected: false,\n          selectedIndex: -1,\n          offset: 0,\n          pageSize: 1000,\n          totalElements: 0,\n          id: utils.generateUniqueId(),\n          type: \"folder\"\n        },\n        {\n          name: \"subfolder3\",\n          content: [],\n          path: \"//subfolder3\",\n          isFolder: true,\n          isRoot: false,\n          isSelected: false,\n          selectedIndex: -1,\n          offset: 0,\n          pageSize: 1000,\n          totalElements: 0,\n          id: utils.generateUniqueId(),\n          type: \"folder\"\n        },\n      ],\n      path: \"\",\n      isFolder: true,\n      isRoot: true,\n      isSelected: true,\n      selectedIndex: -1,\n      offset: 0,\n      pageSize: 1000,\n      totalElements: 3,\n      id: utils.generateUniqueId(),\n      type: \"folder\"\n    }\n  ];\n  @Watch(\"path\")\n  handlePathChange() {\n    // TODO: validate the incoming path variable\n  }\n\n  /**\n   * Toggle to trigger a re-render of the whole component.\n   */\n  @State() iLoveJSX: boolean = false;\n\n\n\n  handleItemClick(depth: number = 0, index: number = 0) {\n    // A folder or file was just clicked. Handle it.\n    let serverPathStringToClickedFolder = \"\"; // This will be the term by which the server identifies this folder\n    \n    // If necessary, prune any folders that would be to the right of this.\n    while (this.path.length > depth + 1) {\n      this.path.pop();\n    }\n\n    // (Re)set the isSelected state for this folder and its sibling\n    this.path[depth].content.forEach((val) => {\n      val.isSelected = false;\n    })\n\n    // Update the path at this depth\n    this.path[depth].isSelected = true;\n    this.path[depth].selectedIndex = index;\n\n    // Derive the server path to this folder\n    serverPathStringToClickedFolder += this.path[depth].content[index].path;\n\n    // Fire the change event so the component consumer can provide new data\n    this.fileExplorerChange.emit({\n      \"path\": serverPathStringToClickedFolder,\n      \"depth\": depth,\n      \"index\": index\n    });\n    \n  }\n\n\n\n  @Method()\n  async newFolderObject() {\n    let folder: YetiFileSystemItem = {\n      content: [],\n      name: undefined,\n      path: undefined,\n      isFolder: true,\n      isRoot: false,\n      isSelected: false,\n      selectedIndex: -1,\n      id: utils.generateUniqueId()\n    };\n    return folder;\n  }\n\n\n\n  renderFolders() {\n    // Render all the displayed folders for the currently selected path.\n    let folders = [];\n    let emptyFolder: YetiFileSystemItem = {\n      name: \"\",\n      path: \"/\",\n      content: [],\n      selectedIndex: -1,\n      isRoot: false,\n      isSelected: false\n    }\n\n    // Loop through the path and render each folder in it\n    this.path.forEach((folder, index) => {\n      folders.push(this.renderFolder(folder, index));\n    });\n\n    while (folders.length < this.minimumDisplayDepth) {\n      folders.push(this.renderFolder(emptyFolder, -1));\n    }\n\n    return folders;\n  }\n\n\n\n  renderFolder(folder: YetiFileSystemItem, depth) {\n\n    let jsx =\n\n      <div class=\"yeti-file_explorer-folder\">\n\n        <ul class=\"yeti-file_explorer-folder-items\">\n\n          {this.renderFolderContents(folder, depth)}\n\n        </ul>\n\n      </div>\n\n    return jsx;\n      \n  }\n\n\n\n  renderFolderContents(folder: YetiFileSystemItem, depth: number = -1) {\n\n    return folder.content.map((item, index) => {\n      return this.renderItem(item, depth, index);\n    });\n\n  }\n\n\n\n  renderItem(item: YetiFileSystemItem, depth: number = -1, index: number = -1) {\n\n    let buttonCSS = \"yeti-file_explorer-folder-item-wrapper\" + ((item.isSelected) ? \" yeti-file_explorer-folder-item-wrapper__selected\" : \"\");\n    let jsx = \n\n      <li class=\"yeti-file_explorer-folder-item\">\n\n          <button class={buttonCSS} onClick={() => { this.handleItemClick(depth, index); }} data-path={item.path}>\n\n              <yeti-icon iconCode=\"folder\" alt=\"subfolder\" icon-style=\"outlined\" class=\"yeti-file_explorer-folder-item-icon\"></yeti-icon>\n            \n              <span class=\"yeti-file_explorer-folder-item-name\">{item.name}</span>\n            \n              {/* {\n                (item.content.length) ? \n                  <yeti-icon iconCode=\"chevron_right\" alt=\"open subfolder\" class=\"yeti-file_explorer-folder-more\"></yeti-icon>\n                : \n                  \"\"\n              } */}\n\n              <yeti-icon iconCode=\"chevron_right\" alt=\"open subfolder\" class=\"yeti-file_explorer-folder-more\"></yeti-icon>\n        \n          </button>\n\n      </li>\n\n    return jsx;\n  }\n\n\n\n  render() {\n\n    let wrapperCSS = 'yeti-file_explorer-wrapper';\n\n    wrapperCSS += (this.wrapperCSS != '') ? ` ${this.wrapperCSS}` : '';\n\n    return (\n\n      <div class={wrapperCSS}>\n\n        <div class=\"yeti-file_explorer\">\n\n          <div class=\"yeti-file_explorer-folders\">\n\n            {this.renderFolders()}\n\n          </div>{/* /folders */}\n\n        </div>{/* /file_explorer */}\n\n      \n        <div class=\"yeti-file_explorer-path\">{this.path[ this.path.length - 1 ].path}</div>\n\n      </div>\n\n    );\n  }\n\n\n\n  componentDidRender() {\n    // Scroll the last folder into view\n    let folderElements = this.el.querySelectorAll(\".yeti-file_explorer-folder\");\n\n    if (folderElements && folderElements.length) {\n      folderElements[ folderElements.length-1 ].scrollIntoView({\n        behavior: \"smooth\",\n        block: \"nearest\"\n      });\n    }\n  }\n\n}"],"version":3}