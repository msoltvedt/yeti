{"file":"yeti-file-explorer.entry.esm.js","mappings":"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","names":[],"sources":["src/components/yeti-file-explorer/yeti-file-explorer.tsx"],"sourcesContent":["import { Component, Prop, h, State, Element, Event, EventEmitter, Method, Watch } from '@stencil/core';\r\nimport { YetiFileSystemItem, utils } from '../../utils/utils';\r\n\r\n@Component({\r\n  tag: 'yeti-file-explorer',\r\n  shadow: false,\r\n})\r\nexport class YetiFileExplorer {\r\n\r\n  /**\r\n   * Fires when the user clicks a folder\r\n   */\r\n  @Event() fileExplorerChange: EventEmitter;\r\n\r\n  @Element() el: HTMLElement;\r\n\r\n  /**\r\n   * CSS classlist applied to the explorer wrapper element.\r\n   */\r\n  @Prop({ attribute: 'wrapper-css'}) wrapperCSS?: string = '';\r\n\r\n  /**\r\n   * Whether or not to show files (folders are always shown).\r\n   */\r\n  @Prop() showFiles: boolean = true;\r\n\r\n  /**\r\n   * minimum number of folder layers to show\r\n   */\r\n  @Prop() minimumDisplayDepth: number = 3;\r\n\r\n  /**\r\n   * All the displayed folders in order from root to terminus\r\n   */\r\n  @Prop({ mutable: true }) path: YetiFileSystemItem[] = /*[\r\n    {\r\n      name: \"root\",\r\n      content: [],\r\n      path: \"//\",\r\n      isFolder: true,\r\n      isRoot: true,\r\n      isSelected: true,\r\n      isTerminus: false,\r\n      selectedIndex: -1,\r\n      offset: 0,\r\n      pageSize: 1000,\r\n      totalElements: 0,\r\n      id: utils.generateUniqueId(),\r\n      type: \"folder\"\r\n    }\r\n  ];*/\r\n  [\r\n    {\r\n      name: \"root\",\r\n      content: [\r\n        {\r\n          name: \"subfolder1\",\r\n          content: [],\r\n          path: \"//subfolder1\",\r\n          isFolder: true,\r\n          isRoot: false,\r\n          isSelected: false,\r\n          selectedIndex: -1,\r\n          offset: 0,\r\n          pageSize: 1000,\r\n          totalElements: 0,\r\n          id: utils.generateUniqueId(),\r\n          type: \"folder\"\r\n        },\r\n        {\r\n          name: \"subfolder2\",\r\n          content: [],\r\n          path: \"//subfolder2\",\r\n          isFolder: true,\r\n          isRoot: false,\r\n          isSelected: false,\r\n          selectedIndex: -1,\r\n          offset: 0,\r\n          pageSize: 1000,\r\n          totalElements: 0,\r\n          id: utils.generateUniqueId(),\r\n          type: \"folder\"\r\n        },\r\n        {\r\n          name: \"subfolder3\",\r\n          content: [],\r\n          path: \"//subfolder3\",\r\n          isFolder: true,\r\n          isRoot: false,\r\n          isSelected: false,\r\n          selectedIndex: -1,\r\n          offset: 0,\r\n          pageSize: 1000,\r\n          totalElements: 0,\r\n          id: utils.generateUniqueId(),\r\n          type: \"folder\"\r\n        },\r\n      ],\r\n      path: \"\",\r\n      isFolder: true,\r\n      isRoot: true,\r\n      isSelected: true,\r\n      selectedIndex: -1,\r\n      offset: 0,\r\n      pageSize: 1000,\r\n      totalElements: 3,\r\n      id: utils.generateUniqueId(),\r\n      type: \"folder\"\r\n    }\r\n  ];\r\n  @Watch(\"path\")\r\n  handlePathChange() {\r\n    // TODO: validate the incoming path variable\r\n  }\r\n\r\n  /**\r\n   * Toggle to trigger a re-render of the whole component.\r\n   */\r\n  @State() iLoveJSX: boolean = false;\r\n\r\n\r\n\r\n  handleItemClick(depth: number = 0, index: number = 0) {\r\n    // A folder or file was just clicked. Handle it.\r\n    let serverPathStringToClickedFolder = \"\"; // This will be the term by which the server identifies this folder\r\n    \r\n    // If necessary, prune any folders that would be to the right of this.\r\n    while (this.path.length > depth + 1) {\r\n      this.path.pop();\r\n    }\r\n\r\n    // (Re)set the isSelected state for this folder and its sibling\r\n    this.path[depth].content.forEach((val) => {\r\n      val.isSelected = false;\r\n    })\r\n\r\n    // Update the path at this depth\r\n    this.path[depth].isSelected = true;\r\n    this.path[depth].selectedIndex = index;\r\n\r\n    // Derive the server path to this folder\r\n    serverPathStringToClickedFolder += this.path[depth].content[index].path;\r\n\r\n    // Fire the change event so the component consumer can provide new data\r\n    this.fileExplorerChange.emit({\r\n      \"path\": serverPathStringToClickedFolder,\r\n      \"depth\": depth,\r\n      \"index\": index\r\n    });\r\n    \r\n  }\r\n\r\n\r\n\r\n  @Method()\r\n  async newFolderObject() {\r\n    let folder: YetiFileSystemItem = {\r\n      content: [],\r\n      name: undefined,\r\n      path: undefined,\r\n      isFolder: true,\r\n      isRoot: false,\r\n      isSelected: false,\r\n      selectedIndex: -1,\r\n      id: utils.generateUniqueId()\r\n    };\r\n    return folder;\r\n  }\r\n\r\n\r\n\r\n  renderFolders() {\r\n    // Render all the displayed folders for the currently selected path.\r\n    let folders = [];\r\n    let emptyFolder: YetiFileSystemItem = {\r\n      name: \"\",\r\n      path: \"/\",\r\n      content: [],\r\n      selectedIndex: -1,\r\n      isRoot: false,\r\n      isSelected: false\r\n    }\r\n\r\n    // Loop through the path and render each folder in it\r\n    this.path.forEach((folder, index) => {\r\n      folders.push(this.renderFolder(folder, index));\r\n    });\r\n\r\n    while (folders.length < this.minimumDisplayDepth) {\r\n      folders.push(this.renderFolder(emptyFolder, -1));\r\n    }\r\n\r\n    return folders;\r\n  }\r\n\r\n\r\n\r\n  renderFolder(folder: YetiFileSystemItem, depth) {\r\n\r\n    let jsx =\r\n\r\n      <div class=\"yeti-file_explorer-folder\">\r\n\r\n        <ul class=\"yeti-file_explorer-folder-items\">\r\n\r\n          {this.renderFolderContents(folder, depth)}\r\n\r\n        </ul>\r\n\r\n      </div>\r\n\r\n    return jsx;\r\n      \r\n  }\r\n\r\n\r\n\r\n  renderFolderContents(folder: YetiFileSystemItem, depth: number = -1) {\r\n\r\n    return folder.content.map((item, index) => {\r\n      return this.renderItem(item, depth, index);\r\n    });\r\n\r\n  }\r\n\r\n\r\n\r\n  renderItem(item: YetiFileSystemItem, depth: number = -1, index: number = -1) {\r\n\r\n    let buttonCSS = \"yeti-file_explorer-folder-item-wrapper\" + ((item.isSelected) ? \" yeti-file_explorer-folder-item-wrapper__selected\" : \"\");\r\n    let jsx = \r\n\r\n      <li class=\"yeti-file_explorer-folder-item\">\r\n\r\n          <button class={buttonCSS} onClick={() => { this.handleItemClick(depth, index); }} data-path={item.path}>\r\n\r\n              <yeti-icon iconCode=\"folder\" alt=\"subfolder\" icon-style=\"outlined\" class=\"yeti-file_explorer-folder-item-icon\"></yeti-icon>\r\n            \r\n              <span class=\"yeti-file_explorer-folder-item-name\">{item.name}</span>\r\n            \r\n              {/* {\r\n                (item.content.length) ? \r\n                  <yeti-icon iconCode=\"chevron_right\" alt=\"open subfolder\" class=\"yeti-file_explorer-folder-more\"></yeti-icon>\r\n                : \r\n                  \"\"\r\n              } */}\r\n\r\n              <yeti-icon iconCode=\"chevron_right\" alt=\"open subfolder\" class=\"yeti-file_explorer-folder-more\"></yeti-icon>\r\n        \r\n          </button>\r\n\r\n      </li>\r\n\r\n    return jsx;\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n\r\n    let wrapperCSS = 'yeti-file_explorer-wrapper';\r\n\r\n    wrapperCSS += (this.wrapperCSS != '') ? ` ${this.wrapperCSS}` : '';\r\n\r\n    return (\r\n\r\n      <div class={wrapperCSS}>\r\n\r\n        <div class=\"yeti-file_explorer\">\r\n\r\n          <div class=\"yeti-file_explorer-folders\">\r\n\r\n            {this.renderFolders()}\r\n\r\n          </div>{/* /folders */}\r\n\r\n        </div>{/* /file_explorer */}\r\n\r\n      \r\n        <div class=\"yeti-file_explorer-path\">{this.path[ this.path.length - 1 ].path}</div>\r\n\r\n      </div>\r\n\r\n    );\r\n  }\r\n\r\n\r\n\r\n  componentDidRender() {\r\n    // Scroll the last folder into view\r\n    let folderElements = this.el.querySelectorAll(\".yeti-file_explorer-folder\");\r\n\r\n    if (folderElements && folderElements.length) {\r\n      folderElements[ folderElements.length-1 ].scrollIntoView({\r\n        behavior: \"smooth\",\r\n        block: \"nearest\"\r\n      });\r\n    }\r\n  }\r\n\r\n}"],"version":3}