{"file":"yeti-file-explorer.entry.esm.js","mappings":"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","names":[],"sources":["src/components/yeti-file-explorer/yeti-file-explorer.tsx"],"sourcesContent":["import { Component, Prop, h, State, Element, Event, EventEmitter, Method, Watch } from '@stencil/core';\r\nimport { YetiFileSystemItem, utils } from '../../utils/utils';\r\n\r\n@Component({\r\n  tag: 'yeti-file-explorer',\r\n  shadow: false,\r\n})\r\nexport class YetiFileExplorer {\r\n\r\n  /**\r\n   * Fires when the user clicks a folder\r\n   */\r\n  @Event() fileExplorerChange: EventEmitter;\r\n\r\n  @Element() el: HTMLElement;\r\n\r\n  /**\r\n   * CSS classlist applied to the explorer wrapper element.\r\n   */\r\n  @Prop() wrapperClass?: string = '';\r\n\r\n  /**\r\n   * Whether or not to show files (folders are always shown).\r\n   */\r\n  @Prop() showFiles: boolean = true;\r\n\r\n  /**\r\n   * minimum number of folder layers to show\r\n   */\r\n  @Prop() minimumDisplayDepth: number = 3;\r\n\r\n  /**\r\n   * All the displayed folders in order from root to terminus\r\n   */\r\n  @Prop({ mutable: true }) path: YetiFileSystemItem[] = \r\n  [\r\n    {\r\n      name: \"root\",\r\n      content: [],\r\n      path: \"\",\r\n      displayPath: \"\",\r\n      isFolder: true,\r\n      isRoot: true,\r\n      isSelected: true,\r\n      isLoading: false,\r\n      selectedIndex: -1,\r\n      offset: 0,\r\n      pageSize: 1000,\r\n      totalElements: 0,\r\n      id: utils.generateUniqueId(),\r\n      type: \"folder\"\r\n    }\r\n  ];\r\n\r\n\r\n\r\n  @Watch(\"path\")\r\n  handlePathChange() {\r\n    // TODO: validate the incoming path variable\r\n  }\r\n\r\n  /**\r\n   * Toggle to trigger a re-render of the whole component.\r\n   */\r\n  @State() iLoveJSX: boolean = false;\r\n\r\n\r\n\r\n  handleItemClick(depth: number = 0, index: number = 0) {\r\n    // A folder or file was just clicked. Handle it.\r\n    let serverPathStringToClickedFolder = \"\"; // This will be the term by which the server identifies this folder\r\n    let displayPathStringToClickedFolder = \"\"; // This will be the user-readable version of the path\r\n    \r\n    // If necessary, prune any folders that would be to the right of this.\r\n    while (this.path.length > depth + 1) {\r\n      this.path.pop();\r\n    }\r\n\r\n    // (Re)set the isSelected state for this folder and its sibling\r\n    this.path[depth].content.forEach((val) => {\r\n      val.isSelected = false;\r\n    })\r\n\r\n    // Update the path at this depth\r\n    this.path[depth].isSelected = true;\r\n    this.path[depth].selectedIndex = index;\r\n\r\n    // Derive the server and display paths to this folder\r\n    serverPathStringToClickedFolder += this.path[depth].content[index].path;\r\n    displayPathStringToClickedFolder += this.path[depth].content[index].displayPath;\r\n\r\n    // Fire the change event so the component consumer can provide new data\r\n    this.fileExplorerChange.emit({\r\n      \"path\": serverPathStringToClickedFolder,\r\n      \"displayPath\": displayPathStringToClickedFolder,\r\n      \"depth\": depth,\r\n      \"index\": index\r\n    });\r\n    \r\n  }\r\n\r\n\r\n\r\n  handleItemKeyDown(event: KeyboardEvent, depth: number = 0, index: number = 0) {\r\n    // A folder or file was just clicked. Handle it.\r\n    \r\n    let htmlElement = event.target as HTMLElement;\r\n    let grandParentULElement = htmlElement.closest(\".yeti-file_explorer-folder-items\");\r\n    let siblingElements = grandParentULElement.querySelectorAll(\".yeti-file_explorer-folder-item .yeti-file_explorer-folder-item-wrapper\");\r\n    let indexOfSiblingToFocus;\r\n    let siblingToFocus;\r\n    let key = event.key.toLowerCase();\r\n    \r\n    switch (key) {\r\n\r\n      case \"arrowdown\": {\r\n        event.preventDefault();\r\n        indexOfSiblingToFocus = (index+1 >= this.path[depth].content.length)  ?  0  :  index + 1;\r\n        siblingToFocus = siblingElements[indexOfSiblingToFocus] as HTMLElement;\r\n        siblingToFocus.focus();\r\n        break;\r\n      }\r\n\r\n      case \"arrowup\": {\r\n        event.preventDefault();\r\n        indexOfSiblingToFocus = (index-1 < 0)  ?  this.path[depth].content.length - 1  :  index - 1;\r\n        siblingToFocus = siblingElements[indexOfSiblingToFocus] as HTMLElement;\r\n        siblingToFocus.focus();\r\n        break;\r\n      }\r\n\r\n\r\n      case \"arrowright\": {\r\n        \r\n        if (this.path[depth+1] && this.path[depth+1].content && this.path[depth+1].content.length > 0) {\r\n\r\n          let indexOfAncestor = (this.path[depth+1].selectedIndex > 0) ? this.path[depth+1].selectedIndex : 0;\r\n\r\n          event.preventDefault();\r\n          // Find the first button in the next column over and focus on it\r\n          siblingToFocus = (this.el.querySelectorAll(\".yeti-file_explorer-folder-items\")[depth+1].querySelectorAll(\".yeti-file_explorer-folder-item .yeti-file_explorer-folder-item-wrapper\")[indexOfAncestor] as HTMLElement);\r\n          siblingToFocus.focus();\r\n          siblingToFocus.scrollIntoView({\r\n            behavior: \"smooth\",\r\n            block: \"nearest\",\r\n            inline: \"nearest\"\r\n          });\r\n\r\n        }\r\n\r\n        break;\r\n      }\r\n\r\n\r\n      case \"arrowleft\": {\r\n\r\n        if (depth > 0) {\r\n\r\n          let indexOfAncestor = this.path[depth-1].selectedIndex;\r\n\r\n          event.preventDefault();\r\n          // Focus on the item in the previous column that's in the path\r\n          siblingToFocus = (this.el.querySelectorAll(\".yeti-file_explorer-folder-items\")[depth-1].querySelectorAll(\".yeti-file_explorer-folder-item .yeti-file_explorer-folder-item-wrapper\")[indexOfAncestor] as HTMLElement)\r\n          siblingToFocus.focus();\r\n          siblingToFocus.scrollIntoView({\r\n            behavior: \"smooth\",\r\n            block: \"nearest\",\r\n            inline: \"nearest\"\r\n          });\r\n\r\n        }\r\n\r\n        break;\r\n\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n\r\n\r\n  @Method()\r\n  async newFolderObject() {\r\n    let folder: YetiFileSystemItem = {\r\n      content: [],\r\n      name: undefined,\r\n      path: undefined,\r\n      displayPath: undefined,\r\n      isFolder: true,\r\n      isRoot: false,\r\n      isLoading: false,\r\n      isSelected: false,\r\n      selectedIndex: -1,\r\n      id: utils.generateUniqueId()\r\n    };\r\n    return folder;\r\n  }\r\n\r\n\r\n\r\n  renderFolders() {\r\n    // Render all the displayed folders for the currently selected path.\r\n    let folders = [];\r\n    let emptyFolder: YetiFileSystemItem = {\r\n      name: \"\",\r\n      path: \"/\",\r\n      displayPath: \"\",\r\n      content: [],\r\n      selectedIndex: -1,\r\n      isRoot: false,\r\n      isSelected: false,\r\n      isLoading: false\r\n    }\r\n\r\n    // Loop through the path and render each folder in it\r\n    this.path.forEach((folder, index) => {\r\n      folders.push(this.renderFolder(folder, index));\r\n    });\r\n\r\n    while (folders.length < this.minimumDisplayDepth) {\r\n      folders.push(this.renderFolder(emptyFolder, -1));\r\n    }\r\n\r\n    return folders;\r\n  }\r\n\r\n\r\n\r\n  renderFolder(folder: YetiFileSystemItem, depth) {\r\n\r\n    // We have two possibilities here. Either the item is in a normal or loading state. We want to return the applicable JSX based on that state.\r\n    \r\n    // Loading state\r\n    let loadingJsx =\r\n\r\n    <div class=\"yeti-file_explorer-folder\">\r\n\r\n      <ul class=\"yeti-file_explorer-folder-items\">\r\n\r\n        <li class=\"yeti-file_explorer-folder-item\"><yeti-loading isInline={true} isActive={true}></yeti-loading></li>\r\n\r\n      </ul>\r\n\r\n    </div>;\r\n\r\n\r\n    // Normal (not Loading) state\r\n    let jsx =\r\n\r\n      <div class=\"yeti-file_explorer-folder\">\r\n\r\n        <ul class=\"yeti-file_explorer-folder-items\">\r\n\r\n          {this.renderFolderContents(folder, depth)}\r\n\r\n        </ul>\r\n\r\n      </div>;\r\n\r\n\r\n    return (folder.isLoading) ? loadingJsx : jsx;\r\n      \r\n  }\r\n\r\n\r\n\r\n  renderFolderContents(folder: YetiFileSystemItem, depth: number = -1) {\r\n\r\n    return folder.content.map((item, index) => {\r\n      return this.renderItem(item, depth, index);\r\n    });\r\n\r\n  }\r\n\r\n\r\n\r\n  renderItem(item: YetiFileSystemItem, depth: number = -1, index: number = -1) {\r\n\r\n    let buttonCSS = \"yeti-file_explorer-folder-item-wrapper\" + ((item.isSelected) ? \" yeti-file_explorer-folder-item-wrapper__selected\" : \"\");\r\n    \r\n    let jsx = \r\n\r\n      <li class=\"yeti-file_explorer-folder-item\">\r\n\r\n          <button class={buttonCSS} onClick={() => { this.handleItemClick(depth, index); }} data-path={item.path} onKeyDown={(e) => { this.handleItemKeyDown(e, depth, index); }}>\r\n\r\n              <yeti-icon iconCode=\"folder\" alt=\"subfolder\" icon-style=\"outlined\" class=\"yeti-file_explorer-folder-item-icon\"></yeti-icon>\r\n            \r\n              <span class=\"yeti-file_explorer-folder-item-name\">{item.name}</span>\r\n\r\n              <yeti-icon iconCode=\"chevron_right\" alt=\"open subfolder\" class=\"yeti-file_explorer-folder-more\"></yeti-icon>\r\n        \r\n          </button>\r\n\r\n      </li>;\r\n\r\n    return jsx;\r\n\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n\r\n    let wrapperClass = 'yeti-file_explorer-wrapper';\r\n\r\n    wrapperClass += (this.wrapperClass != '') ? ` ${this.wrapperClass}` : '';\r\n\r\n    return (\r\n\r\n      <div class={wrapperClass}>\r\n\r\n        <div class=\"yeti-file_explorer\">\r\n\r\n          <div class=\"yeti-file_explorer-folders\">\r\n\r\n            {this.renderFolders()}\r\n\r\n          </div>{/* /folders */}\r\n\r\n        </div>{/* /file_explorer */}\r\n\r\n      \r\n        <div class=\"yeti-file_explorer-path\">{this.path[ this.path.length - 1 ].displayPath}</div>\r\n\r\n      </div>\r\n\r\n    );\r\n  }\r\n\r\n\r\n\r\n  componentDidRender() {\r\n    // Scroll the last folder into view\r\n    let foldersElement = this.el.querySelector(\".yeti-file_explorer-folders\");\r\n\r\n    if (foldersElement) {\r\n\r\n      foldersElement.scrollIntoView({\r\n        behavior: \"smooth\",\r\n        block: \"start\",\r\n        inline: \"end\"\r\n      });\r\n\r\n    }\r\n  }\r\n\r\n}"],"version":3}