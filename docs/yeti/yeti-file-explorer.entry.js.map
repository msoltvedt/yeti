{"file":"yeti-file-explorer.entry.esm.js","mappings":"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","names":[],"sources":["src/components/yeti-file-explorer/yeti-file-explorer.tsx"],"sourcesContent":["import { Component, Prop, h, State, Element, Event, EventEmitter, Method, Watch } from '@stencil/core';\nimport { YetiFileSystemItem, utils } from '../../utils/utils';\n\n@Component({\n  tag: 'yeti-file-explorer',\n  shadow: false,\n})\nexport class YetiFileExplorer {\n\n  /**\n   * Fires when the user clicks a folder\n   */\n  @Event() fileExplorerChange: EventEmitter;\n\n  @Element() el: HTMLElement;\n\n  /**\n   * CSS classlist applied to the explorer wrapper element.\n   */\n  @Prop() wrapperClass?: string = '';\n\n  /**\n   * Whether or not to show files (folders are always shown).\n   */\n  @Prop() showFiles: boolean = true;\n\n  /**\n   * minimum number of folder layers to show\n   */\n  @Prop() minimumDisplayDepth: number = 3;\n\n  /**\n   * All the displayed folders in order from root to terminus\n   */\n  @Prop({ mutable: true }) path: YetiFileSystemItem[] = \n  [\n    {\n      name: \"root\",\n      content: [],\n      path: \"\",\n      displayPath: \"\",\n      isFolder: true,\n      isRoot: true,\n      isSelected: true,\n      isLoading: false,\n      selectedIndex: -1,\n      offset: 0,\n      pageSize: 1000,\n      totalElements: 0,\n      id: utils.generateUniqueId(),\n      type: \"folder\"\n    }\n  ];\n\n\n\n  @Watch(\"path\")\n  handlePathChange() {\n    // TODO: validate the incoming path variable\n  }\n\n  /**\n   * Toggle to trigger a re-render of the whole component.\n   */\n  @State() iLoveJSX: boolean = false;\n\n\n\n  handleItemClick(depth: number = 0, index: number = 0) {\n    // A folder or file was just clicked. Handle it.\n    let serverPathStringToClickedFolder = \"\"; // This will be the term by which the server identifies this folder\n    let displayPathStringToClickedFolder = \"\"; // This will be the user-readable version of the path\n    \n    // If necessary, prune any folders that would be to the right of this.\n    while (this.path.length > depth + 1) {\n      this.path.pop();\n    }\n\n    // (Re)set the isSelected state for this folder and its sibling\n    this.path[depth].content.forEach((val) => {\n      val.isSelected = false;\n    })\n\n    // Update the path at this depth\n    this.path[depth].isSelected = true;\n    this.path[depth].selectedIndex = index;\n\n    // Derive the server and display paths to this folder\n    serverPathStringToClickedFolder += this.path[depth].content[index].path;\n    displayPathStringToClickedFolder += this.path[depth].content[index].displayPath;\n\n    // Fire the change event so the component consumer can provide new data\n    this.fileExplorerChange.emit({\n      \"path\": serverPathStringToClickedFolder,\n      \"displayPath\": displayPathStringToClickedFolder,\n      \"depth\": depth,\n      \"index\": index\n    });\n    \n  }\n\n\n\n  handleItemKeyDown(event: KeyboardEvent, depth: number = 0, index: number = 0) {\n    // A folder or file was just clicked. Handle it.\n    \n    let htmlElement = event.target as HTMLElement;\n    let grandParentULElement = htmlElement.closest(\".yeti-file_explorer-folder-items\");\n    let siblingElements = grandParentULElement.querySelectorAll(\".yeti-file_explorer-folder-item .yeti-file_explorer-folder-item-wrapper\");\n    let indexOfSiblingToFocus;\n    let siblingToFocus;\n    let key = event.key.toLowerCase();\n    \n    switch (key) {\n\n      case \"arrowdown\": {\n        event.preventDefault();\n        indexOfSiblingToFocus = (index+1 >= this.path[depth].content.length)  ?  0  :  index + 1;\n        siblingToFocus = siblingElements[indexOfSiblingToFocus] as HTMLElement;\n        siblingToFocus.focus();\n        break;\n      }\n\n      case \"arrowup\": {\n        event.preventDefault();\n        indexOfSiblingToFocus = (index-1 < 0)  ?  this.path[depth].content.length - 1  :  index - 1;\n        siblingToFocus = siblingElements[indexOfSiblingToFocus] as HTMLElement;\n        siblingToFocus.focus();\n        break;\n      }\n\n\n      case \"arrowright\": {\n        \n        if (this.path[depth+1] && this.path[depth+1].content && this.path[depth+1].content.length > 0) {\n\n          let indexOfAncestor = (this.path[depth+1].selectedIndex > 0) ? this.path[depth+1].selectedIndex : 0;\n\n          event.preventDefault();\n          // Find the first button in the next column over and focus on it\n          siblingToFocus = (this.el.querySelectorAll(\".yeti-file_explorer-folder-items\")[depth+1].querySelectorAll(\".yeti-file_explorer-folder-item .yeti-file_explorer-folder-item-wrapper\")[indexOfAncestor] as HTMLElement);\n          siblingToFocus.focus();\n          siblingToFocus.scrollIntoView({\n            behavior: \"smooth\",\n            block: \"nearest\",\n            inline: \"nearest\"\n          });\n\n        }\n\n        break;\n      }\n\n\n      case \"arrowleft\": {\n\n        if (depth > 0) {\n\n          let indexOfAncestor = this.path[depth-1].selectedIndex;\n\n          event.preventDefault();\n          // Focus on the item in the previous column that's in the path\n          siblingToFocus = (this.el.querySelectorAll(\".yeti-file_explorer-folder-items\")[depth-1].querySelectorAll(\".yeti-file_explorer-folder-item .yeti-file_explorer-folder-item-wrapper\")[indexOfAncestor] as HTMLElement)\n          siblingToFocus.focus();\n          siblingToFocus.scrollIntoView({\n            behavior: \"smooth\",\n            block: \"nearest\",\n            inline: \"nearest\"\n          });\n\n        }\n\n        break;\n\n      }\n\n    }\n  }\n\n\n\n  @Method()\n  async newFolderObject() {\n    let folder: YetiFileSystemItem = {\n      content: [],\n      name: undefined,\n      path: undefined,\n      displayPath: undefined,\n      isFolder: true,\n      isRoot: false,\n      isLoading: false,\n      isSelected: false,\n      selectedIndex: -1,\n      id: utils.generateUniqueId()\n    };\n    return folder;\n  }\n\n\n\n  renderFolders() {\n    // Render all the displayed folders for the currently selected path.\n    let folders = [];\n    let emptyFolder: YetiFileSystemItem = {\n      name: \"\",\n      path: \"/\",\n      displayPath: \"\",\n      content: [],\n      selectedIndex: -1,\n      isRoot: false,\n      isSelected: false,\n      isLoading: false\n    }\n\n    // Loop through the path and render each folder in it\n    this.path.forEach((folder, index) => {\n      folders.push(this.renderFolder(folder, index));\n    });\n\n    while (folders.length < this.minimumDisplayDepth) {\n      folders.push(this.renderFolder(emptyFolder, -1));\n    }\n\n    return folders;\n  }\n\n\n\n  renderFolder(folder: YetiFileSystemItem, depth) {\n\n    // We have two possibilities here. Either the item is in a normal or loading state. We want to return the applicable JSX based on that state.\n    \n    // Loading state\n    let loadingJsx =\n\n    <div class=\"yeti-file_explorer-folder\">\n\n      <ul class=\"yeti-file_explorer-folder-items\">\n\n        <li class=\"yeti-file_explorer-folder-item\"><yeti-loading isInline={true} isActive={true}></yeti-loading></li>\n\n      </ul>\n\n    </div>;\n\n\n    // Normal (not Loading) state\n    let jsx =\n\n      <div class=\"yeti-file_explorer-folder\">\n\n        <ul class=\"yeti-file_explorer-folder-items\">\n\n          {this.renderFolderContents(folder, depth)}\n\n        </ul>\n\n      </div>;\n\n\n    return (folder.isLoading) ? loadingJsx : jsx;\n      \n  }\n\n\n\n  renderFolderContents(folder: YetiFileSystemItem, depth: number = -1) {\n\n    return folder.content.map((item, index) => {\n      return this.renderItem(item, depth, index);\n    });\n\n  }\n\n\n\n  renderItem(item: YetiFileSystemItem, depth: number = -1, index: number = -1) {\n\n    let buttonCSS = \"yeti-file_explorer-folder-item-wrapper\" + ((item.isSelected) ? \" yeti-file_explorer-folder-item-wrapper__selected\" : \"\");\n    \n    let jsx = \n\n      <li class=\"yeti-file_explorer-folder-item\">\n\n          <button class={buttonCSS} onClick={() => { this.handleItemClick(depth, index); }} data-path={item.path} onKeyDown={(e) => { this.handleItemKeyDown(e, depth, index); }}>\n\n              <yeti-icon iconCode=\"folder\" alt=\"subfolder\" icon-style=\"outlined\" class=\"yeti-file_explorer-folder-item-icon\"></yeti-icon>\n            \n              <span class=\"yeti-file_explorer-folder-item-name\">{item.name}</span>\n\n              <yeti-icon iconCode=\"chevron_right\" alt=\"open subfolder\" class=\"yeti-file_explorer-folder-more\"></yeti-icon>\n        \n          </button>\n\n      </li>;\n\n    return jsx;\n\n  }\n\n\n\n  render() {\n\n    let wrapperClass = 'yeti-file_explorer-wrapper';\n\n    wrapperClass += (this.wrapperClass != '') ? ` ${this.wrapperClass}` : '';\n\n    return (\n\n      <div class={wrapperClass}>\n\n        <div class=\"yeti-file_explorer\">\n\n          <div class=\"yeti-file_explorer-folders\">\n\n            {this.renderFolders()}\n\n          </div>{/* /folders */}\n\n        </div>{/* /file_explorer */}\n\n      \n        <div class=\"yeti-file_explorer-path\">{this.path[ this.path.length - 1 ].displayPath}</div>\n\n      </div>\n\n    );\n  }\n\n\n\n  componentDidRender() {\n    // Scroll the last folder into view\n    let foldersElement = this.el.querySelector(\".yeti-file_explorer-folders\");\n\n    if (foldersElement) {\n\n      foldersElement.scrollIntoView({\n        behavior: \"smooth\",\n        block: \"start\",\n        inline: \"end\"\n      });\n\n    }\n  }\n\n}"],"version":3}