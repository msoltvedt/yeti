{"version":3,"names":["YetiIcon","utils","generateUniqueId","componentDidRender","this","focusable","el","setAttribute","render","iconCSS","styleModifier","iconStyle","h","Object","assign","class","alt","iconCode","YetiTooltip","handleSlotHover","clickToOpen","scrollTooltipIntoView","handleSlotFocus","handleDeFocusingClick","isClickedOpen","handleClick","e","stopImmediatePropagation","handleTriggerClick","preventDefault","handleCloseTooltipClick","actual","querySelector","scrollIntoView","behavior","block","componentWillLoad","componentId","getAttribute","tipId","slotId","wrapperCSS","tipClass","tooltipCSS","position","onClick","id","text","slot","firstElementChild"],"sources":["src/components/yeti-icon/yeti-icon.tsx","src/components/yeti-tooltip/yeti-tooltip.tsx"],"sourcesContent":["import { Component, Prop, h, State, Element } from '@stencil/core';\nimport { utils } from '../../utils/utils';\n\n@Component({\n  tag: 'yeti-icon',\n  shadow: false,\n})\nexport class YetiIcon {\n\n  @Element() el: HTMLElement;\n\n  /**\n   * The type of icon. Corresponds to the analogous \"code\" Google uses (i.e. check_circle).\n   */\n  @Prop({ attribute: 'type'}) iconCode: string = 'check_circle';\n\n  /**\n   * The type of icon. Corresponds to the analogous \"code\" Google uses (i.e. check_circle).\n   */\n  @Prop() iconStyle: string = '';\n\n  /**\n   * CSS classlist applied to the actual element producing the icon.\n   */\n  @Prop({ attribute: 'icon-css'}) iconCSS?: string = '';\n\n  /**\n   * id of the actual element producing the icon. Set to a unique id if one is not provided.\n   */\n  @Prop() iconId?: string = utils.generateUniqueId();\n\n  /**\n   * Optional replacement text to use as a more clear description of the icon for screen-reader users. Otherwise AT will announce the Google \"code\" (i.e. check_circle).\n   */\n  @Prop() alt?: string = \"\";\n\n  /**\n   * Whether the icon can gain focus (used primarily for tooltip anchors).\n   */\n  @Prop() focusable?: boolean = false;\n\n  /**\n   * Used to toggle a re-render of the icon.\n   */\n  @State() iLoveJSX: boolean = false;\n\n\n\n  componentDidRender() {\n    if (this.focusable) {\n        this.el.setAttribute(\"tabindex\", \"0\");\n    }\n  }\n\n\n\n  render() {\n\n    let iconCSS = 'material-icons';\n    let styleModifier = '';\n\n    switch (this.iconStyle) {\n      \n      case 'outlined':\n        styleModifier = '-outlined';\n\n      case '':\n      default: {\n        break;\n      }\n    }\n\n    iconCSS += styleModifier;\n\n    iconCSS += (this.iconCSS != '') ? ` ${this.iconCSS}` : '';\n\n    return (\n\n        // <span class=\"yeti-icon-wrapper\" {...((this.focusable) ? {\"tabindex\": 0} : {})}>\n        [\n            \n            <span class={iconCSS} {...((this.alt != \"\") ? {\"aria-hidden\": true} : {})}>{this.iconCode}</span>,\n            \n            (this.alt != \"\") ? <span class=\"yeti-a11y-hidden\">{this.alt}</span> : \"\"\n          \n        ]\n        //</span>\n\n    );\n  }\n\n}","import { Component, Prop, h, State, Element, Listen } from '@stencil/core';\nimport { utils } from '../../utils/utils';\n\n@Component({\n  tag: 'yeti-tooltip',\n  shadow: false,\n})\nexport class YetiTooltip {\n\n  @Element() el: HTMLElement;\n\n  /**\n   * CSS classlist to add to the element serving as the component's wrapper.\n   */\n  @Prop({ attribute: 'wrapper-class'}) wrapperCSS: string = '';\n\n  /**\n   * CSS classlist to add to the actual tooltip element.\n   */\n  @Prop({ attribute: 'tooltip-class'}) tooltipCSS: string = '';\n\n  /**\n   * Text value to display as the tooltip's contents.\n   */\n  @Prop() text: string = \"I'm a helpful tooltip.\";\n\n  /**\n   * Token list to describe the tooltip's position relative to its anchor: left | right and/or above | below.\n   */\n  @Prop() position: string = \"above\";\n\n  /**\n   * Token list to describe the tooltip's position relative to its anchor: left | right and/or above | below.\n   */\n  @Prop() clickToOpen: boolean = false;\n\n  /**\n   * id of the component's slot element.\n   */\n  @Prop({\n    mutable: true,\n    reflect: true\n  }) slotId: string = \"\"; // Set on load\n\n  /**\n   * id of the component's actual element corresponding to the tooltip. Will be auto-populated with a unique value if not provided.\n   */\n  @Prop({\n    mutable: true,\n    reflect: true\n  }) tipId: string = \"\"; // Set on load\n\n  /**\n   * Whether the anchor should be forced to be a CSS display block style or left as is.\n   */\n  @Prop() blockAnchor: boolean = false;\n\n  /**\n   * Toggle to force a re-render of the whole component.\n   */\n  @State() iLoveJSX: boolean = false;\n\n  /**\n   * Whether the tooltip has been clicked open or not.\n   */\n  @State() isClickedOpen: boolean = false;\n\n\n\n  @Listen('mouseover')\n  handleSlotHover() {\n    if (!this.clickToOpen) {\n      this.scrollTooltipIntoView();\n    }\n  }\n\n\n\n  @Listen('focusin')\n  handleSlotFocus() {\n    if (!this.clickToOpen) {\n      this.scrollTooltipIntoView();\n    }\n  }\n\n\n\n  @Listen('click', {\n    target: 'body'\n  })\n  handleDeFocusingClick() {\n    this.isClickedOpen = false;\n  }\n\n\n\n  @Listen('click')\n  handleClick(e) {\n    e.stopImmediatePropagation(); // Intercept the click event before it gets to the body-level handler\n  }\n\n  \n\n  handleTriggerClick(e) {\n    if (this.clickToOpen) {\n      this.isClickedOpen = !this.isClickedOpen;\n      e.stopImmediatePropagation();\n      e.preventDefault();\n      this.scrollTooltipIntoView();\n      return false;\n    }\n  }\n\n\n\n  handleCloseTooltipClick(e) {\n    this.isClickedOpen = false;\n    e.stopImmediatePropagation();\n    e.preventDefault();\n  }\n\n\n\n  scrollTooltipIntoView() {\n    let actual = this.el.querySelector(\".yeti-tooltip\");\n    actual.scrollIntoView({\n      behavior: \"smooth\",\n      block: \"nearest\"\n    });\n  }\n\n\n\n  componentWillLoad() {\n    // Set up ids\n    let componentId = this.el.getAttribute(\"id\");\n\n    if (!componentId || componentId == \"\") {\n      componentId = utils.generateUniqueId();\n      this.el.setAttribute(\"id\", componentId);\n    }\n\n    this.tipId = (this.tipId != \"\") ? this.tipId : `${componentId}_tip`;\n    this.slotId = (this.slotId != \"\") ? this.slotId : `${componentId}_slot`;\n  }\n\n\n  render() {\n\n    let wrapperCSS = 'yeti-tooltip-wrapper';\n    let tipClass = 'yeti-tooltip';\n\n    wrapperCSS += (this.wrapperCSS != '') ? ` ${this.wrapperCSS}` : '';\n    tipClass += (this.tooltipCSS != '') ? ` ${this.tooltipCSS}` : '';\n\n    tipClass += (this.isClickedOpen) ? ' yeti-tooltip__clicked_open' : '';\n\n    wrapperCSS += (this.clickToOpen) ? ' yeti-tooltip-wrapper-is_click_to_open' : '';\n    wrapperCSS += (this.blockAnchor) ? ' yeti-tooltip-wrapper-has_block_anchor' : '';\n\n    switch (this.position) {\n\n      case \"right\":\n\n        tipClass += \" yeti-tooltip-right\";\n        break;\n\n      case \"below\":\n\n        tipClass += \" yeti-tooltip-below\";\n        break;\n\n      case \"left\":\n\n        tipClass += \" yeti-tooltip-left\";\n        break;\n\n      case \"below-left\":\n\n        tipClass += \" yeti-tooltip-below-left\";\n        break;\n\n      case \"below-right\":\n\n        tipClass += \" yeti-tooltip-below-right\";\n        break;\n\n      case \"above-left\":\n\n        tipClass += \" yeti-tooltip-above-left\";\n        break;\n\n      case \"above-right\":\n\n        tipClass += \" yeti-tooltip-above-right\";\n        break;\n\n    }\n\n    return ([\n      <div class={wrapperCSS}>\n\n      <div class=\"yeti-tooltip-trigger\" onClick={(e) => this.handleTriggerClick(e)}>\n\n        <slot />\n\n      </div>\n\n        <div class={tipClass}>\n\n          <div class=\"yeti-tooltip-content\" id={this.tipId}>{this.text}</div>\n\n          {\n            (this.clickToOpen) ?\n\n              <button class=\"yeti-tooltip-close\" onClick={(e) => { this.handleCloseTooltipClick(e); }}>\n                <yeti-icon iconCode=\"close\" iconCSS='yeti-color-white yeti-typo-size-5'></yeti-icon>\n              </button>\n\n            :\n              null\n          }\n          \n        </div>\n\n      </div>\n    ]);\n  }\n\n\n\n  componentDidRender() {\n    let slot = this.el.querySelector(\".yeti-tooltip-trigger\").firstElementChild;\n    slot.setAttribute(\"tabindex\", \"0\");\n    slot.setAttribute(\"aria-describedby\",this.tipId);\n  }\n\n}\n"],"mappings":"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"}