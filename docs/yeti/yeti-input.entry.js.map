{"file":"yeti-input.entry.esm.js","mappings":"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","names":[],"sources":["src/components/yeti-input/yeti-input.tsx"],"sourcesContent":["import { Component, Prop, h, State, Event, EventEmitter, Element } from '@stencil/core';\r\nimport { utils } from '../../utils/utils';\r\n\r\n@Component({\r\n  tag: 'yeti-input',\r\n  shadow: false,\r\n})\r\nexport class YetiInput {\r\n\r\n  @Element() el: HTMLElement;\r\n\r\n  /**\r\n   * Event that fires when the user leaves (blurs) the input field.\r\n   */\r\n  @Event({ bubbles: true }) readyToVerifySlow: EventEmitter;\r\n\r\n  /**\r\n   * Event that fires when the user enters or changes the contents of the input field.\r\n   */\r\n  @Event({ bubbles: true }) readyToVerifyFast: EventEmitter;\r\n\r\n  /**\r\n   * Event that fires when the field is a search field and the user hits the clear button within it.\r\n   */\r\n  @Event({ bubbles: true }) searchFieldClear: EventEmitter;\r\n\r\n  /**\r\n   * CSS classlist applied to the actual HTML input element.\r\n   */\r\n  @Prop() inputClass: string = '';\r\n\r\n  /**\r\n   * CSS classlist applied to the HTML wrapper around the element and associated elements.\r\n   */\r\n  @Prop() wrapperClass: string = '';\r\n\r\n  /**\r\n   * Passthrough to the input's autocomplete attribute.\r\n   */\r\n  @Prop() autocomplete: string = '';\r\n\r\n  /**\r\n   * id applied to the actual HTML input element.\r\n   */\r\n  @Prop() inputId: string = utils.generateUniqueId();\r\n\r\n  /**\r\n   * name applied to the actual HTML input element. Defaults to match id.\r\n   */\r\n  @Prop() inputName: string = this.inputId;\r\n\r\n  /**\r\n   * Optional attribute to set the maxlength of the field\r\n   */\r\n  @Prop({ attribute: \"input-maxlength\"}) maxlength?: number = 0;\r\n\r\n  /**\r\n   * Whether the field is required to have a valid value or not.\r\n   */\r\n  @Prop() required: boolean = false;\r\n\r\n  /**\r\n   * What type of input element this is; defaults to \"text\".\r\n   */\r\n  @Prop() type?: string = \"text\";\r\n\r\n  /**\r\n   * Tracks whether the input's current value is valid or not.\r\n   */\r\n  @Prop({\r\n    mutable: true,\r\n    reflect: true\r\n  }) isValid: boolean = true;\r\n\r\n  /**\r\n   * The actual value of the input field.\r\n   */\r\n  @Prop({\r\n    mutable: true,\r\n    reflect: true\r\n  }) value: string = '';\r\n\r\n  /**\r\n   * The tabindex of the input field.\r\n   */\r\n  @Prop({\r\n    mutable: true,\r\n    reflect: true,\r\n  }) inputTabindex: string = '';\r\n\r\n  /**\r\n   * id of an outside HTML element pointed to by the actual input element's aria-labeledby attribute.\r\n   */\r\n  @Prop() labeledBy?: string = \"\";\r\n\r\n  /**\r\n   * id of an outside HTML element pointed to by the actual input element's aria-describedby attribute.\r\n   */\r\n  @Prop() describedBy?: string = \"\";\r\n\r\n  /**\r\n   * Text description of what the input is or does\r\n   */\r\n  @Prop() description?: string = \"\";\r\n\r\n  /**\r\n   * Standard old-school input placeholder\r\n   */\r\n  @Prop() placeholder?: string = \"\";\r\n\r\n  /**\r\n   * id of an outside HTML element controlled by the input\r\n   */\r\n  @Prop() controls?: string = \"\";\r\n\r\n  /**\r\n   * Whether the user has focused and left (i.e. interacted with) the actual input element.\r\n   */\r\n  @State() isTouched: boolean = false;\r\n\r\n  \r\n\r\n  handleKeyUp(ev) {\r\n    this.isTouched = true;\r\n    this.value = ev.target.value;\r\n    this.readyToVerifyFast.emit({\r\n      \"originalEvent\": ev,\r\n      \"yetiInput\": this.el,\r\n      \"value\": ev.target.value\r\n    });\r\n  }\r\n\r\n\r\n\r\n  handleClearClick(ev) {\r\n    this.value = \"\";\r\n    (this.el.querySelector(\".yeti-input\") as HTMLInputElement).focus();\r\n    ev.preventDefault();\r\n    this.searchFieldClear.emit({\r\n      \"originalEvent\": ev,\r\n      \"yetiInput\": this.el,\r\n      \"value\": ev.target.value\r\n    });\r\n    return false;\r\n  }\r\n\r\n\r\n\r\n  handleFieldBlur(ev) {\r\n    ev.stopImmediatePropagation();\r\n    this.isTouched = true;\r\n    this.value = ev.target.value;\r\n    this.readyToVerifySlow.emit({\r\n      \"originalEvent\": ev,\r\n      \"yetiInput\": this.el,\r\n      \"value\": ev.target.value\r\n    });\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n\r\n    let cssClasses = 'yeti-input';\r\n    let wrapperClasses = 'yeti-input-wrapper';\r\n    let clearButtonClass = (this.value != \"\") ? 'yeti-input-clear' : 'yeti-input-clear yeti-input-clear__inert';\r\n\r\n    if (this.inputClass != '') {\r\n      cssClasses += ' ' + this.inputClass;\r\n    }\r\n\r\n    if (this.wrapperClass != '') {\r\n      wrapperClasses += ' ' + this.wrapperClass;\r\n    }\r\n\r\n    if (this.isValid == false) {\r\n      cssClasses += ' yeti-input__error';\r\n    }\r\n\r\n    return (\r\n      <div class={wrapperClasses}>\r\n\r\n        <input \r\n          type={this.type} \r\n          class={cssClasses} \r\n          id={this.inputId}\r\n          name={this.inputName}\r\n          value={this.value}\r\n          onKeyUp={(ev) => this.handleKeyUp(ev)}\r\n          onBlur={(ev) => this.handleFieldBlur(ev)}\r\n          aria-invalid={!this.isValid}\r\n          {...((this.autocomplete != \"\") ? {\"autocomplete\": this.autocomplete} : {})}\r\n          {...((this.inputTabindex != \"\") ? {\"tabindex\": this.inputTabindex} : {})}\r\n          {...((this.labeledBy != \"\") ? {\"aria-labelledby\": this.labeledBy} : {})}\r\n          {...((this.controls != \"\") ? {\"aria-controls\": this.controls} : {})}\r\n          {...((this.describedBy != \"\") ? {\"aria-describedby\": this.describedBy} : {})}\r\n          {...((this.description != \"\") ? {\"aria-description\": this.description} : {})}\r\n          {...((this.placeholder != \"\") ? {\"placeholder\": this.placeholder} : {})}\r\n          {...((this.maxlength != 0) ? {\"maxlength\": this.maxlength} : {})}\r\n        />\r\n\r\n        <button class={clearButtonClass} onClick={(ev) => this.handleClearClick(ev)}>\r\n          <span class=\"material-icons yeti-size-4 yeti-typo-size-4\" aria-hidden=\"true\">close</span>\r\n          <span class=\"yeti-a11y-hidden\">Clear search input</span>\r\n        </button>\r\n        \r\n\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n"],"version":3}