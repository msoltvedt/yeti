{"file":"yeti-input.entry.esm.js","mappings":"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","names":[],"sources":["src/components/yeti-input/yeti-input.tsx"],"sourcesContent":["import { Component, Prop, h, State, Event, EventEmitter, Element } from '@stencil/core';\nimport { utils } from '../../utils/utils';\n\n@Component({\n  tag: 'yeti-input',\n  shadow: false,\n})\nexport class YetiInput {\n\n  @Element() el: HTMLElement;\n\n  /**\n   * Event that fires when the user leaves (blurs) the input field.\n   */\n  @Event({ bubbles: true }) readyToVerifySlow: EventEmitter;\n\n  /**\n   * Event that fires when the user enters or changes the contents of the input field.\n   */\n  @Event({ bubbles: true }) readyToVerifyFast: EventEmitter;\n\n  /**\n   * Event that fires when the field is a search field and the user hits the clear button within it.\n   */\n  @Event({ bubbles: true }) searchFieldClear: EventEmitter;\n\n  /**\n   * CSS classlist applied to the actual HTML input element.\n   */\n  @Prop() inputClass: string = '';\n\n  /**\n   * CSS classlist applied to the HTML wrapper around the element and associated elements.\n   */\n  @Prop() wrapperClass: string = '';\n\n  /**\n   * Passthrough to the input's autocomplete attribute.\n   */\n  @Prop() autocomplete: string = '';\n\n  /**\n   * id applied to the actual HTML input element.\n   */\n  @Prop() inputId: string = utils.generateUniqueId();\n\n  /**\n   * name applied to the actual HTML input element. Defaults to match id.\n   */\n  @Prop() inputName: string = this.inputId;\n\n  /**\n   * Optional attribute to set the maxlength of the field\n   */\n  @Prop({ attribute: \"input-maxlength\"}) maxlength?: number = 0;\n\n  /**\n   * Whether the field is required to have a valid value or not.\n   */\n  @Prop() required: boolean = false;\n\n  /**\n   * What type of input element this is; defaults to \"text\".\n   */\n  @Prop() type?: string = \"text\";\n\n  /**\n   * Tracks whether the input's current value is valid or not.\n   */\n  @Prop({\n    mutable: true,\n    reflect: true\n  }) isValid: boolean = true;\n\n  /**\n   * The actual value of the input field.\n   */\n  @Prop({\n    mutable: true,\n    reflect: true\n  }) value: string = '';\n\n  /**\n   * The tabindex of the input field.\n   */\n  @Prop({\n    mutable: true,\n    reflect: true,\n  }) inputTabindex: string = '';\n\n  /**\n   * id of an outside HTML element pointed to by the actual input element's aria-labeledby attribute.\n   */\n  @Prop() labeledBy?: string = \"\";\n\n  /**\n   * id of an outside HTML element pointed to by the actual input element's aria-describedby attribute.\n   */\n  @Prop() describedBy?: string = \"\";\n\n  /**\n   * Text description of what the input is or does\n   */\n  @Prop() description?: string = \"\";\n\n  /**\n   * Standard old-school input placeholder\n   */\n  @Prop() placeholder?: string = \"\";\n\n  /**\n   * id of an outside HTML element controlled by the input\n   */\n  @Prop() controls?: string = \"\";\n\n  /**\n   * Whether the user has focused and left (i.e. interacted with) the actual input element.\n   */\n  @State() isTouched: boolean = false;\n\n  \n\n  handleKeyUp(ev) {\n    this.isTouched = true;\n    this.value = ev.target.value;\n    this.readyToVerifyFast.emit({\n      \"originalEvent\": ev,\n      \"yetiInput\": this.el,\n      \"value\": ev.target.value\n    });\n  }\n\n\n\n  handleClearClick(ev) {\n    this.value = \"\";\n    (this.el.querySelector(\".yeti-input\") as HTMLInputElement).focus();\n    ev.preventDefault();\n    this.searchFieldClear.emit({\n      \"originalEvent\": ev,\n      \"yetiInput\": this.el,\n      \"value\": ev.target.value\n    });\n    return false;\n  }\n\n\n\n  handleFieldBlur(ev) {\n    ev.stopImmediatePropagation();\n    this.isTouched = true;\n    this.value = ev.target.value;\n    this.readyToVerifySlow.emit({\n      \"originalEvent\": ev,\n      \"yetiInput\": this.el,\n      \"value\": ev.target.value\n    });\n  }\n\n\n\n  render() {\n\n    let cssClasses = 'yeti-input';\n    let wrapperClasses = 'yeti-input-wrapper';\n    let clearButtonClass = (this.value != \"\") ? 'yeti-input-clear' : 'yeti-input-clear yeti-input-clear__inert';\n\n    if (this.inputClass != '') {\n      cssClasses += ' ' + this.inputClass;\n    }\n\n    if (this.wrapperClass != '') {\n      wrapperClasses += ' ' + this.wrapperClass;\n    }\n\n    if (this.isValid == false) {\n      cssClasses += ' yeti-input__error';\n    }\n\n    return (\n      <div class={wrapperClasses}>\n\n        <input \n          type={this.type} \n          class={cssClasses} \n          id={this.inputId}\n          name={this.inputName}\n          value={this.value}\n          onKeyUp={(ev) => this.handleKeyUp(ev)}\n          onBlur={(ev) => this.handleFieldBlur(ev)}\n          aria-invalid={!this.isValid}\n          {...((this.autocomplete != \"\") ? {\"autocomplete\": this.autocomplete} : {})}\n          {...((this.inputTabindex != \"\") ? {\"tabindex\": this.inputTabindex} : {})}\n          {...((this.labeledBy != \"\") ? {\"aria-labelledby\": this.labeledBy} : {})}\n          {...((this.controls != \"\") ? {\"aria-controls\": this.controls} : {})}\n          {...((this.describedBy != \"\") ? {\"aria-describedby\": this.describedBy} : {})}\n          {...((this.description != \"\") ? {\"aria-description\": this.description} : {})}\n          {...((this.placeholder != \"\") ? {\"placeholder\": this.placeholder} : {})}\n          {...((this.maxlength != 0) ? {\"maxlength\": this.maxlength} : {})}\n        />\n\n        <button class={clearButtonClass} onClick={(ev) => this.handleClearClick(ev)}>\n          <span class=\"material-icons yeti-size-4 yeti-typo-size-4\" aria-hidden=\"true\">close</span>\n          <span class=\"yeti-a11y-hidden\">Clear search input</span>\n        </button>\n        \n\n      </div>\n    );\n  }\n\n}\n"],"version":3}