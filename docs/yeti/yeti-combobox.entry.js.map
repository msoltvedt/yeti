{"file":"yeti-combobox.entry.esm.js","mappings":"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","names":[],"sources":["src/components/yeti-combobox/yeti-combobox.tsx"],"sourcesContent":["import { Component, Watch, Prop, h, State, Event, EventEmitter, Element, Listen, /*Watch*/ } from '@stencil/core';\nimport { utils, YetiComboboxOption } from '../../utils/utils';\n\n@Component({\n  tag: 'yeti-combobox',\n  shadow: false,\n})\nexport class YetiCombobox {\n\n  @Element() el: HTMLElement;\n\n  /**\n   * Fires when the user has made a selection and closed the dropdown (usually by focusing elsewhere).\n   */\n  @Event({ bubbles: true }) readyToVerifySlow: EventEmitter<CustomEvent>;\n\n  /**\n   * Fires when the user clicks an option or types in the input field.\n   */\n  @Event({ bubbles: true }) readyToVerifyFast: EventEmitter<CustomEvent>;\n\n  /**\n   * CSS classlist to add to the component's outer wrapper element.\n   */\n  @Prop({ attribute: 'wrapper-class'}) wrapperCss: string = '';\n\n  /**\n   * Whether the component requires a valid value.\n   */\n  @Prop() required: boolean = false;\n\n  /**\n   * Token list of left | right and/or above | below that describes the drop-down's visual position relative to the closed state anchor.\n   */\n  @Prop() menuAlignment: string = \"\";\n\n  /**\n   * Whether the component has a valid value.\n   */\n  @Prop({\n    mutable: true,\n    reflect: true\n  }) isValid: boolean;\n\n  /**\n   * The component's value.\n   */\n  @Prop({\n    mutable: true,\n    reflect: true\n  }) value: string = '';\n \n  @Watch(\"value\")\n  handleValueChange() {\n    this.updateOptions();\n  }\n\n  /**\n   * Text that appears in the closed state/anchor when there are no selections.\n   */\n  @Prop() placeholder: string = \"- Select -\";\n\n  /**\n   * Array of YetiComboboxOptions that describes the component's internal representation of its options. See utils.js for more detail.\n   */\n  @State() options: YetiComboboxOption[] = [];\n\n  /**\n   * Whether or not the user has interacted with the component (i.e. focused and blurred).\n   */\n  @State() isTouched: boolean = false;\n\n  /**\n   * Toggle to re-render the whole component.\n   */\n  @State() iLoveJSX: boolean = false;\n\n  /**\n   * Whether or not the drop-down is open/visible or not.\n   */\n  @State() isOpen: boolean = false;\n\n  /**\n   * 0-based index of the currently focused option.\n   */\n  @State() cursorPosition: number = -1;\n\n  /**\n   * Whether or not to show the optional Clear all selections puck.\n   */\n  @Prop() showClear: boolean = true;\n\n  /**\n   * Optionally provide an id for the combobox element.\n   */\n  @Prop({\n    mutable: true,\n    reflect: true\n  }) inputId: string = \"\";\n\n  /**\n   * Optionally provide a form element name.\n   */\n  @Prop({\n    mutable: true,\n    reflect: true\n  }) inputName: string = \"\";\n\n  /**\n   * Optionally provide the id of a describing element (like an input tip).\n   */\n  @Prop({ attribute: 'input-describedby'}) inputDescribedBy: string = \"\";\n\n  /**\n   * Use the Lookup style (i.e. swap the caret for a search icon)\n   */\n  @Prop() isLookup: boolean = false;\n\n  /**\n   * Whether the options list should be filtered by the text input\n   */\n  @Prop() isFilterable: boolean = false;\n\n  /**\n   * Whether/how changes to the text field value select an option from the list. Possible values are \"manual\" (default) and \"automatic\". Any value other than \"automatic\" will equal manual.\n   */\n  @Prop({\n    mutable: true,\n    reflect: true\n  }) selectionType?: string = \"manual\";\n \n  @Watch(\"selectionType\")\n  handleSelectionTypeChange() {\n    // Make sure selection type is a valid value.\n    this.selectionType = (this.selectionType == \"automatic\") ? this.selectionType : \"manual\";\n  }\n\n\n  // These will be initialized on component load\n  componentId: string;\n  buttonId: string;\n  dropdownId: string;\n\n\n\n  @Listen(\"click\", {\n    target: \"body\"\n  })\n  handleDefocusingClick() {\n    if (this.el.querySelectorAll(\":focus\").length == 0 && this.isOpen) {\n      this.closeFlyout();\n    }\n  }\n\n\n\n  handleClick(ev) {\n    this.isTouched = true;\n    this.toggleFlyout();\n    ev.preventDefault();\n  }\n\n\n\n  handleButtonClick(ev) {\n    ev.preventDefault();\n    // Otherwise just let the handleClick function do the rest.\n  }\n\n\n\n  @Listen(\"keydown\")\n  handleKeydown(ev: KeyboardEvent) {\n\n    let key = ev.key.toString().toLowerCase();\n\n    switch (key) {\n\n      // Handle potential tabout\n      case \"tab\": {\n\n        // Normal tab direction\n        if (!ev.shiftKey) {\n\n          if (this.el.querySelectorAll(\".yeti-combobox-input:focus\").length == 0 || this.value == \"\") {\n            this.closeFlyout();\n          }\n\n        // Shift tab direction (backwards)\n        } else {\n\n          if (this.el.querySelectorAll(\".yeti-combobox-input:focus\").length > 0) {\n            this.closeFlyout();\n          }\n\n        }\n        \n        break;\n      }\n\n\n      // Handle arrow navigation\n      case \"arrowdown\": {\n\n        if (this.isOpen) {\n          this.cursorPosition = (this.cursorPosition + 1) % this.options.length;\n          ev.preventDefault();\n        } else {\n\n          this.cursorPosition = (ev.altKey) ? this.cursorPosition : 0;\n          this.openFlyout();\n          ev.preventDefault();\n\n        }\n\n        break;\n      }\n\n\n      // Handle arrow navigation\n      case \"arrowup\": {\n\n        if (this.isOpen) {\n          this.cursorPosition = (this.cursorPosition - 1 + this.options.length) % this.options.length;\n          ev.preventDefault();\n        } else {\n\n          this.cursorPosition = this.options.length - 1;\n          this.openFlyout();\n          ev.preventDefault();\n\n        }\n\n        break;\n      }\n\n\n      // Handle escape navigation\n      case \"escape\": {\n\n        if (this.isOpen) {\n          this.closeFlyout();\n          ev.preventDefault();\n        }\n\n        break;\n      }\n\n\n      // Handle dropdown open/close toggling enter/space or selection-making enter/space\n      case \"enter\": {\n\n        // Check to see if this happened while selecting something.\n        ev.preventDefault();\n        let target = ev.target as HTMLElement;\n\n        // First check if the clear everything puck has focus\n        if (target.classList.contains(\"yeti-combobox-clear\")) {\n          target.click();\n          break;\n        } \n        \n        else {\n          \n          // Next check if the cursor is on a selection and the flyout is open\n          if (this.cursorPosition >= 0 && this.isOpen) {\n            // Toggle selection on the option at this cursor position.\n            this.handleOptionClick(this.cursorPosition);\n          }\n          \n          // Finally, if the selection type is automatic, and there's at least one option selected, set the value to its label.\n          if (this.selectionType == \"automatic\") {\n            for (let option of this.options) {\n              if (option.selected) {\n                this.value = option.label;\n                break;\n              }\n            }\n          }\n          \n          this.closeFlyout();\n        }\n\n        break;\n      }\n      \n      default: {\n        // If the user is trying to type a letter or number then open the flyout\n        if (key.length == 1 && key.match(/[a-zA-Z0-9]/)) {\n          this.openFlyout();\n        }\n      }\n\n    }\n  }\n\n\n\n  handleClearSelections(ev: Event) {\n    let fieldElement = this.el.querySelector(\".yeti-combobox-input\") as HTMLElement;\n    for (let option of this.options) {\n      option.selected = false;\n    }\n    this.value = \"\";\n    fieldElement.focus();\n    ev.stopPropagation();\n    this.readyToVerifySlow.emit();\n    this.readyToVerifyFast.emit();\n  }\n\n\n\n  handleInputChange(ev) {\n    this.value = ev.target.value;\n  }\n\n\n\n  updateOptions() {\n    // Based on the (new) value of this.value, set the options' status\n    let foundASelectionAlready = false;\n\n    for (let option of this.options) {\n      option.selected = (option.label.toLowerCase() == this.value.toLowerCase());\n\n      // Determine whether to show this option or not based on filtering\n      if (this.isFilterable && option.label.toLowerCase().indexOf( this.value.toLowerCase() ) < 0) {\n        option.isVisible = false;\n      } else {\n        option.isVisible = true;\n      }\n\n      // Determine whether to mark this option as selected based on selection type\n      if (this.selectionType == \"automatic\") {\n\n        // If this is a match, and we don't already have one, mark this one as selected. Otherwise set it as unselected.\n        if (!foundASelectionAlready\n            && this.value != \"\"\n            && option.label.toLowerCase().indexOf( this.value.toLowerCase() ) >= 0 \n        ) {\n          option.selected = true;\n          foundASelectionAlready = true;\n        } else {\n          option.selected = false;\n        }\n\n      }\n      \n    }\n\n  }\n\n\n\n  openFlyout() {\n    this.isOpen = true;\n  }\n\n\n\n  closeFlyout() {\n    this.isOpen = false;\n    // this.cursorPosition = -1;\n    this.isTouched = true;\n    this.readyToVerifySlow.emit();\n  }\n\n\n\n  toggleFlyout() {\n    if (this.isOpen) {\n      this.closeFlyout()\n    } else {\n      this.openFlyout();\n    }\n  }\n\n\n\n  handleFieldBlur(ev) {\n    this.isTouched = true;\n    \n    // If selection type is automatic, update value with the first selected option.\n    if (this.selectionType == \"automatic\") {\n      for (let option of this.options) {\n        if (option.selected) {\n          this.value = option.label;\n          break;\n        }\n      }\n    }\n\n    this.readyToVerifySlow.emit(ev);\n  }\n\n\n\n  parseOptionElements(options: HTMLCollection) {\n\n    for (let i = 0; i < options.length; i++) {\n      \n      let option = options.item(i);\n      \n      // First, confirm this element is indeed a yeti-combobox-option element.\n      if (option.tagName.toLowerCase() == 'yeti-combobox-option') {\n\n        let optionId;\n\n        if (option.hasAttribute(\"id\")) {\n          optionId = option.getAttribute(\"id\");\n        } else {\n          optionId = `${this.el.getAttribute(\"id\")}_option${i}`;\n        }\n\n        this.options.push({\n          selected: (option.hasAttribute(\"selected\") || option.innerHTML == this.value),\n          label: option.innerHTML,\n          isVisible: true,\n          id: optionId\n        });\n\n        if (option.hasAttribute(\"selected\")) {\n          this.value = option.innerHTML;\n        }\n\n      }\n\n    } // End for\n\n    // Finally, we need to remove the option elements.\n    for (let j = options.length - 1; j >= 0; --j) {\n      options.item(j).remove();\n    }\n\n  }\n\n\n\n  getPlaceholderDisplay() {\n    // Returns the string of text that should go in the placeholder area.\n    return (this.value != \"\") ? this.value : this.placeholder;\n  }\n\n\n\n  handleOptionClick(i: number) {\n    // i = options index\n    let clickedOption = this.options[i];\n    let input = this.el.querySelector(\".yeti-combobox-input\") as HTMLInputElement;\n\n    // Set selected state of each option\n    for (let j = 0; j < this.options.length; j++) {\n      this.options[j].selected = (i == j);\n    }\n\n    // Update value, close dropdown, refocus, and fire events\n    this.value = clickedOption.label;\n    this.closeFlyout();\n    input.focus();\n    this.readyToVerifyFast.emit();\n  }\n\n\n\n  componentWillLoad() {\n    // Set up ids and handle any <yeti-combobox-option> elements\n    let optionElements = this.el.children;\n\n    // Set up ids\n    this.componentId = this.el.getAttribute(\"id\");\n\n    if (!this.componentId || this.componentId == \"\") {\n      this.componentId = utils.generateUniqueId();\n      this.el.setAttribute(\"id\", this.componentId);\n    }\n\n    this.inputId = (this.inputId != \"\") ? this.inputId : this.componentId + \"_input\";\n    this.buttonId = this.componentId + \"_button\";\n    this.dropdownId = this.componentId + \"_dropdown\";\n\n    this.inputName = (this.inputName != \"\") ? this.inputName : this.inputId; // If the user supplied a name, use it, otherwise just re-use the id.\n\n    // Look for and handle any <yeti-combobox-option> elements.\n    if (optionElements.length > 0) {\n      this.parseOptionElements(optionElements);\n    }\n\n    // Make sure selection type is a valid value.\n    this.selectionType = (this.selectionType == \"automatic\") ? this.selectionType : \"manual\";\n  }\n\n\n\n  render() {\n\n    let wrapperCss = 'yeti-combobox-wrapper';\n    let dropdownCss = 'yeti-combobox-dropdown';\n    let activeDescendantId = (this.isOpen && this.cursorPosition != -1) ? `${this.componentId}_option${this.cursorPosition}` : ``; // If there is an active descendant (i.e. the menu is open and one of the options has the cursor highlight) then its id will look something like componentId_option3.\n\n    wrapperCss += (this.wrapperCss == \"\") ? '' : ` ${this.wrapperCss}`;\n\n    if (this.isValid == false) {\n      wrapperCss += ' yeti-combobox__error';\n    }\n\n    dropdownCss += (this.isOpen) ? \" yeti-combobox-dropdown__open\" : \"\";\n\n    if (this.menuAlignment == \"right\") {\n      dropdownCss += ' yeti-combobox-dropdown-align-right'\n    }\n\n    return ([\n      <div class={wrapperCss}>\n\n        <div \n          class=\"yeti-combobox\"\n          onClick={(ev) => this.handleClick(ev)}\n        >\n\n          <input \n            type=\"text\" \n            class=\"yeti-combobox-input\" \n            // title={this.value}\n            value={this.value}\n            name={this.inputName}\n            onFocus={() => {\n              this.isTouched = true;\n            }}\n            onBlur={(e) => {\n              this.handleFieldBlur(e);\n            }}\n            onInput={(ev) => this.handleInputChange(ev)}\n            role=\"combobox\"\n            autocomplete=\"off\"\n            aria-autocomplete=\"none\"\n            aria-controls={this.dropdownId}\n            aria-expanded={this.isOpen}\n            id={this.inputId}\n            {...(this.inputDescribedBy != \"\") ? { \"aria-describedby\" : this.inputDescribedBy } : {}}\n            {...(activeDescendantId != \"\") ? { \"aria-activedescendant\" : activeDescendantId } : {}}\n          />\n\n          { (this.showClear && this.value != '') ? \n\n            (<button class=\"yeti-combobox-clear\" title=\"Clear all selections\" onClick={ (ev) => { this.handleClearSelections(ev); ev.preventDefault() }}>\n              <span class=\"material-icons yeti-combobox-clear-icon\" aria-hidden=\"true\">clear</span>\n            </button>)\n\n          :\n\n            \"\"\n\n          }\n\n          <button \n            class=\"yeti-combobox-button\" \n            tabIndex={-1}\n            aria-controls={this.dropdownId}\n            aria-expanded={this.isOpen}\n            id={this.buttonId}\n            onClick={(ev) => { this.handleButtonClick(ev) }}\n          >\n            {\n              (!this.isLookup) ?\n\n                <yeti-icon iconCode={(this.isOpen ? 'expand_less' : 'expand_more')} alt={(this.isOpen ? 'close' : 'open')}></yeti-icon>\n\n              :\n\n                <yeti-icon iconCode='search' alt={(this.isOpen ? 'lookup, close' : 'lookup, open')}></yeti-icon>\n\n            }\n            \n          </button>\n\n        </div>\n\n        \n        <div class={dropdownCss}>\n        \n          <ul\n            class=\"yeti-combobox-options\"\n            id={this.dropdownId}\n            role=\"listbox\"\n          >\n\n            {this.options.map((option, i) => {\n\n                let optionClass = (this.cursorPosition == i) ? \"yeti-combobox-option yeti-combobox-option__hover\" : \"yeti-combobox-option\";\n                optionClass += (option.selected) ? \" yeti-combobox-option__selected\" : \"\";\n\n                // Only render visible options\n                if (!option.isVisible) {\n                  return \"\";\n                }\n              \n                return (\n                  <li \n                    id={option.id} \n                    key={option.id} \n                    role=\"option\"\n                    aria-selected={`${option.selected}`}\n                    class={optionClass}\n                    onClick={(ev) => { this.handleOptionClick(i); ev.preventDefault(); }}\n                  >\n\n                      <span class=\"yeti-combobox-option-label\">{option.label}</span>\n                      <span class=\"yeti-combobox-option-checkmark\" aria-hidden='true'>\n                        {(option.selected) ? \n                        \n                          <yeti-icon iconCode='checkmark'></yeti-icon>\n\n                        :\n\n                          ''\n\n                        }\n                      </span>\n\n                  </li>\n                )\n              }\n            \n            )}\n\n          </ul>\n\n        </div>\n\n      </div>\n    ]);\n  }\n\n\n\n  componentDidRender() {\n    // If the cursor is over an option, make sure it's visible.\n    if (this.isOpen) {\n      // The facade dropdown is open. If one of the options is being hovered over then we want to scroll it into view.\n      // If not, then we'll scroll the whole dropdown into view.\n      let dropdown = this.el.querySelector(\".yeti-combobox-dropdown\");\n      let hoveredOption = this.el.querySelector(\".yeti-combobox-option__hover\");\n      let thingToScrollIntoView = (hoveredOption) ? hoveredOption : dropdown;\n      thingToScrollIntoView.scrollIntoView({\n        behavior: \"smooth\",\n        block: \"nearest\"\n      });\n    }\n  }\n\n}"],"version":3}