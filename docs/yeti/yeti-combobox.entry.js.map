{"file":"yeti-combobox.entry.esm.js","mappings":"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","names":[],"sources":["src/components/yeti-combobox/yeti-combobox.tsx"],"sourcesContent":["import { Component, Watch, Prop, h, State, Event, EventEmitter, Element, Listen, /*Watch*/ } from '@stencil/core';\r\nimport { utils, YetiComboboxOption } from '../../utils/utils';\r\n\r\n@Component({\r\n  tag: 'yeti-combobox',\r\n  shadow: false,\r\n})\r\nexport class YetiCombobox {\r\n\r\n  @Element() el: HTMLElement;\r\n\r\n  /**\r\n   * Fires when the user has made a selection and closed the dropdown (usually by focusing elsewhere).\r\n   */\r\n  @Event({ bubbles: true }) readyToVerifySlow: EventEmitter<CustomEvent>;\r\n\r\n  /**\r\n   * Fires when the user clicks an option or types in the input field.\r\n   */\r\n  @Event({ bubbles: true }) readyToVerifyFast: EventEmitter<CustomEvent>;\r\n\r\n  /**\r\n   * CSS classlist to add to the component's outer wrapper element.\r\n   */\r\n  @Prop({ attribute: 'wrapper-class'}) wrapperCss: string = '';\r\n\r\n  /**\r\n   * Whether the component requires a valid value.\r\n   */\r\n  @Prop() required: boolean = false;\r\n\r\n  /**\r\n   * Token list of left | right and/or above | below that describes the drop-down's visual position relative to the closed state anchor.\r\n   */\r\n  @Prop() menuAlignment: string = \"\";\r\n\r\n  /**\r\n   * Whether the component has a valid value.\r\n   */\r\n  @Prop({\r\n    mutable: true,\r\n    reflect: true\r\n  }) isValid: boolean;\r\n\r\n  /**\r\n   * The component's value.\r\n   */\r\n  @Prop({\r\n    mutable: true,\r\n    reflect: true\r\n  }) value: string = '';\r\n \r\n  @Watch(\"value\")\r\n  handleValueChange() {\r\n    this.updateOptions();\r\n  }\r\n\r\n  /**\r\n   * Text that appears in the closed state/anchor when there are no selections.\r\n   */\r\n  @Prop() placeholder: string = \"- Select -\";\r\n\r\n  /**\r\n   * Array of YetiComboboxOptions that describes the component's internal representation of its options. See utils.js for more detail.\r\n   */\r\n  @State() options: YetiComboboxOption[] = [];\r\n\r\n  /**\r\n   * Whether or not the user has interacted with the component (i.e. focused and blurred).\r\n   */\r\n  @State() isTouched: boolean = false;\r\n\r\n  /**\r\n   * Toggle to re-render the whole component.\r\n   */\r\n  @State() iLoveJSX: boolean = false;\r\n\r\n  /**\r\n   * Whether or not the drop-down is open/visible or not.\r\n   */\r\n  @State() isOpen: boolean = false;\r\n\r\n  /**\r\n   * 0-based index of the currently focused option.\r\n   */\r\n  @State() cursorPosition: number = -1;\r\n\r\n  /**\r\n   * Whether or not to show the optional Clear all selections puck.\r\n   */\r\n  @Prop() showClear: boolean = true;\r\n\r\n  /**\r\n   * Optionally provide an id for the combobox element.\r\n   */\r\n  @Prop({\r\n    mutable: true,\r\n    reflect: true\r\n  }) inputId: string = \"\";\r\n\r\n  /**\r\n   * Optionally provide a form element name.\r\n   */\r\n  @Prop({\r\n    mutable: true,\r\n    reflect: true\r\n  }) inputName: string = \"\";\r\n\r\n  /**\r\n   * Optionally provide the id of a describing element (like an input tip).\r\n   */\r\n  @Prop({ attribute: 'input-describedby'}) inputDescribedBy: string = \"\";\r\n\r\n  /**\r\n   * Use the Lookup style (i.e. swap the caret for a search icon)\r\n   */\r\n  @Prop() isLookup: boolean = false;\r\n\r\n  /**\r\n   * Whether the options list should be filtered by the text input\r\n   */\r\n  @Prop() isFilterable: boolean = false;\r\n\r\n  /**\r\n   * Whether/how changes to the text field value select an option from the list. Possible values are \"manual\" (default) and \"automatic\". Any value other than \"automatic\" will equal manual.\r\n   */\r\n  @Prop({\r\n    mutable: true,\r\n    reflect: true\r\n  }) selectionType?: string = \"manual\";\r\n \r\n  @Watch(\"selectionType\")\r\n  handleSelectionTypeChange() {\r\n    // Make sure selection type is a valid value.\r\n    this.selectionType = (this.selectionType == \"automatic\") ? this.selectionType : \"manual\";\r\n  }\r\n\r\n\r\n  // These will be initialized on component load\r\n  componentId: string;\r\n  buttonId: string;\r\n  dropdownId: string;\r\n\r\n\r\n\r\n  @Listen(\"click\", {\r\n    target: \"body\"\r\n  })\r\n  handleDefocusingClick() {\r\n    if (this.el.querySelectorAll(\":focus\").length == 0 && this.isOpen) {\r\n      this.closeFlyout();\r\n    }\r\n  }\r\n\r\n\r\n\r\n  handleClick(ev) {\r\n    this.isTouched = true;\r\n    this.toggleFlyout();\r\n    ev.preventDefault();\r\n  }\r\n\r\n\r\n\r\n  handleButtonClick(ev) {\r\n    ev.preventDefault();\r\n    // Otherwise just let the handleClick function do the rest.\r\n  }\r\n\r\n\r\n\r\n  @Listen(\"keydown\")\r\n  handleKeydown(ev: KeyboardEvent) {\r\n\r\n    let key = ev.key.toString().toLowerCase();\r\n\r\n    switch (key) {\r\n\r\n      // Handle potential tabout\r\n      case \"tab\": {\r\n\r\n        // Normal tab direction\r\n        if (!ev.shiftKey) {\r\n\r\n          if (this.el.querySelectorAll(\".yeti-combobox-input:focus\").length == 0 || this.value == \"\") {\r\n            this.closeFlyout();\r\n          }\r\n\r\n        // Shift tab direction (backwards)\r\n        } else {\r\n\r\n          if (this.el.querySelectorAll(\".yeti-combobox-input:focus\").length > 0) {\r\n            this.closeFlyout();\r\n          }\r\n\r\n        }\r\n        \r\n        break;\r\n      }\r\n\r\n\r\n      // Handle arrow navigation\r\n      case \"arrowdown\": {\r\n\r\n        if (this.isOpen) {\r\n          this.cursorPosition = (this.cursorPosition + 1) % this.options.length;\r\n          ev.preventDefault();\r\n        } else {\r\n\r\n          this.cursorPosition = (ev.altKey) ? this.cursorPosition : 0;\r\n          this.openFlyout();\r\n          ev.preventDefault();\r\n\r\n        }\r\n\r\n        break;\r\n      }\r\n\r\n\r\n      // Handle arrow navigation\r\n      case \"arrowup\": {\r\n\r\n        if (this.isOpen) {\r\n          this.cursorPosition = (this.cursorPosition - 1 + this.options.length) % this.options.length;\r\n          ev.preventDefault();\r\n        } else {\r\n\r\n          this.cursorPosition = this.options.length - 1;\r\n          this.openFlyout();\r\n          ev.preventDefault();\r\n\r\n        }\r\n\r\n        break;\r\n      }\r\n\r\n\r\n      // Handle escape navigation\r\n      case \"escape\": {\r\n\r\n        if (this.isOpen) {\r\n          this.closeFlyout();\r\n          ev.preventDefault();\r\n        }\r\n\r\n        break;\r\n      }\r\n\r\n\r\n      // Handle dropdown open/close toggling enter/space or selection-making enter/space\r\n      case \"enter\": {\r\n\r\n        // Check to see if this happened while selecting something.\r\n        ev.preventDefault();\r\n        let target = ev.target as HTMLElement;\r\n\r\n        // First check if the clear everything puck has focus\r\n        if (target.classList.contains(\"yeti-combobox-clear\")) {\r\n          target.click();\r\n          break;\r\n        } \r\n        \r\n        else {\r\n          \r\n          // Next check if the cursor is on a selection and the flyout is open\r\n          if (this.cursorPosition >= 0 && this.isOpen) {\r\n            // Toggle selection on the option at this cursor position.\r\n            this.handleOptionClick(this.cursorPosition);\r\n          }\r\n          \r\n          // Finally, if the selection type is automatic, and there's at least one option selected, set the value to its label.\r\n          if (this.selectionType == \"automatic\") {\r\n            for (let option of this.options) {\r\n              if (option.selected) {\r\n                this.value = option.label;\r\n                break;\r\n              }\r\n            }\r\n          }\r\n          \r\n          this.closeFlyout();\r\n        }\r\n\r\n        break;\r\n      }\r\n      \r\n      default: {\r\n        // If the user is trying to type a letter or number then open the flyout\r\n        if (key.length == 1 && key.match(/[a-zA-Z0-9]/)) {\r\n          this.openFlyout();\r\n        }\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n\r\n\r\n  handleClearSelections(ev: Event) {\r\n    let fieldElement = this.el.querySelector(\".yeti-combobox-input\") as HTMLElement;\r\n    for (let option of this.options) {\r\n      option.selected = false;\r\n    }\r\n    this.value = \"\";\r\n    fieldElement.focus();\r\n    ev.stopPropagation();\r\n    this.readyToVerifySlow.emit();\r\n    this.readyToVerifyFast.emit();\r\n  }\r\n\r\n\r\n\r\n  handleInputChange(ev) {\r\n    this.value = ev.target.value;\r\n  }\r\n\r\n\r\n\r\n  updateOptions() {\r\n    // Based on the (new) value of this.value, set the options' status\r\n    let foundASelectionAlready = false;\r\n\r\n    for (let option of this.options) {\r\n      option.selected = (option.label.toLowerCase() == this.value.toLowerCase());\r\n\r\n      // Determine whether to show this option or not based on filtering\r\n      if (this.isFilterable && option.label.toLowerCase().indexOf( this.value.toLowerCase() ) < 0) {\r\n        option.isVisible = false;\r\n      } else {\r\n        option.isVisible = true;\r\n      }\r\n\r\n      // Determine whether to mark this option as selected based on selection type\r\n      if (this.selectionType == \"automatic\") {\r\n\r\n        // If this is a match, and we don't already have one, mark this one as selected. Otherwise set it as unselected.\r\n        if (!foundASelectionAlready\r\n            && this.value != \"\"\r\n            && option.label.toLowerCase().indexOf( this.value.toLowerCase() ) >= 0 \r\n        ) {\r\n          option.selected = true;\r\n          foundASelectionAlready = true;\r\n        } else {\r\n          option.selected = false;\r\n        }\r\n\r\n      }\r\n      \r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  openFlyout() {\r\n    this.isOpen = true;\r\n  }\r\n\r\n\r\n\r\n  closeFlyout() {\r\n    this.isOpen = false;\r\n    // this.cursorPosition = -1;\r\n    this.isTouched = true;\r\n    this.readyToVerifySlow.emit();\r\n  }\r\n\r\n\r\n\r\n  toggleFlyout() {\r\n    if (this.isOpen) {\r\n      this.closeFlyout()\r\n    } else {\r\n      this.openFlyout();\r\n    }\r\n  }\r\n\r\n\r\n\r\n  handleFieldBlur(ev) {\r\n    this.isTouched = true;\r\n    \r\n    // If selection type is automatic, update value with the first selected option.\r\n    if (this.selectionType == \"automatic\") {\r\n      for (let option of this.options) {\r\n        if (option.selected) {\r\n          this.value = option.label;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    this.readyToVerifySlow.emit(ev);\r\n  }\r\n\r\n\r\n\r\n  parseOptionElements(options: HTMLCollection) {\r\n\r\n    for (let i = 0; i < options.length; i++) {\r\n      \r\n      let option = options.item(i);\r\n      \r\n      // First, confirm this element is indeed a yeti-combobox-option element.\r\n      if (option.tagName.toLowerCase() == 'yeti-combobox-option') {\r\n\r\n        let optionId;\r\n\r\n        if (option.hasAttribute(\"id\")) {\r\n          optionId = option.getAttribute(\"id\");\r\n        } else {\r\n          optionId = `${this.el.getAttribute(\"id\")}_option${i}`;\r\n        }\r\n\r\n        this.options.push({\r\n          selected: (option.hasAttribute(\"selected\") || option.innerHTML == this.value),\r\n          label: option.innerHTML,\r\n          isVisible: true,\r\n          id: optionId\r\n        });\r\n\r\n        if (option.hasAttribute(\"selected\")) {\r\n          this.value = option.innerHTML;\r\n        }\r\n\r\n      }\r\n\r\n    } // End for\r\n\r\n    // Finally, we need to remove the option elements.\r\n    for (let j = options.length - 1; j >= 0; --j) {\r\n      options.item(j).remove();\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  getPlaceholderDisplay() {\r\n    // Returns the string of text that should go in the placeholder area.\r\n    return (this.value != \"\") ? this.value : this.placeholder;\r\n  }\r\n\r\n\r\n\r\n  handleOptionClick(i: number) {\r\n    // i = options index\r\n    let clickedOption = this.options[i];\r\n    let input = this.el.querySelector(\".yeti-combobox-input\") as HTMLInputElement;\r\n\r\n    // Set selected state of each option\r\n    for (let j = 0; j < this.options.length; j++) {\r\n      this.options[j].selected = (i == j);\r\n    }\r\n\r\n    // Update value, close dropdown, refocus, and fire events\r\n    this.value = clickedOption.label;\r\n    this.closeFlyout();\r\n    input.focus();\r\n    this.readyToVerifyFast.emit();\r\n  }\r\n\r\n\r\n\r\n  componentWillLoad() {\r\n    // Set up ids and handle any <yeti-combobox-option> elements\r\n    let optionElements = this.el.children;\r\n\r\n    // Set up ids\r\n    this.componentId = this.el.getAttribute(\"id\");\r\n\r\n    if (!this.componentId || this.componentId == \"\") {\r\n      this.componentId = utils.generateUniqueId();\r\n      this.el.setAttribute(\"id\", this.componentId);\r\n    }\r\n\r\n    this.inputId = (this.inputId != \"\") ? this.inputId : this.componentId + \"_input\";\r\n    this.buttonId = this.componentId + \"_button\";\r\n    this.dropdownId = this.componentId + \"_dropdown\";\r\n\r\n    this.inputName = (this.inputName != \"\") ? this.inputName : this.inputId; // If the user supplied a name, use it, otherwise just re-use the id.\r\n\r\n    // Look for and handle any <yeti-combobox-option> elements.\r\n    if (optionElements.length > 0) {\r\n      this.parseOptionElements(optionElements);\r\n    }\r\n\r\n    // Make sure selection type is a valid value.\r\n    this.selectionType = (this.selectionType == \"automatic\") ? this.selectionType : \"manual\";\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n\r\n    let wrapperCss = 'yeti-combobox-wrapper';\r\n    let dropdownCss = 'yeti-combobox-dropdown';\r\n    let activeDescendantId = (this.isOpen && this.cursorPosition != -1) ? `${this.componentId}_option${this.cursorPosition}` : ``; // If there is an active descendant (i.e. the menu is open and one of the options has the cursor highlight) then its id will look something like componentId_option3.\r\n\r\n    wrapperCss += (this.wrapperCss == \"\") ? '' : ` ${this.wrapperCss}`;\r\n\r\n    if (this.isValid == false) {\r\n      wrapperCss += ' yeti-combobox__error';\r\n    }\r\n\r\n    dropdownCss += (this.isOpen) ? \" yeti-combobox-dropdown__open\" : \"\";\r\n\r\n    if (this.menuAlignment == \"right\") {\r\n      dropdownCss += ' yeti-combobox-dropdown-align-right'\r\n    }\r\n\r\n    return ([\r\n      <div class={wrapperCss}>\r\n\r\n        <div \r\n          class=\"yeti-combobox\"\r\n          onClick={(ev) => this.handleClick(ev)}\r\n        >\r\n\r\n          <input \r\n            type=\"text\" \r\n            class=\"yeti-combobox-input\" \r\n            // title={this.value}\r\n            value={this.value}\r\n            name={this.inputName}\r\n            onFocus={() => {\r\n              this.isTouched = true;\r\n              if (this.selectionType == \"automatic\") {\r\n                this.openFlyout();\r\n              }\r\n            }}\r\n            onBlur={(e) => {\r\n              this.handleFieldBlur(e);\r\n            }}\r\n            onInput={(ev) => this.handleInputChange(ev)}\r\n            role=\"combobox\"\r\n            autocomplete=\"off\"\r\n            aria-autocomplete=\"none\"\r\n            aria-controls={this.dropdownId}\r\n            aria-expanded={this.isOpen}\r\n            id={this.inputId}\r\n            {...(this.inputDescribedBy != \"\") ? { \"aria-describedby\" : this.inputDescribedBy } : {}}\r\n            {...(activeDescendantId != \"\") ? { \"aria-activedescendant\" : activeDescendantId } : {}}\r\n          />\r\n\r\n          { (this.showClear && this.value != '') ? \r\n\r\n            (<button class=\"yeti-combobox-clear\" title=\"Clear all selections\" onClick={ (ev) => { this.handleClearSelections(ev); ev.preventDefault() }}>\r\n              <span class=\"material-icons yeti-combobox-clear-icon\" aria-hidden=\"true\">clear</span>\r\n            </button>)\r\n\r\n          :\r\n\r\n            \"\"\r\n\r\n          }\r\n\r\n          <button \r\n            class=\"yeti-combobox-button\" \r\n            tabIndex={-1}\r\n            aria-controls={this.dropdownId}\r\n            aria-expanded={this.isOpen}\r\n            id={this.buttonId}\r\n            onClick={(ev) => { this.handleButtonClick(ev) }}\r\n          >\r\n            {\r\n              (!this.isLookup) ?\r\n\r\n                <yeti-icon iconCode={(this.isOpen ? 'expand_less' : 'expand_more')} alt={(this.isOpen ? 'close' : 'open')}></yeti-icon>\r\n\r\n              :\r\n\r\n                <yeti-icon iconCode='search' alt={(this.isOpen ? 'lookup, close' : 'lookup, open')}></yeti-icon>\r\n\r\n            }\r\n            \r\n          </button>\r\n\r\n        </div>\r\n\r\n        \r\n        <div class={dropdownCss}>\r\n        \r\n          <ul\r\n            class=\"yeti-combobox-options\"\r\n            id={this.dropdownId}\r\n            role=\"listbox\"\r\n          >\r\n\r\n            {this.options.map((option, i) => {\r\n\r\n                let optionClass = (this.cursorPosition == i) ? \"yeti-combobox-option yeti-combobox-option__hover\" : \"yeti-combobox-option\";\r\n                optionClass += (option.selected) ? \" yeti-combobox-option__selected\" : \"\";\r\n\r\n                // Only render visible options\r\n                if (!option.isVisible) {\r\n                  return \"\";\r\n                }\r\n              \r\n                return (\r\n                  <li \r\n                    id={option.id} \r\n                    key={option.id} \r\n                    role=\"option\"\r\n                    aria-selected={`${option.selected}`}\r\n                    class={optionClass}\r\n                    onClick={(ev) => { this.handleOptionClick(i); ev.preventDefault(); }}\r\n                  >\r\n\r\n                      <span class=\"yeti-combobox-option-label\">{option.label}</span>\r\n                      <span class=\"yeti-combobox-option-checkmark\" aria-hidden='true'>\r\n                        {(option.selected) ? \r\n                        \r\n                          <yeti-icon iconCode='checkmark'></yeti-icon>\r\n\r\n                        :\r\n\r\n                          ''\r\n\r\n                        }\r\n                      </span>\r\n\r\n                  </li>\r\n                )\r\n              }\r\n            \r\n            )}\r\n\r\n          </ul>\r\n\r\n        </div>\r\n\r\n      </div>\r\n    ]);\r\n  }\r\n\r\n\r\n\r\n  componentDidRender() {\r\n    // If the cursor is over an option, make sure it's visible.\r\n    if (this.isOpen) {\r\n      // The facade dropdown is open. If one of the options is being hovered over then we want to scroll it into view.\r\n      // If not, then we'll scroll the whole dropdown into view.\r\n      let dropdown = this.el.querySelector(\".yeti-combobox-dropdown\");\r\n      let hoveredOption = this.el.querySelector(\".yeti-combobox-option__hover\");\r\n      let thingToScrollIntoView = (hoveredOption) ? hoveredOption : dropdown;\r\n      thingToScrollIntoView.scrollIntoView({\r\n        behavior: \"smooth\",\r\n        block: \"nearest\"\r\n      });\r\n    }\r\n  }\r\n\r\n}"],"version":3}