{"version":3,"names":["NAMESPACE","BUILD","allRenderFn","appendChildSlotFix","asyncLoading","asyncQueue","attachStyles","cloneNodeFix","cmpDidLoad","cmpDidRender","cmpDidUnload","cmpDidUpdate","cmpShouldUpdate","cmpWillLoad","cmpWillRender","cmpWillUpdate","connectedCallback","constructableCSS","cssAnnotations","devTools","disconnectedCallback","element","event","experimentalScopedSlotChanges","experimentalSlotFixes","formAssociated","hasRenderFn","hostListener","hostListenerTarget","hostListenerTargetBody","hostListenerTargetDocument","hostListenerTargetParent","hostListenerTargetWindow","hotModuleReplacement","hydrateClientSide","hydrateServerSide","hydratedAttribute","hydratedClass","hydratedSelectorName","initializeNextTick","invisiblePrehydration","isDebug","isDev","isTesting","lazyLoad","lifecycle","lifecycleDOMEvents","member","method","mode","observeAttribute","profile","prop","propBoolean","propMutable","propNumber","propString","reflect","scoped","scopedSlotTextContentFix","scriptDataOpts","shadowDelegatesFocus","shadowDom","slot","slotChildNodesFix","slotRelocation","state","style","svg","taskQueue","transformTagName","updatable","vdomAttribute","vdomClass","vdomFunctional","vdomKey","vdomListener","vdomPropOrAttr","vdomRef","vdomRender","vdomStyle","vdomText","vdomXlink","watchCallback","__defProp","Object","defineProperty","__export","target","all","name","get","enumerable","hostRefs","WeakMap","getHostRef","ref","registerInstance","lazyInstance","hostRef","set","$lazyInstance$","registerHost","hostElement","cmpMeta","$flags$","$hostElement$","$cmpMeta$","$instanceValues$","Map","$onInstancePromise$","Promise","r","$onInstanceResolve$","$onReadyPromise$","$onReadyResolve$","isMemberInElement","elm","memberName","consoleError","e","el","console","error","cmpModules","loadModule","hmrVersionId","exportName","$tagName$","replace","bundleId","$lazyBundleId$","module","import","then","importedModule","styles","HYDRATED_CSS","SLOT_FB_CSS","XLINK_NS","win","window","doc","document","head","H","HTMLElement","plt","$resourcesUrl$","jmp","h2","raf","requestAnimationFrame","ael","eventName","listener","opts","addEventListener","rel","removeEventListener","ce","CustomEvent","supportsListenerOptions","supportsListenerOptions2","promiseResolve","v","resolve","supportsConstructableStylesheets","CSSStyleSheet","replaceSync","queuePending","queueDomReads","queueDomWrites","queueTask","queue","write","cb","push","nextTick","flush","consume","i2","length","performance","now","writeTask","EMPTY_OBJ","SVG_NS","HTML_NS","isDef","isComplexType","o","queryNonceMetaTagContent","doc2","_a","_b","_c","querySelector","getAttribute","result_exports","err","map","ok","unwrap","unwrapErr","value","isOk","isErr","result","fn","val","newVal","h","nodeName","vnodeData","children","child","key","slotName","simple","lastSimple","vNodeChildren","walk","c","Array","isArray","String","$text$","newVNode","classData","className","class","keys","filter","k","join","vnode","$attrs$","$children$","$key$","$name$","tag","text","$tag$","$elm$","Host","isHost","node","setAccessor","oldValue","newValue","isSvg","flags","isProp","ln","toLowerCase","classList","oldClasses","parseClassList","newClasses","indexOf","remove","includes","add","removeProperty","setProperty","slice","capture","endsWith","CAPTURE_EVENT_SUFFIX","CAPTURE_EVENT_REGEX","isComplex","tagName","n","__lookupSetter__","setAttribute","xlink","removeAttributeNS","removeAttribute","setAttributeNS","parseClassListRegex","split","RegExp","updateElement","oldVnode","newVnode","isSvgMode2","nodeType","host","oldVnodeAttrs","newVnodeAttrs","sortedAttrNames","attrNames","attr","scopeId","contentRef","hostTagName","useNativeShadowDom","checkSlotFallbackVisibility","checkSlotRelocate","isSvgMode","createElm","oldParentVNode","newParentVNode","childIndex","parentElm","newVNode2","childNode","oldVNode","createTextNode","createElementNS","BUILD10","rootNode","getRootNode","isElementWithinShadowRoot","appendChild","relocateToHostRoot","closest","contentRefNode","from","__childNodes","childNodes","find","childNodeArray","reverse","insertBefore","putBackInOriginalLocation","recursive","oldSlotChildNodes","nextSibling","parentReferenceNode","referenceNode","addVnodes","before","parentVNode","vnodes","startIdx","endIdx","containerElm","parentNode","shadowRoot","removeVnodes","index","nullifyVNodeRefs","updateChildren","oldCh","newCh","isInitialRender","oldStartIdx","newStartIdx","idxInOld","oldEndIdx","oldStartVnode","oldEndVnode","newEndIdx","newStartVnode","newEndVnode","elmToMove","isSameVnode","patch","leftVNode","rightVNode","oldChildren","newChildren","defaultHolder","parentElement","textContent","data","updateFallbackSlotVisibility","hidden","siblingNode","trim","relocateNodes","markSlotContentForRelocation","hostContentNodes","j","isNodeLocatedInSlot","relocateNodeData","$nodeToRelocate$","$slotRefNode$","relocateNode","some","nodeToRelocate","vNode","parent","newNode","reference","inserted","renderVdom","renderFnResults","isInitialLoad","_d","_e","hostElm","$vnode$","rootVnode","$attrsToReflect$","propName","attribute","hasAttribute","relocateData","orgLocationNode","slotRefNode","parentNodeRef","insertBeforeNode","previousSibling","refNode","createTime","fnName","uniqueTime","measureText","parsePropertyValue","propValue","propType","parseFloat","getElement","createEvent","emit","detail","emitEvent","bubbles","composed","cancelable","ev","dispatchEvent","rootAppliedStyles","registerStyle","scopeId2","cssText","allowCS","addStyle","styleContainerNode","getScopeId","appliedStyles","styleElm","Set","has","createElement","innerHTML","nonce","$nonce$","preconnectLinks","querySelectorAll","referenceNode2","stylesheet","adoptedStyleSheets","existingStyleContainer","prepend","append","endAttachStyles","cmp","attachToAncestor","ancestorComponent","$onRenderResolve$","scheduleUpdate","$ancestorComponent$","dispatch","dispatchHooks","endSchedule","instance","Error","maybePromise","$queuedListeners$","methodName","safeCall","enqueue","updateComponent","isPromisey","catch","err2","async","endUpdate","rc","endRender","callRender","childrenPromises","postUpdate","postUpdateComponent","render","endPostUpdate","addHydratedFlag","appDidLoad","who","documentElement","namespace","arg","BUILD18","getValue","setValue","oldVal","$members$","areBothNaN","Number","isNaN","didValueChange","$watchers$","watchMethods","watchMethodName","proxyComponent","Cstr","prototype","watchers","members","entries","memberFlags","this","configurable","origSetter","getOwnPropertyDescriptor","currentValue","apply","setterSetVal","args","_a2","_a3","attrNameToPropName","attributeChangedCallback","attrName","hasOwnProperty","flags2","entry","forEach","callbackName","call","propDesc","observedAttributes","_","m","initializeComponent","CstrImport","endLoad","$modeName$","isProxied","endNewInstance","constructor","cmpTag","localName","customElements","whenDefined","endRegisterStyles","schedule","fireConnectedCallback","endConnected","setContentReference","addHostEventListeners","$listeners$","contentRefElm","createComment","firstChild","disconnectInstance","$rmListeners$","rmListener","bootstrapLazy","lazyBundles","options","endBootstrap","cmpTags","exclude","customElements2","metaCharset","dataStyles","deferredConnectedCallbacks","appLoadFallback","isBootstrapping","assign","URL","resourcesUrl","baseURI","href","hasSlotRelocation","lazyBundle","compactMeta","HostElement","self","super","hasRegisteredEventListeners","attachShadow","clearTimeout","componentOnReady","define","sort","setTimeout","listeners","attachParentListeners","getHostListenerTarget","handler","hostListenerProxy","hostListenerOpts","body","passive","setNonce"],"sources":["@stencil/core/internal/app-data","node_modules/@stencil/core/internal/client/index.js?app-data=conditional"],"sourcesContent":["export const NAMESPACE = 'yeti';\nexport const BUILD = /* yeti */ { allRenderFn: true, appendChildSlotFix: true, asyncLoading: true, asyncQueue: false, attachStyles: true, cloneNodeFix: true, cmpDidLoad: true, cmpDidRender: true, cmpDidUnload: false, cmpDidUpdate: false, cmpShouldUpdate: false, cmpWillLoad: true, cmpWillRender: true, cmpWillUpdate: false, connectedCallback: false, constructableCSS: true, cssAnnotations: true, devTools: false, disconnectedCallback: false, element: false, event: true, experimentalScopedSlotChanges: true, experimentalSlotFixes: true, formAssociated: false, hasRenderFn: true, hostListener: true, hostListenerTarget: true, hostListenerTargetBody: true, hostListenerTargetDocument: false, hostListenerTargetParent: false, hostListenerTargetWindow: true, hotModuleReplacement: false, hydrateClientSide: false, hydrateServerSide: false, hydratedAttribute: false, hydratedClass: true, hydratedSelectorName: \"hydrated\", initializeNextTick: false, invisiblePrehydration: true, isDebug: false, isDev: false, isTesting: false, lazyLoad: true, lifecycle: true, lifecycleDOMEvents: false, member: true, method: true, mode: false, observeAttribute: true, profile: false, prop: true, propBoolean: true, propMutable: true, propNumber: true, propString: true, reflect: true, scoped: false, scopedSlotTextContentFix: true, scriptDataOpts: false, shadowDelegatesFocus: false, shadowDom: true, slot: true, slotChildNodesFix: true, slotRelocation: true, state: true, style: true, svg: true, taskQueue: true, transformTagName: false, updatable: true, vdomAttribute: true, vdomClass: true, vdomFunctional: false, vdomKey: true, vdomListener: true, vdomPropOrAttr: true, vdomRef: true, vdomRender: true, vdomStyle: true, vdomText: true, vdomXlink: true, watchCallback: true };\nexport const Env = /* yeti */ {};\n","/*\n Stencil Client Platform v4.23.0 | MIT Licensed | https://stenciljs.com\n */\nvar __defProp = Object.defineProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\n\n// src/client/client-build.ts\nimport { BUILD } from \"@stencil/core/internal/app-data\";\nvar Build = {\n  isDev: BUILD.isDev ? true : false,\n  isBrowser: true,\n  isServer: false,\n  isTesting: BUILD.isTesting ? true : false\n};\n\n// src/client/client-host-ref.ts\nimport { BUILD as BUILD2 } from \"@stencil/core/internal/app-data\";\nvar hostRefs = BUILD2.hotModuleReplacement ? window.__STENCIL_HOSTREFS__ || (window.__STENCIL_HOSTREFS__ = /* @__PURE__ */ new WeakMap()) : /* @__PURE__ */ new WeakMap();\nvar getHostRef = (ref) => hostRefs.get(ref);\nvar registerInstance = (lazyInstance, hostRef) => hostRefs.set(hostRef.$lazyInstance$ = lazyInstance, hostRef);\nvar registerHost = (hostElement, cmpMeta) => {\n  const hostRef = {\n    $flags$: 0,\n    $hostElement$: hostElement,\n    $cmpMeta$: cmpMeta,\n    $instanceValues$: /* @__PURE__ */ new Map()\n  };\n  if (BUILD2.isDev) {\n    hostRef.$renderCount$ = 0;\n  }\n  if (BUILD2.method && BUILD2.lazyLoad) {\n    hostRef.$onInstancePromise$ = new Promise((r) => hostRef.$onInstanceResolve$ = r);\n  }\n  if (BUILD2.asyncLoading) {\n    hostRef.$onReadyPromise$ = new Promise((r) => hostRef.$onReadyResolve$ = r);\n    hostElement[\"s-p\"] = [];\n    hostElement[\"s-rc\"] = [];\n  }\n  return hostRefs.set(hostElement, hostRef);\n};\nvar isMemberInElement = (elm, memberName) => memberName in elm;\n\n// src/client/client-load-module.ts\nimport { BUILD as BUILD4 } from \"@stencil/core/internal/app-data\";\n\n// src/client/client-log.ts\nimport { BUILD as BUILD3 } from \"@stencil/core/internal/app-data\";\nvar customError;\nvar consoleError = (e, el) => (customError || console.error)(e, el);\nvar STENCIL_DEV_MODE = BUILD3.isTesting ? [\"STENCIL:\"] : [\n  \"%cstencil\",\n  \"color: white;background:#4c47ff;font-weight: bold; font-size:10px; padding:2px 6px; border-radius: 5px\"\n];\nvar consoleDevError = (...m) => console.error(...STENCIL_DEV_MODE, ...m);\nvar consoleDevWarn = (...m) => console.warn(...STENCIL_DEV_MODE, ...m);\nvar consoleDevInfo = (...m) => console.info(...STENCIL_DEV_MODE, ...m);\nvar setErrorHandler = (handler) => customError = handler;\n\n// src/client/client-load-module.ts\nvar cmpModules = /* @__PURE__ */ new Map();\nvar MODULE_IMPORT_PREFIX = \"./\";\nvar loadModule = (cmpMeta, hostRef, hmrVersionId) => {\n  const exportName = cmpMeta.$tagName$.replace(/-/g, \"_\");\n  const bundleId = cmpMeta.$lazyBundleId$;\n  if (BUILD4.isDev && typeof bundleId !== \"string\") {\n    consoleDevError(\n      `Trying to lazily load component <${cmpMeta.$tagName$}> with style mode \"${hostRef.$modeName$}\", but it does not exist.`\n    );\n    return void 0;\n  } else if (!bundleId) {\n    return void 0;\n  }\n  const module = !BUILD4.hotModuleReplacement ? cmpModules.get(bundleId) : false;\n  if (module) {\n    return module[exportName];\n  }\n  /*!__STENCIL_STATIC_IMPORT_SWITCH__*/\n  return import(\n    /* @vite-ignore */\n    /* webpackInclude: /\\.entry\\.js$/ */\n    /* webpackExclude: /\\.system\\.entry\\.js$/ */\n    /* webpackMode: \"lazy\" */\n    `./${bundleId}.entry.js${BUILD4.hotModuleReplacement && hmrVersionId ? \"?s-hmr=\" + hmrVersionId : \"\"}`\n  ).then((importedModule) => {\n    if (!BUILD4.hotModuleReplacement) {\n      cmpModules.set(bundleId, importedModule);\n    }\n    return importedModule[exportName];\n  }, consoleError);\n};\n\n// src/client/client-style.ts\nvar styles = /* @__PURE__ */ new Map();\nvar modeResolutionChain = [];\n\n// src/client/client-task-queue.ts\nimport { BUILD as BUILD6 } from \"@stencil/core/internal/app-data\";\n\n// src/runtime/runtime-constants.ts\nvar CONTENT_REF_ID = \"r\";\nvar ORG_LOCATION_ID = \"o\";\nvar SLOT_NODE_ID = \"s\";\nvar TEXT_NODE_ID = \"t\";\nvar COMMENT_NODE_ID = \"c\";\nvar HYDRATE_ID = \"s-id\";\nvar HYDRATED_STYLE_ID = \"sty-id\";\nvar HYDRATE_CHILD_ID = \"c-id\";\nvar HYDRATED_CSS = \"{visibility:hidden}.hydrated{visibility:inherit}\";\nvar STENCIL_DOC_DATA = \"_stencilDocData\";\nvar DEFAULT_DOC_DATA = {\n  hostIds: 0,\n  rootLevelIds: 0,\n  staticComponents: /* @__PURE__ */ new Set()\n};\nvar SLOT_FB_CSS = \"slot-fb{display:contents}slot-fb[hidden]{display:none}\";\nvar XLINK_NS = \"http://www.w3.org/1999/xlink\";\nvar FORM_ASSOCIATED_CUSTOM_ELEMENT_CALLBACKS = [\n  \"formAssociatedCallback\",\n  \"formResetCallback\",\n  \"formDisabledCallback\",\n  \"formStateRestoreCallback\"\n];\n\n// src/client/client-window.ts\nimport { BUILD as BUILD5 } from \"@stencil/core/internal/app-data\";\nvar win = typeof window !== \"undefined\" ? window : {};\nvar doc = win.document || { head: {} };\nvar H = win.HTMLElement || class {\n};\nvar plt = {\n  $flags$: 0,\n  $resourcesUrl$: \"\",\n  jmp: (h2) => h2(),\n  raf: (h2) => requestAnimationFrame(h2),\n  ael: (el, eventName, listener, opts) => el.addEventListener(eventName, listener, opts),\n  rel: (el, eventName, listener, opts) => el.removeEventListener(eventName, listener, opts),\n  ce: (eventName, opts) => new CustomEvent(eventName, opts)\n};\nvar setPlatformHelpers = (helpers) => {\n  Object.assign(plt, helpers);\n};\nvar supportsShadow = BUILD5.shadowDom;\nvar supportsListenerOptions = /* @__PURE__ */ (() => {\n  let supportsListenerOptions2 = false;\n  try {\n    doc.addEventListener(\n      \"e\",\n      null,\n      Object.defineProperty({}, \"passive\", {\n        get() {\n          supportsListenerOptions2 = true;\n        }\n      })\n    );\n  } catch (e) {\n  }\n  return supportsListenerOptions2;\n})();\nvar promiseResolve = (v) => Promise.resolve(v);\nvar supportsConstructableStylesheets = BUILD5.constructableCSS ? /* @__PURE__ */ (() => {\n  try {\n    new CSSStyleSheet();\n    return typeof new CSSStyleSheet().replaceSync === \"function\";\n  } catch (e) {\n  }\n  return false;\n})() : false;\n\n// src/client/client-task-queue.ts\nvar queueCongestion = 0;\nvar queuePending = false;\nvar queueDomReads = [];\nvar queueDomWrites = [];\nvar queueDomWritesLow = [];\nvar queueTask = (queue, write) => (cb) => {\n  queue.push(cb);\n  if (!queuePending) {\n    queuePending = true;\n    if (write && plt.$flags$ & 4 /* queueSync */) {\n      nextTick(flush);\n    } else {\n      plt.raf(flush);\n    }\n  }\n};\nvar consume = (queue) => {\n  for (let i2 = 0; i2 < queue.length; i2++) {\n    try {\n      queue[i2](performance.now());\n    } catch (e) {\n      consoleError(e);\n    }\n  }\n  queue.length = 0;\n};\nvar consumeTimeout = (queue, timeout) => {\n  let i2 = 0;\n  let ts = 0;\n  while (i2 < queue.length && (ts = performance.now()) < timeout) {\n    try {\n      queue[i2++](ts);\n    } catch (e) {\n      consoleError(e);\n    }\n  }\n  if (i2 === queue.length) {\n    queue.length = 0;\n  } else if (i2 !== 0) {\n    queue.splice(0, i2);\n  }\n};\nvar flush = () => {\n  if (BUILD6.asyncQueue) {\n    queueCongestion++;\n  }\n  consume(queueDomReads);\n  if (BUILD6.asyncQueue) {\n    const timeout = (plt.$flags$ & 6 /* queueMask */) === 2 /* appLoaded */ ? performance.now() + 14 * Math.ceil(queueCongestion * (1 / 10)) : Infinity;\n    consumeTimeout(queueDomWrites, timeout);\n    consumeTimeout(queueDomWritesLow, timeout);\n    if (queueDomWrites.length > 0) {\n      queueDomWritesLow.push(...queueDomWrites);\n      queueDomWrites.length = 0;\n    }\n    if (queuePending = queueDomReads.length + queueDomWrites.length + queueDomWritesLow.length > 0) {\n      plt.raf(flush);\n    } else {\n      queueCongestion = 0;\n    }\n  } else {\n    consume(queueDomWrites);\n    if (queuePending = queueDomReads.length > 0) {\n      plt.raf(flush);\n    }\n  }\n};\nvar nextTick = (cb) => promiseResolve().then(cb);\nvar readTask = /* @__PURE__ */ queueTask(queueDomReads, false);\nvar writeTask = /* @__PURE__ */ queueTask(queueDomWrites, true);\n\n// src/client/index.ts\nimport { BUILD as BUILD27, Env, NAMESPACE as NAMESPACE2 } from \"@stencil/core/internal/app-data\";\n\n// src/runtime/asset-path.ts\nvar getAssetPath = (path) => {\n  const assetUrl = new URL(path, plt.$resourcesUrl$);\n  return assetUrl.origin !== win.location.origin ? assetUrl.href : assetUrl.pathname;\n};\nvar setAssetPath = (path) => plt.$resourcesUrl$ = path;\n\n// src/runtime/bootstrap-custom-element.ts\nimport { BUILD as BUILD24 } from \"@stencil/core/internal/app-data\";\n\n// src/utils/constants.ts\nvar EMPTY_OBJ = {};\nvar SVG_NS = \"http://www.w3.org/2000/svg\";\nvar HTML_NS = \"http://www.w3.org/1999/xhtml\";\n\n// src/utils/helpers.ts\nvar isDef = (v) => v != null;\nvar isComplexType = (o) => {\n  o = typeof o;\n  return o === \"object\" || o === \"function\";\n};\n\n// src/utils/query-nonce-meta-tag-content.ts\nfunction queryNonceMetaTagContent(doc2) {\n  var _a, _b, _c;\n  return (_c = (_b = (_a = doc2.head) == null ? void 0 : _a.querySelector('meta[name=\"csp-nonce\"]')) == null ? void 0 : _b.getAttribute(\"content\")) != null ? _c : void 0;\n}\n\n// src/utils/result.ts\nvar result_exports = {};\n__export(result_exports, {\n  err: () => err,\n  map: () => map,\n  ok: () => ok,\n  unwrap: () => unwrap,\n  unwrapErr: () => unwrapErr\n});\nvar ok = (value) => ({\n  isOk: true,\n  isErr: false,\n  value\n});\nvar err = (value) => ({\n  isOk: false,\n  isErr: true,\n  value\n});\nfunction map(result, fn) {\n  if (result.isOk) {\n    const val = fn(result.value);\n    if (val instanceof Promise) {\n      return val.then((newVal) => ok(newVal));\n    } else {\n      return ok(val);\n    }\n  }\n  if (result.isErr) {\n    const value = result.value;\n    return err(value);\n  }\n  throw \"should never get here\";\n}\nvar unwrap = (result) => {\n  if (result.isOk) {\n    return result.value;\n  } else {\n    throw result.value;\n  }\n};\nvar unwrapErr = (result) => {\n  if (result.isErr) {\n    return result.value;\n  } else {\n    throw result.value;\n  }\n};\n\n// src/runtime/connected-callback.ts\nimport { BUILD as BUILD22 } from \"@stencil/core/internal/app-data\";\n\n// src/runtime/client-hydrate.ts\nimport { BUILD as BUILD13 } from \"@stencil/core/internal/app-data\";\n\n// src/runtime/dom-extras.ts\nimport { BUILD as BUILD11 } from \"@stencil/core/internal/app-data\";\n\n// src/runtime/vdom/vdom-render.ts\nimport { BUILD as BUILD10 } from \"@stencil/core/internal/app-data\";\n\n// src/runtime/vdom/h.ts\nimport { BUILD as BUILD7 } from \"@stencil/core/internal/app-data\";\nvar h = (nodeName, vnodeData, ...children) => {\n  let child = null;\n  let key = null;\n  let slotName = null;\n  let simple = false;\n  let lastSimple = false;\n  const vNodeChildren = [];\n  const walk = (c) => {\n    for (let i2 = 0; i2 < c.length; i2++) {\n      child = c[i2];\n      if (Array.isArray(child)) {\n        walk(child);\n      } else if (child != null && typeof child !== \"boolean\") {\n        if (simple = typeof nodeName !== \"function\" && !isComplexType(child)) {\n          child = String(child);\n        } else if (BUILD7.isDev && typeof nodeName !== \"function\" && child.$flags$ === void 0) {\n          consoleDevError(`vNode passed as children has unexpected type.\nMake sure it's using the correct h() function.\nEmpty objects can also be the cause, look for JSX comments that became objects.`);\n        }\n        if (simple && lastSimple) {\n          vNodeChildren[vNodeChildren.length - 1].$text$ += child;\n        } else {\n          vNodeChildren.push(simple ? newVNode(null, child) : child);\n        }\n        lastSimple = simple;\n      }\n    }\n  };\n  walk(children);\n  if (vnodeData) {\n    if (BUILD7.isDev && nodeName === \"input\") {\n      validateInputProperties(vnodeData);\n    }\n    if (BUILD7.vdomKey && vnodeData.key) {\n      key = vnodeData.key;\n    }\n    if (BUILD7.slotRelocation && vnodeData.name) {\n      slotName = vnodeData.name;\n    }\n    if (BUILD7.vdomClass) {\n      const classData = vnodeData.className || vnodeData.class;\n      if (classData) {\n        vnodeData.class = typeof classData !== \"object\" ? classData : Object.keys(classData).filter((k) => classData[k]).join(\" \");\n      }\n    }\n  }\n  if (BUILD7.isDev && vNodeChildren.some(isHost)) {\n    consoleDevError(`The <Host> must be the single root component. Make sure:\n- You are NOT using hostData() and <Host> in the same component.\n- <Host> is used once, and it's the single root component of the render() function.`);\n  }\n  if (BUILD7.vdomFunctional && typeof nodeName === \"function\") {\n    return nodeName(\n      vnodeData === null ? {} : vnodeData,\n      vNodeChildren,\n      vdomFnUtils\n    );\n  }\n  const vnode = newVNode(nodeName, null);\n  vnode.$attrs$ = vnodeData;\n  if (vNodeChildren.length > 0) {\n    vnode.$children$ = vNodeChildren;\n  }\n  if (BUILD7.vdomKey) {\n    vnode.$key$ = key;\n  }\n  if (BUILD7.slotRelocation) {\n    vnode.$name$ = slotName;\n  }\n  return vnode;\n};\nvar newVNode = (tag, text) => {\n  const vnode = {\n    $flags$: 0,\n    $tag$: tag,\n    $text$: text,\n    $elm$: null,\n    $children$: null\n  };\n  if (BUILD7.vdomAttribute) {\n    vnode.$attrs$ = null;\n  }\n  if (BUILD7.vdomKey) {\n    vnode.$key$ = null;\n  }\n  if (BUILD7.slotRelocation) {\n    vnode.$name$ = null;\n  }\n  return vnode;\n};\nvar Host = {};\nvar isHost = (node) => node && node.$tag$ === Host;\nvar vdomFnUtils = {\n  forEach: (children, cb) => children.map(convertToPublic).forEach(cb),\n  map: (children, cb) => children.map(convertToPublic).map(cb).map(convertToPrivate)\n};\nvar convertToPublic = (node) => ({\n  vattrs: node.$attrs$,\n  vchildren: node.$children$,\n  vkey: node.$key$,\n  vname: node.$name$,\n  vtag: node.$tag$,\n  vtext: node.$text$\n});\nvar convertToPrivate = (node) => {\n  if (typeof node.vtag === \"function\") {\n    const vnodeData = { ...node.vattrs };\n    if (node.vkey) {\n      vnodeData.key = node.vkey;\n    }\n    if (node.vname) {\n      vnodeData.name = node.vname;\n    }\n    return h(node.vtag, vnodeData, ...node.vchildren || []);\n  }\n  const vnode = newVNode(node.vtag, node.vtext);\n  vnode.$attrs$ = node.vattrs;\n  vnode.$children$ = node.vchildren;\n  vnode.$key$ = node.vkey;\n  vnode.$name$ = node.vname;\n  return vnode;\n};\nvar validateInputProperties = (inputElm) => {\n  const props = Object.keys(inputElm);\n  const value = props.indexOf(\"value\");\n  if (value === -1) {\n    return;\n  }\n  const typeIndex = props.indexOf(\"type\");\n  const minIndex = props.indexOf(\"min\");\n  const maxIndex = props.indexOf(\"max\");\n  const stepIndex = props.indexOf(\"step\");\n  if (value < typeIndex || value < minIndex || value < maxIndex || value < stepIndex) {\n    consoleDevWarn(`The \"value\" prop of <input> should be set after \"min\", \"max\", \"type\" and \"step\"`);\n  }\n};\n\n// src/runtime/vdom/update-element.ts\nimport { BUILD as BUILD9 } from \"@stencil/core/internal/app-data\";\n\n// src/runtime/vdom/set-accessor.ts\nimport { BUILD as BUILD8 } from \"@stencil/core/internal/app-data\";\nvar setAccessor = (elm, memberName, oldValue, newValue, isSvg, flags) => {\n  if (oldValue !== newValue) {\n    let isProp = isMemberInElement(elm, memberName);\n    let ln = memberName.toLowerCase();\n    if (BUILD8.vdomClass && memberName === \"class\") {\n      const classList = elm.classList;\n      const oldClasses = parseClassList(oldValue);\n      const newClasses = parseClassList(newValue);\n      if (elm[\"s-si\"] && newClasses.indexOf(elm[\"s-si\"]) < 0) {\n        newClasses.push(elm[\"s-si\"]);\n      }\n      classList.remove(...oldClasses.filter((c) => c && !newClasses.includes(c)));\n      classList.add(...newClasses.filter((c) => c && !oldClasses.includes(c)));\n    } else if (BUILD8.vdomStyle && memberName === \"style\") {\n      if (BUILD8.updatable) {\n        for (const prop in oldValue) {\n          if (!newValue || newValue[prop] == null) {\n            if (!BUILD8.hydrateServerSide && prop.includes(\"-\")) {\n              elm.style.removeProperty(prop);\n            } else {\n              elm.style[prop] = \"\";\n            }\n          }\n        }\n      }\n      for (const prop in newValue) {\n        if (!oldValue || newValue[prop] !== oldValue[prop]) {\n          if (!BUILD8.hydrateServerSide && prop.includes(\"-\")) {\n            elm.style.setProperty(prop, newValue[prop]);\n          } else {\n            elm.style[prop] = newValue[prop];\n          }\n        }\n      }\n    } else if (BUILD8.vdomKey && memberName === \"key\") {\n    } else if (BUILD8.vdomRef && memberName === \"ref\") {\n      if (newValue) {\n        newValue(elm);\n      }\n    } else if (BUILD8.vdomListener && (BUILD8.lazyLoad ? !isProp : !elm.__lookupSetter__(memberName)) && memberName[0] === \"o\" && memberName[1] === \"n\") {\n      if (memberName[2] === \"-\") {\n        memberName = memberName.slice(3);\n      } else if (isMemberInElement(win, ln)) {\n        memberName = ln.slice(2);\n      } else {\n        memberName = ln[2] + memberName.slice(3);\n      }\n      if (oldValue || newValue) {\n        const capture = memberName.endsWith(CAPTURE_EVENT_SUFFIX);\n        memberName = memberName.replace(CAPTURE_EVENT_REGEX, \"\");\n        if (oldValue) {\n          plt.rel(elm, memberName, oldValue, capture);\n        }\n        if (newValue) {\n          plt.ael(elm, memberName, newValue, capture);\n        }\n      }\n    } else if (BUILD8.vdomPropOrAttr) {\n      const isComplex = isComplexType(newValue);\n      if ((isProp || isComplex && newValue !== null) && !isSvg) {\n        try {\n          if (!elm.tagName.includes(\"-\")) {\n            const n = newValue == null ? \"\" : newValue;\n            if (memberName === \"list\") {\n              isProp = false;\n            } else if (oldValue == null || elm[memberName] != n) {\n              if (typeof elm.__lookupSetter__(memberName) === \"function\") {\n                elm[memberName] = n;\n              } else {\n                elm.setAttribute(memberName, n);\n              }\n            }\n          } else {\n            elm[memberName] = newValue;\n          }\n        } catch (e) {\n        }\n      }\n      let xlink = false;\n      if (BUILD8.vdomXlink) {\n        if (ln !== (ln = ln.replace(/^xlink\\:?/, \"\"))) {\n          memberName = ln;\n          xlink = true;\n        }\n      }\n      if (newValue == null || newValue === false) {\n        if (newValue !== false || elm.getAttribute(memberName) === \"\") {\n          if (BUILD8.vdomXlink && xlink) {\n            elm.removeAttributeNS(XLINK_NS, memberName);\n          } else {\n            elm.removeAttribute(memberName);\n          }\n        }\n      } else if ((!isProp || flags & 4 /* isHost */ || isSvg) && !isComplex) {\n        newValue = newValue === true ? \"\" : newValue;\n        if (BUILD8.vdomXlink && xlink) {\n          elm.setAttributeNS(XLINK_NS, memberName, newValue);\n        } else {\n          elm.setAttribute(memberName, newValue);\n        }\n      }\n    }\n  }\n};\nvar parseClassListRegex = /\\s/;\nvar parseClassList = (value) => !value ? [] : value.split(parseClassListRegex);\nvar CAPTURE_EVENT_SUFFIX = \"Capture\";\nvar CAPTURE_EVENT_REGEX = new RegExp(CAPTURE_EVENT_SUFFIX + \"$\");\n\n// src/runtime/vdom/update-element.ts\nvar updateElement = (oldVnode, newVnode, isSvgMode2) => {\n  const elm = newVnode.$elm$.nodeType === 11 /* DocumentFragment */ && newVnode.$elm$.host ? newVnode.$elm$.host : newVnode.$elm$;\n  const oldVnodeAttrs = oldVnode && oldVnode.$attrs$ || EMPTY_OBJ;\n  const newVnodeAttrs = newVnode.$attrs$ || EMPTY_OBJ;\n  if (BUILD9.updatable) {\n    for (const memberName of sortedAttrNames(Object.keys(oldVnodeAttrs))) {\n      if (!(memberName in newVnodeAttrs)) {\n        setAccessor(elm, memberName, oldVnodeAttrs[memberName], void 0, isSvgMode2, newVnode.$flags$);\n      }\n    }\n  }\n  for (const memberName of sortedAttrNames(Object.keys(newVnodeAttrs))) {\n    setAccessor(elm, memberName, oldVnodeAttrs[memberName], newVnodeAttrs[memberName], isSvgMode2, newVnode.$flags$);\n  }\n};\nfunction sortedAttrNames(attrNames) {\n  return attrNames.includes(\"ref\") ? (\n    // we need to sort these to ensure that `'ref'` is the last attr\n    [...attrNames.filter((attr) => attr !== \"ref\"), \"ref\"]\n  ) : (\n    // no need to sort, return the original array\n    attrNames\n  );\n}\n\n// src/runtime/vdom/vdom-render.ts\nvar scopeId;\nvar contentRef;\nvar hostTagName;\nvar useNativeShadowDom = false;\nvar checkSlotFallbackVisibility = false;\nvar checkSlotRelocate = false;\nvar isSvgMode = false;\nvar createElm = (oldParentVNode, newParentVNode, childIndex, parentElm) => {\n  var _a;\n  const newVNode2 = newParentVNode.$children$[childIndex];\n  let i2 = 0;\n  let elm;\n  let childNode;\n  let oldVNode;\n  if (BUILD10.slotRelocation && !useNativeShadowDom) {\n    checkSlotRelocate = true;\n    if (newVNode2.$tag$ === \"slot\") {\n      if (scopeId) {\n        parentElm.classList.add(scopeId + \"-s\");\n      }\n      newVNode2.$flags$ |= newVNode2.$children$ ? (\n        // slot element has fallback content\n        // still create an element that \"mocks\" the slot element\n        2 /* isSlotFallback */\n      ) : (\n        // slot element does not have fallback content\n        // create an html comment we'll use to always reference\n        // where actual slot content should sit next to\n        1 /* isSlotReference */\n      );\n    }\n  }\n  if (BUILD10.isDev && newVNode2.$elm$) {\n    consoleDevError(\n      `The JSX ${newVNode2.$text$ !== null ? `\"${newVNode2.$text$}\" text` : `\"${newVNode2.$tag$}\" element`} node should not be shared within the same renderer. The renderer caches element lookups in order to improve performance. However, a side effect from this is that the exact same JSX node should not be reused. For more information please see https://stenciljs.com/docs/templating-jsx#avoid-shared-jsx-nodes`\n    );\n  }\n  if (BUILD10.vdomText && newVNode2.$text$ !== null) {\n    elm = newVNode2.$elm$ = doc.createTextNode(newVNode2.$text$);\n  } else if (BUILD10.slotRelocation && newVNode2.$flags$ & 1 /* isSlotReference */) {\n    elm = newVNode2.$elm$ = BUILD10.isDebug || BUILD10.hydrateServerSide ? slotReferenceDebugNode(newVNode2) : doc.createTextNode(\"\");\n  } else {\n    if (BUILD10.svg && !isSvgMode) {\n      isSvgMode = newVNode2.$tag$ === \"svg\";\n    }\n    elm = newVNode2.$elm$ = BUILD10.svg ? doc.createElementNS(\n      isSvgMode ? SVG_NS : HTML_NS,\n      !useNativeShadowDom && BUILD10.slotRelocation && newVNode2.$flags$ & 2 /* isSlotFallback */ ? \"slot-fb\" : newVNode2.$tag$\n    ) : doc.createElement(\n      !useNativeShadowDom && BUILD10.slotRelocation && newVNode2.$flags$ & 2 /* isSlotFallback */ ? \"slot-fb\" : newVNode2.$tag$\n    );\n    if (BUILD10.svg && isSvgMode && newVNode2.$tag$ === \"foreignObject\") {\n      isSvgMode = false;\n    }\n    if (BUILD10.vdomAttribute) {\n      updateElement(null, newVNode2, isSvgMode);\n    }\n    const rootNode = elm.getRootNode();\n    const isElementWithinShadowRoot = !rootNode.querySelector(\"body\");\n    if (!isElementWithinShadowRoot && BUILD10.scoped && isDef(scopeId) && elm[\"s-si\"] !== scopeId) {\n      elm.classList.add(elm[\"s-si\"] = scopeId);\n    }\n    if (BUILD10.scoped) {\n      updateElementScopeIds(elm, parentElm);\n    }\n    if (newVNode2.$children$) {\n      for (i2 = 0; i2 < newVNode2.$children$.length; ++i2) {\n        childNode = createElm(oldParentVNode, newVNode2, i2, elm);\n        if (childNode) {\n          elm.appendChild(childNode);\n        }\n      }\n    }\n    if (BUILD10.svg) {\n      if (newVNode2.$tag$ === \"svg\") {\n        isSvgMode = false;\n      } else if (elm.tagName === \"foreignObject\") {\n        isSvgMode = true;\n      }\n    }\n  }\n  elm[\"s-hn\"] = hostTagName;\n  if (BUILD10.slotRelocation) {\n    if (newVNode2.$flags$ & (2 /* isSlotFallback */ | 1 /* isSlotReference */)) {\n      elm[\"s-sr\"] = true;\n      elm[\"s-cr\"] = contentRef;\n      elm[\"s-sn\"] = newVNode2.$name$ || \"\";\n      elm[\"s-rf\"] = (_a = newVNode2.$attrs$) == null ? void 0 : _a.ref;\n      oldVNode = oldParentVNode && oldParentVNode.$children$ && oldParentVNode.$children$[childIndex];\n      if (oldVNode && oldVNode.$tag$ === newVNode2.$tag$ && oldParentVNode.$elm$) {\n        if (BUILD10.experimentalSlotFixes) {\n          relocateToHostRoot(oldParentVNode.$elm$);\n        } else {\n          putBackInOriginalLocation(oldParentVNode.$elm$, false);\n        }\n      }\n    }\n  }\n  return elm;\n};\nvar relocateToHostRoot = (parentElm) => {\n  plt.$flags$ |= 1 /* isTmpDisconnected */;\n  const host = parentElm.closest(hostTagName.toLowerCase());\n  if (host != null) {\n    const contentRefNode = Array.from(host.__childNodes || host.childNodes).find(\n      (ref) => ref[\"s-cr\"]\n    );\n    const childNodeArray = Array.from(\n      parentElm.__childNodes || parentElm.childNodes\n    );\n    for (const childNode of contentRefNode ? childNodeArray.reverse() : childNodeArray) {\n      if (childNode[\"s-sh\"] != null) {\n        insertBefore(host, childNode, contentRefNode != null ? contentRefNode : null);\n        childNode[\"s-sh\"] = void 0;\n        checkSlotRelocate = true;\n      }\n    }\n  }\n  plt.$flags$ &= ~1 /* isTmpDisconnected */;\n};\nvar putBackInOriginalLocation = (parentElm, recursive) => {\n  plt.$flags$ |= 1 /* isTmpDisconnected */;\n  const oldSlotChildNodes = Array.from(parentElm.__childNodes || parentElm.childNodes);\n  if (parentElm[\"s-sr\"] && BUILD10.experimentalSlotFixes) {\n    let node = parentElm;\n    while (node = node.nextSibling) {\n      if (node && node[\"s-sn\"] === parentElm[\"s-sn\"] && node[\"s-sh\"] === hostTagName) {\n        oldSlotChildNodes.push(node);\n      }\n    }\n  }\n  for (let i2 = oldSlotChildNodes.length - 1; i2 >= 0; i2--) {\n    const childNode = oldSlotChildNodes[i2];\n    if (childNode[\"s-hn\"] !== hostTagName && childNode[\"s-ol\"]) {\n      insertBefore(parentReferenceNode(childNode), childNode, referenceNode(childNode));\n      childNode[\"s-ol\"].remove();\n      childNode[\"s-ol\"] = void 0;\n      childNode[\"s-sh\"] = void 0;\n      checkSlotRelocate = true;\n    }\n    if (recursive) {\n      putBackInOriginalLocation(childNode, recursive);\n    }\n  }\n  plt.$flags$ &= ~1 /* isTmpDisconnected */;\n};\nvar addVnodes = (parentElm, before, parentVNode, vnodes, startIdx, endIdx) => {\n  let containerElm = BUILD10.slotRelocation && parentElm[\"s-cr\"] && parentElm[\"s-cr\"].parentNode || parentElm;\n  let childNode;\n  if (BUILD10.shadowDom && containerElm.shadowRoot && containerElm.tagName === hostTagName) {\n    containerElm = containerElm.shadowRoot;\n  }\n  for (; startIdx <= endIdx; ++startIdx) {\n    if (vnodes[startIdx]) {\n      childNode = createElm(null, parentVNode, startIdx, parentElm);\n      if (childNode) {\n        vnodes[startIdx].$elm$ = childNode;\n        insertBefore(containerElm, childNode, BUILD10.slotRelocation ? referenceNode(before) : before);\n      }\n    }\n  }\n};\nvar removeVnodes = (vnodes, startIdx, endIdx) => {\n  for (let index = startIdx; index <= endIdx; ++index) {\n    const vnode = vnodes[index];\n    if (vnode) {\n      const elm = vnode.$elm$;\n      nullifyVNodeRefs(vnode);\n      if (elm) {\n        if (BUILD10.slotRelocation) {\n          checkSlotFallbackVisibility = true;\n          if (elm[\"s-ol\"]) {\n            elm[\"s-ol\"].remove();\n          } else {\n            putBackInOriginalLocation(elm, true);\n          }\n        }\n        elm.remove();\n      }\n    }\n  }\n};\nvar updateChildren = (parentElm, oldCh, newVNode2, newCh, isInitialRender = false) => {\n  let oldStartIdx = 0;\n  let newStartIdx = 0;\n  let idxInOld = 0;\n  let i2 = 0;\n  let oldEndIdx = oldCh.length - 1;\n  let oldStartVnode = oldCh[0];\n  let oldEndVnode = oldCh[oldEndIdx];\n  let newEndIdx = newCh.length - 1;\n  let newStartVnode = newCh[0];\n  let newEndVnode = newCh[newEndIdx];\n  let node;\n  let elmToMove;\n  while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n    if (oldStartVnode == null) {\n      oldStartVnode = oldCh[++oldStartIdx];\n    } else if (oldEndVnode == null) {\n      oldEndVnode = oldCh[--oldEndIdx];\n    } else if (newStartVnode == null) {\n      newStartVnode = newCh[++newStartIdx];\n    } else if (newEndVnode == null) {\n      newEndVnode = newCh[--newEndIdx];\n    } else if (isSameVnode(oldStartVnode, newStartVnode, isInitialRender)) {\n      patch(oldStartVnode, newStartVnode, isInitialRender);\n      oldStartVnode = oldCh[++oldStartIdx];\n      newStartVnode = newCh[++newStartIdx];\n    } else if (isSameVnode(oldEndVnode, newEndVnode, isInitialRender)) {\n      patch(oldEndVnode, newEndVnode, isInitialRender);\n      oldEndVnode = oldCh[--oldEndIdx];\n      newEndVnode = newCh[--newEndIdx];\n    } else if (isSameVnode(oldStartVnode, newEndVnode, isInitialRender)) {\n      if (BUILD10.slotRelocation && (oldStartVnode.$tag$ === \"slot\" || newEndVnode.$tag$ === \"slot\")) {\n        putBackInOriginalLocation(oldStartVnode.$elm$.parentNode, false);\n      }\n      patch(oldStartVnode, newEndVnode, isInitialRender);\n      insertBefore(parentElm, oldStartVnode.$elm$, oldEndVnode.$elm$.nextSibling);\n      oldStartVnode = oldCh[++oldStartIdx];\n      newEndVnode = newCh[--newEndIdx];\n    } else if (isSameVnode(oldEndVnode, newStartVnode, isInitialRender)) {\n      if (BUILD10.slotRelocation && (oldStartVnode.$tag$ === \"slot\" || newEndVnode.$tag$ === \"slot\")) {\n        putBackInOriginalLocation(oldEndVnode.$elm$.parentNode, false);\n      }\n      patch(oldEndVnode, newStartVnode, isInitialRender);\n      insertBefore(parentElm, oldEndVnode.$elm$, oldStartVnode.$elm$);\n      oldEndVnode = oldCh[--oldEndIdx];\n      newStartVnode = newCh[++newStartIdx];\n    } else {\n      idxInOld = -1;\n      if (BUILD10.vdomKey) {\n        for (i2 = oldStartIdx; i2 <= oldEndIdx; ++i2) {\n          if (oldCh[i2] && oldCh[i2].$key$ !== null && oldCh[i2].$key$ === newStartVnode.$key$) {\n            idxInOld = i2;\n            break;\n          }\n        }\n      }\n      if (BUILD10.vdomKey && idxInOld >= 0) {\n        elmToMove = oldCh[idxInOld];\n        if (elmToMove.$tag$ !== newStartVnode.$tag$) {\n          node = createElm(oldCh && oldCh[newStartIdx], newVNode2, idxInOld, parentElm);\n        } else {\n          patch(elmToMove, newStartVnode, isInitialRender);\n          oldCh[idxInOld] = void 0;\n          node = elmToMove.$elm$;\n        }\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        node = createElm(oldCh && oldCh[newStartIdx], newVNode2, newStartIdx, parentElm);\n        newStartVnode = newCh[++newStartIdx];\n      }\n      if (node) {\n        if (BUILD10.slotRelocation) {\n          insertBefore(parentReferenceNode(oldStartVnode.$elm$), node, referenceNode(oldStartVnode.$elm$));\n        } else {\n          insertBefore(oldStartVnode.$elm$.parentNode, node, oldStartVnode.$elm$);\n        }\n      }\n    }\n  }\n  if (oldStartIdx > oldEndIdx) {\n    addVnodes(\n      parentElm,\n      newCh[newEndIdx + 1] == null ? null : newCh[newEndIdx + 1].$elm$,\n      newVNode2,\n      newCh,\n      newStartIdx,\n      newEndIdx\n    );\n  } else if (BUILD10.updatable && newStartIdx > newEndIdx) {\n    removeVnodes(oldCh, oldStartIdx, oldEndIdx);\n  }\n};\nvar isSameVnode = (leftVNode, rightVNode, isInitialRender = false) => {\n  if (leftVNode.$tag$ === rightVNode.$tag$) {\n    if (BUILD10.slotRelocation && leftVNode.$tag$ === \"slot\") {\n      if (\n        // The component gets hydrated and no VDOM has been initialized.\n        // Here the comparison can't happen as $name$ property is not set for `leftNode`.\n        \"$nodeId$\" in leftVNode && isInitialRender && // `leftNode` is not from type HTMLComment which would cause many\n        // hydration comments to be removed\n        leftVNode.$elm$.nodeType !== 8\n      ) {\n        return false;\n      }\n      return leftVNode.$name$ === rightVNode.$name$;\n    }\n    if (BUILD10.vdomKey && !isInitialRender) {\n      return leftVNode.$key$ === rightVNode.$key$;\n    }\n    return true;\n  }\n  return false;\n};\nvar referenceNode = (node) => {\n  return node && node[\"s-ol\"] || node;\n};\nvar parentReferenceNode = (node) => (node[\"s-ol\"] ? node[\"s-ol\"] : node).parentNode;\nvar patch = (oldVNode, newVNode2, isInitialRender = false) => {\n  const elm = newVNode2.$elm$ = oldVNode.$elm$;\n  const oldChildren = oldVNode.$children$;\n  const newChildren = newVNode2.$children$;\n  const tag = newVNode2.$tag$;\n  const text = newVNode2.$text$;\n  let defaultHolder;\n  if (!BUILD10.vdomText || text === null) {\n    if (BUILD10.svg) {\n      isSvgMode = tag === \"svg\" ? true : tag === \"foreignObject\" ? false : isSvgMode;\n    }\n    if (BUILD10.vdomAttribute || BUILD10.reflect) {\n      if (BUILD10.slot && tag === \"slot\" && !useNativeShadowDom) {\n        if (BUILD10.experimentalSlotFixes && oldVNode.$name$ !== newVNode2.$name$) {\n          newVNode2.$elm$[\"s-sn\"] = newVNode2.$name$ || \"\";\n          relocateToHostRoot(newVNode2.$elm$.parentElement);\n        }\n      } else {\n        updateElement(oldVNode, newVNode2, isSvgMode);\n      }\n    }\n    if (BUILD10.updatable && oldChildren !== null && newChildren !== null) {\n      updateChildren(elm, oldChildren, newVNode2, newChildren, isInitialRender);\n    } else if (newChildren !== null) {\n      if (BUILD10.updatable && BUILD10.vdomText && oldVNode.$text$ !== null) {\n        elm.textContent = \"\";\n      }\n      addVnodes(elm, null, newVNode2, newChildren, 0, newChildren.length - 1);\n    } else if (\n      // don't do this on initial render as it can cause non-hydrated content to be removed\n      !isInitialRender && BUILD10.updatable && oldChildren !== null\n    ) {\n      removeVnodes(oldChildren, 0, oldChildren.length - 1);\n    }\n    if (BUILD10.svg && isSvgMode && tag === \"svg\") {\n      isSvgMode = false;\n    }\n  } else if (BUILD10.vdomText && BUILD10.slotRelocation && (defaultHolder = elm[\"s-cr\"])) {\n    defaultHolder.parentNode.textContent = text;\n  } else if (BUILD10.vdomText && oldVNode.$text$ !== text) {\n    elm.data = text;\n  }\n};\nvar updateFallbackSlotVisibility = (elm) => {\n  const childNodes = elm.__childNodes || elm.childNodes;\n  for (const childNode of childNodes) {\n    if (childNode.nodeType === 1 /* ElementNode */) {\n      if (childNode[\"s-sr\"]) {\n        const slotName = childNode[\"s-sn\"];\n        childNode.hidden = false;\n        for (const siblingNode of childNodes) {\n          if (siblingNode !== childNode) {\n            if (siblingNode[\"s-hn\"] !== childNode[\"s-hn\"] || slotName !== \"\") {\n              if (siblingNode.nodeType === 1 /* ElementNode */ && (slotName === siblingNode.getAttribute(\"slot\") || slotName === siblingNode[\"s-sn\"]) || siblingNode.nodeType === 3 /* TextNode */ && slotName === siblingNode[\"s-sn\"]) {\n                childNode.hidden = true;\n                break;\n              }\n            } else if (slotName === siblingNode[\"s-sn\"]) {\n              if (siblingNode.nodeType === 1 /* ElementNode */ || siblingNode.nodeType === 3 /* TextNode */ && siblingNode.textContent.trim() !== \"\") {\n                childNode.hidden = true;\n                break;\n              }\n            }\n          }\n        }\n      }\n      updateFallbackSlotVisibility(childNode);\n    }\n  }\n};\nvar relocateNodes = [];\nvar markSlotContentForRelocation = (elm) => {\n  let node;\n  let hostContentNodes;\n  let j;\n  const children = elm.__childNodes || elm.childNodes;\n  for (const childNode of children) {\n    if (childNode[\"s-sr\"] && (node = childNode[\"s-cr\"]) && node.parentNode) {\n      hostContentNodes = node.parentNode.__childNodes || node.parentNode.childNodes;\n      const slotName = childNode[\"s-sn\"];\n      for (j = hostContentNodes.length - 1; j >= 0; j--) {\n        node = hostContentNodes[j];\n        if (!node[\"s-cn\"] && !node[\"s-nr\"] && node[\"s-hn\"] !== childNode[\"s-hn\"] && (!BUILD10.experimentalSlotFixes || !node[\"s-sh\"] || node[\"s-sh\"] !== childNode[\"s-hn\"])) {\n          if (isNodeLocatedInSlot(node, slotName)) {\n            let relocateNodeData = relocateNodes.find((r) => r.$nodeToRelocate$ === node);\n            checkSlotFallbackVisibility = true;\n            node[\"s-sn\"] = node[\"s-sn\"] || slotName;\n            if (relocateNodeData) {\n              relocateNodeData.$nodeToRelocate$[\"s-sh\"] = childNode[\"s-hn\"];\n              relocateNodeData.$slotRefNode$ = childNode;\n            } else {\n              node[\"s-sh\"] = childNode[\"s-hn\"];\n              relocateNodes.push({\n                $slotRefNode$: childNode,\n                $nodeToRelocate$: node\n              });\n            }\n            if (node[\"s-sr\"]) {\n              relocateNodes.map((relocateNode) => {\n                if (isNodeLocatedInSlot(relocateNode.$nodeToRelocate$, node[\"s-sn\"])) {\n                  relocateNodeData = relocateNodes.find((r) => r.$nodeToRelocate$ === node);\n                  if (relocateNodeData && !relocateNode.$slotRefNode$) {\n                    relocateNode.$slotRefNode$ = relocateNodeData.$slotRefNode$;\n                  }\n                }\n              });\n            }\n          } else if (!relocateNodes.some((r) => r.$nodeToRelocate$ === node)) {\n            relocateNodes.push({\n              $nodeToRelocate$: node\n            });\n          }\n        }\n      }\n    }\n    if (childNode.nodeType === 1 /* ElementNode */) {\n      markSlotContentForRelocation(childNode);\n    }\n  }\n};\nvar isNodeLocatedInSlot = (nodeToRelocate, slotName) => {\n  if (nodeToRelocate.nodeType === 1 /* ElementNode */) {\n    if (nodeToRelocate.getAttribute(\"slot\") === null && slotName === \"\") {\n      return true;\n    }\n    if (nodeToRelocate.getAttribute(\"slot\") === slotName) {\n      return true;\n    }\n    return false;\n  }\n  if (nodeToRelocate[\"s-sn\"] === slotName) {\n    return true;\n  }\n  return slotName === \"\";\n};\nvar nullifyVNodeRefs = (vNode) => {\n  if (BUILD10.vdomRef) {\n    vNode.$attrs$ && vNode.$attrs$.ref && vNode.$attrs$.ref(null);\n    vNode.$children$ && vNode.$children$.map(nullifyVNodeRefs);\n  }\n};\nvar insertBefore = (parent, newNode, reference) => {\n  const inserted = parent == null ? void 0 : parent.insertBefore(newNode, reference);\n  if (BUILD10.scoped) {\n    updateElementScopeIds(newNode, parent);\n  }\n  return inserted;\n};\nvar findScopeIds = (element) => {\n  const scopeIds = [];\n  if (element) {\n    scopeIds.push(\n      ...element[\"s-scs\"] || [],\n      element[\"s-si\"],\n      element[\"s-sc\"],\n      ...findScopeIds(element.parentElement)\n    );\n  }\n  return scopeIds;\n};\nvar updateElementScopeIds = (element, parent, iterateChildNodes = false) => {\n  var _a;\n  if (element && parent && element.nodeType === 1 /* ElementNode */) {\n    const scopeIds = new Set(findScopeIds(parent).filter(Boolean));\n    if (scopeIds.size) {\n      (_a = element.classList) == null ? void 0 : _a.add(...element[\"s-scs\"] = Array.from(scopeIds));\n      if (element[\"s-ol\"] || iterateChildNodes) {\n        for (const childNode of Array.from(element.__childNodes || element.childNodes)) {\n          updateElementScopeIds(childNode, element, true);\n        }\n      }\n    }\n  }\n};\nvar renderVdom = (hostRef, renderFnResults, isInitialLoad = false) => {\n  var _a, _b, _c, _d, _e;\n  const hostElm = hostRef.$hostElement$;\n  const cmpMeta = hostRef.$cmpMeta$;\n  const oldVNode = hostRef.$vnode$ || newVNode(null, null);\n  const rootVnode = isHost(renderFnResults) ? renderFnResults : h(null, null, renderFnResults);\n  hostTagName = hostElm.tagName;\n  if (BUILD10.isDev && Array.isArray(renderFnResults) && renderFnResults.some(isHost)) {\n    throw new Error(`The <Host> must be the single root component.\nLooks like the render() function of \"${hostTagName.toLowerCase()}\" is returning an array that contains the <Host>.\n\nThe render() function should look like this instead:\n\nrender() {\n  // Do not return an array\n  return (\n    <Host>{content}</Host>\n  );\n}\n  `);\n  }\n  if (BUILD10.reflect && cmpMeta.$attrsToReflect$) {\n    rootVnode.$attrs$ = rootVnode.$attrs$ || {};\n    cmpMeta.$attrsToReflect$.map(\n      ([propName, attribute]) => rootVnode.$attrs$[attribute] = hostElm[propName]\n    );\n  }\n  if (isInitialLoad && rootVnode.$attrs$) {\n    for (const key of Object.keys(rootVnode.$attrs$)) {\n      if (hostElm.hasAttribute(key) && ![\"key\", \"ref\", \"style\", \"class\"].includes(key)) {\n        rootVnode.$attrs$[key] = hostElm[key];\n      }\n    }\n  }\n  rootVnode.$tag$ = null;\n  rootVnode.$flags$ |= 4 /* isHost */;\n  hostRef.$vnode$ = rootVnode;\n  rootVnode.$elm$ = oldVNode.$elm$ = BUILD10.shadowDom ? hostElm.shadowRoot || hostElm : hostElm;\n  if (BUILD10.scoped || BUILD10.shadowDom) {\n    scopeId = hostElm[\"s-sc\"];\n  }\n  useNativeShadowDom = supportsShadow && (cmpMeta.$flags$ & 1 /* shadowDomEncapsulation */) !== 0;\n  if (BUILD10.slotRelocation) {\n    contentRef = hostElm[\"s-cr\"];\n    checkSlotFallbackVisibility = false;\n  }\n  patch(oldVNode, rootVnode, isInitialLoad);\n  if (BUILD10.slotRelocation) {\n    plt.$flags$ |= 1 /* isTmpDisconnected */;\n    if (checkSlotRelocate) {\n      markSlotContentForRelocation(rootVnode.$elm$);\n      for (const relocateData of relocateNodes) {\n        const nodeToRelocate = relocateData.$nodeToRelocate$;\n        if (!nodeToRelocate[\"s-ol\"]) {\n          const orgLocationNode = BUILD10.isDebug || BUILD10.hydrateServerSide ? originalLocationDebugNode(nodeToRelocate) : doc.createTextNode(\"\");\n          orgLocationNode[\"s-nr\"] = nodeToRelocate;\n          insertBefore(nodeToRelocate.parentNode, nodeToRelocate[\"s-ol\"] = orgLocationNode, nodeToRelocate);\n        }\n      }\n      for (const relocateData of relocateNodes) {\n        const nodeToRelocate = relocateData.$nodeToRelocate$;\n        const slotRefNode = relocateData.$slotRefNode$;\n        if (slotRefNode) {\n          const parentNodeRef = slotRefNode.parentNode;\n          let insertBeforeNode = slotRefNode.nextSibling;\n          if (!BUILD10.experimentalSlotFixes || insertBeforeNode && insertBeforeNode.nodeType === 1 /* ElementNode */) {\n            let orgLocationNode = (_a = nodeToRelocate[\"s-ol\"]) == null ? void 0 : _a.previousSibling;\n            while (orgLocationNode) {\n              let refNode = (_b = orgLocationNode[\"s-nr\"]) != null ? _b : null;\n              if (refNode && refNode[\"s-sn\"] === nodeToRelocate[\"s-sn\"] && parentNodeRef === refNode.parentNode) {\n                refNode = refNode.nextSibling;\n                while (refNode === nodeToRelocate || (refNode == null ? void 0 : refNode[\"s-sr\"])) {\n                  refNode = refNode == null ? void 0 : refNode.nextSibling;\n                }\n                if (!refNode || !refNode[\"s-nr\"]) {\n                  insertBeforeNode = refNode;\n                  break;\n                }\n              }\n              orgLocationNode = orgLocationNode.previousSibling;\n            }\n          }\n          if (!insertBeforeNode && parentNodeRef !== nodeToRelocate.parentNode || nodeToRelocate.nextSibling !== insertBeforeNode) {\n            if (nodeToRelocate !== insertBeforeNode) {\n              if (!BUILD10.experimentalSlotFixes && !nodeToRelocate[\"s-hn\"] && nodeToRelocate[\"s-ol\"]) {\n                nodeToRelocate[\"s-hn\"] = nodeToRelocate[\"s-ol\"].parentNode.nodeName;\n              }\n              insertBefore(parentNodeRef, nodeToRelocate, insertBeforeNode);\n              if (nodeToRelocate.nodeType === 1 /* ElementNode */) {\n                nodeToRelocate.hidden = (_c = nodeToRelocate[\"s-ih\"]) != null ? _c : false;\n              }\n            }\n          }\n          nodeToRelocate && typeof slotRefNode[\"s-rf\"] === \"function\" && slotRefNode[\"s-rf\"](nodeToRelocate);\n        } else {\n          if (nodeToRelocate.nodeType === 1 /* ElementNode */) {\n            if (isInitialLoad) {\n              nodeToRelocate[\"s-ih\"] = (_d = nodeToRelocate.hidden) != null ? _d : false;\n            }\n            nodeToRelocate.hidden = true;\n          }\n        }\n      }\n    }\n    if (checkSlotFallbackVisibility) {\n      updateFallbackSlotVisibility(rootVnode.$elm$);\n    }\n    plt.$flags$ &= ~1 /* isTmpDisconnected */;\n    relocateNodes.length = 0;\n  }\n  if (BUILD10.experimentalScopedSlotChanges && cmpMeta.$flags$ & 2 /* scopedCssEncapsulation */) {\n    const children = rootVnode.$elm$.__childNodes || rootVnode.$elm$.childNodes;\n    for (const childNode of children) {\n      if (childNode[\"s-hn\"] !== hostTagName && !childNode[\"s-sh\"]) {\n        if (isInitialLoad && childNode[\"s-ih\"] == null) {\n          childNode[\"s-ih\"] = (_e = childNode.hidden) != null ? _e : false;\n        }\n        childNode.hidden = true;\n      }\n    }\n  }\n  contentRef = void 0;\n};\nvar slotReferenceDebugNode = (slotVNode) => doc.createComment(\n  `<slot${slotVNode.$name$ ? ' name=\"' + slotVNode.$name$ + '\"' : \"\"}> (host=${hostTagName.toLowerCase()})`\n);\nvar originalLocationDebugNode = (nodeToRelocate) => doc.createComment(\n  `org-location for ` + (nodeToRelocate.localName ? `<${nodeToRelocate.localName}> (host=${nodeToRelocate[\"s-hn\"]})` : `[${nodeToRelocate.textContent}]`)\n);\n\n// src/runtime/dom-extras.ts\nvar patchPseudoShadowDom = (hostElementPrototype) => {\n  patchCloneNode(hostElementPrototype);\n  patchSlotAppendChild(hostElementPrototype);\n  patchSlotAppend(hostElementPrototype);\n  patchSlotPrepend(hostElementPrototype);\n  patchSlotInsertAdjacentElement(hostElementPrototype);\n  patchSlotInsertAdjacentHTML(hostElementPrototype);\n  patchSlotInsertAdjacentText(hostElementPrototype);\n  patchTextContent(hostElementPrototype);\n  patchChildSlotNodes(hostElementPrototype);\n  patchSlotRemoveChild(hostElementPrototype);\n};\nvar patchCloneNode = (HostElementPrototype) => {\n  const orgCloneNode = HostElementPrototype.cloneNode;\n  HostElementPrototype.cloneNode = function(deep) {\n    const srcNode = this;\n    const isShadowDom = BUILD11.shadowDom ? srcNode.shadowRoot && supportsShadow : false;\n    const clonedNode = orgCloneNode.call(srcNode, isShadowDom ? deep : false);\n    if (BUILD11.slot && !isShadowDom && deep) {\n      let i2 = 0;\n      let slotted, nonStencilNode;\n      const stencilPrivates = [\n        \"s-id\",\n        \"s-cr\",\n        \"s-lr\",\n        \"s-rc\",\n        \"s-sc\",\n        \"s-p\",\n        \"s-cn\",\n        \"s-sr\",\n        \"s-sn\",\n        \"s-hn\",\n        \"s-ol\",\n        \"s-nr\",\n        \"s-si\",\n        \"s-rf\",\n        \"s-scs\"\n      ];\n      const childNodes = this.__childNodes || this.childNodes;\n      for (; i2 < childNodes.length; i2++) {\n        slotted = childNodes[i2][\"s-nr\"];\n        nonStencilNode = stencilPrivates.every((privateField) => !childNodes[i2][privateField]);\n        if (slotted) {\n          if (BUILD11.appendChildSlotFix && clonedNode.__appendChild) {\n            clonedNode.__appendChild(slotted.cloneNode(true));\n          } else {\n            clonedNode.appendChild(slotted.cloneNode(true));\n          }\n        }\n        if (nonStencilNode) {\n          clonedNode.appendChild(childNodes[i2].cloneNode(true));\n        }\n      }\n    }\n    return clonedNode;\n  };\n};\nvar patchSlotAppendChild = (HostElementPrototype) => {\n  HostElementPrototype.__appendChild = HostElementPrototype.appendChild;\n  HostElementPrototype.appendChild = function(newChild) {\n    const slotName = newChild[\"s-sn\"] = getSlotName(newChild);\n    const slotNode = getHostSlotNode(this.__childNodes || this.childNodes, slotName, this.tagName);\n    if (slotNode) {\n      addSlotRelocateNode(newChild, slotNode);\n      const slotChildNodes = getHostSlotChildNodes(slotNode, slotName);\n      const appendAfter = slotChildNodes[slotChildNodes.length - 1];\n      const insertedNode = insertBefore(appendAfter.parentNode, newChild, appendAfter.nextSibling);\n      updateFallbackSlotVisibility(this);\n      return insertedNode;\n    }\n    return this.__appendChild(newChild);\n  };\n};\nvar patchSlotRemoveChild = (ElementPrototype) => {\n  ElementPrototype.__removeChild = ElementPrototype.removeChild;\n  ElementPrototype.removeChild = function(toRemove) {\n    if (toRemove && typeof toRemove[\"s-sn\"] !== \"undefined\") {\n      const childNodes = this.__childNodes || this.childNodes;\n      const slotNode = getHostSlotNode(childNodes, toRemove[\"s-sn\"], this.tagName);\n      if (slotNode && toRemove.isConnected) {\n        toRemove.remove();\n        updateFallbackSlotVisibility(this);\n        return;\n      }\n    }\n    return this.__removeChild(toRemove);\n  };\n};\nvar patchSlotPrepend = (HostElementPrototype) => {\n  HostElementPrototype.__prepend = HostElementPrototype.prepend;\n  HostElementPrototype.prepend = function(...newChildren) {\n    newChildren.forEach((newChild) => {\n      if (typeof newChild === \"string\") {\n        newChild = this.ownerDocument.createTextNode(newChild);\n      }\n      const slotName = newChild[\"s-sn\"] = getSlotName(newChild);\n      const childNodes = this.__childNodes || this.childNodes;\n      const slotNode = getHostSlotNode(childNodes, slotName, this.tagName);\n      if (slotNode) {\n        addSlotRelocateNode(newChild, slotNode, true);\n        const slotChildNodes = getHostSlotChildNodes(slotNode, slotName);\n        const appendAfter = slotChildNodes[0];\n        return insertBefore(appendAfter.parentNode, newChild, appendAfter.nextSibling);\n      }\n      if (newChild.nodeType === 1 && !!newChild.getAttribute(\"slot\")) {\n        newChild.hidden = true;\n      }\n      return HostElementPrototype.__prepend(newChild);\n    });\n  };\n};\nvar patchSlotAppend = (HostElementPrototype) => {\n  HostElementPrototype.__append = HostElementPrototype.append;\n  HostElementPrototype.append = function(...newChildren) {\n    newChildren.forEach((newChild) => {\n      if (typeof newChild === \"string\") {\n        newChild = this.ownerDocument.createTextNode(newChild);\n      }\n      this.appendChild(newChild);\n    });\n  };\n};\nvar patchSlotInsertAdjacentHTML = (HostElementPrototype) => {\n  const originalInsertAdjacentHtml = HostElementPrototype.insertAdjacentHTML;\n  HostElementPrototype.insertAdjacentHTML = function(position, text) {\n    if (position !== \"afterbegin\" && position !== \"beforeend\") {\n      return originalInsertAdjacentHtml.call(this, position, text);\n    }\n    const container = this.ownerDocument.createElement(\"_\");\n    let node;\n    container.innerHTML = text;\n    if (position === \"afterbegin\") {\n      while (node = container.firstChild) {\n        this.prepend(node);\n      }\n    } else if (position === \"beforeend\") {\n      while (node = container.firstChild) {\n        this.append(node);\n      }\n    }\n  };\n};\nvar patchSlotInsertAdjacentText = (HostElementPrototype) => {\n  HostElementPrototype.insertAdjacentText = function(position, text) {\n    this.insertAdjacentHTML(position, text);\n  };\n};\nvar patchSlotInsertAdjacentElement = (HostElementPrototype) => {\n  const originalInsertAdjacentElement = HostElementPrototype.insertAdjacentElement;\n  HostElementPrototype.insertAdjacentElement = function(position, element) {\n    if (position !== \"afterbegin\" && position !== \"beforeend\") {\n      return originalInsertAdjacentElement.call(this, position, element);\n    }\n    if (position === \"afterbegin\") {\n      this.prepend(element);\n      return element;\n    } else if (position === \"beforeend\") {\n      this.append(element);\n      return element;\n    }\n    return element;\n  };\n};\nvar patchTextContent = (hostElementPrototype) => {\n  let descriptor = globalThis.Node && Object.getOwnPropertyDescriptor(Node.prototype, \"textContent\");\n  if (!descriptor) {\n    descriptor = Object.getOwnPropertyDescriptor(hostElementPrototype, \"textContent\");\n  }\n  if (descriptor) Object.defineProperty(hostElementPrototype, \"__textContent\", descriptor);\n  Object.defineProperty(hostElementPrototype, \"textContent\", {\n    get: function() {\n      let text = \"\";\n      const childNodes = this.__childNodes ? this.childNodes : getSlottedChildNodes(this.childNodes);\n      childNodes.forEach((node) => text += node.textContent || \"\");\n      return text;\n    },\n    set: function(value) {\n      const childNodes = this.__childNodes ? this.childNodes : getSlottedChildNodes(this.childNodes);\n      childNodes.forEach((node) => {\n        if (node[\"s-ol\"]) node[\"s-ol\"].remove();\n        node.remove();\n      });\n      this.insertAdjacentHTML(\"beforeend\", value);\n    }\n  });\n};\nvar patchChildSlotNodes = (elm) => {\n  class FakeNodeList extends Array {\n    item(n) {\n      return this[n];\n    }\n  }\n  let childNodesFn = globalThis.Node && Object.getOwnPropertyDescriptor(Node.prototype, \"childNodes\");\n  if (!childNodesFn) {\n    childNodesFn = Object.getOwnPropertyDescriptor(elm, \"childNodes\");\n  }\n  if (childNodesFn) Object.defineProperty(elm, \"__childNodes\", childNodesFn);\n  let childrenFn = Object.getOwnPropertyDescriptor(Element.prototype, \"children\");\n  if (!childrenFn) {\n    childrenFn = Object.getOwnPropertyDescriptor(elm, \"children\");\n  }\n  if (childrenFn) Object.defineProperty(elm, \"__children\", childrenFn);\n  Object.defineProperty(elm, \"children\", {\n    get() {\n      return this.childNodes.filter((n) => n.nodeType === 1);\n    }\n  });\n  Object.defineProperty(elm, \"childElementCount\", {\n    get() {\n      return this.children.length;\n    }\n  });\n  if (!childNodesFn) return;\n  Object.defineProperty(elm, \"childNodes\", {\n    get() {\n      var _a, _b;\n      if (!plt.$flags$ || !((_a = getHostRef(this)) == null ? void 0 : _a.$flags$) || (plt.$flags$ & 1 /* isTmpDisconnected */) === 0 && ((_b = getHostRef(this)) == null ? void 0 : _b.$flags$) & 2 /* hasRendered */) {\n        const result = new FakeNodeList();\n        const nodes = getSlottedChildNodes(this.__childNodes);\n        result.push(...nodes);\n        return result;\n      }\n      return FakeNodeList.from(this.__childNodes);\n    }\n  });\n};\nvar addSlotRelocateNode = (newChild, slotNode, prepend, position) => {\n  let slottedNodeLocation;\n  if (newChild[\"s-ol\"] && newChild[\"s-ol\"].isConnected) {\n    slottedNodeLocation = newChild[\"s-ol\"];\n  } else {\n    slottedNodeLocation = document.createTextNode(\"\");\n    slottedNodeLocation[\"s-nr\"] = newChild;\n  }\n  if (!slotNode[\"s-cr\"] || !slotNode[\"s-cr\"].parentNode) return;\n  const parent = slotNode[\"s-cr\"].parentNode;\n  const appendMethod = prepend ? parent.__prepend || parent.prepend : parent.__appendChild || parent.appendChild;\n  if (typeof position !== \"undefined\") {\n    if (BUILD11.hydrateClientSide) {\n      slottedNodeLocation[\"s-oo\"] = position;\n      const childNodes = parent.__childNodes || parent.childNodes;\n      const slotRelocateNodes = [slottedNodeLocation];\n      childNodes.forEach((n) => {\n        if (n[\"s-nr\"]) slotRelocateNodes.push(n);\n      });\n      slotRelocateNodes.sort((a, b) => {\n        if (!a[\"s-oo\"] || a[\"s-oo\"] < b[\"s-oo\"]) return -1;\n        else if (!b[\"s-oo\"] || b[\"s-oo\"] < a[\"s-oo\"]) return 1;\n        return 0;\n      });\n      slotRelocateNodes.forEach((n) => appendMethod.call(parent, n));\n    }\n  } else {\n    appendMethod.call(parent, slottedNodeLocation);\n  }\n  newChild[\"s-ol\"] = slottedNodeLocation;\n  newChild[\"s-sh\"] = slotNode[\"s-hn\"];\n};\nvar getSlottedChildNodes = (childNodes) => {\n  const result = [];\n  for (let i2 = 0; i2 < childNodes.length; i2++) {\n    const slottedNode = childNodes[i2][\"s-nr\"];\n    if (slottedNode && slottedNode.isConnected) {\n      result.push(slottedNode);\n    }\n  }\n  return result;\n};\nvar getSlotName = (node) => node[\"s-sn\"] || node.nodeType === 1 && node.getAttribute(\"slot\") || \"\";\nvar getHostSlotNode = (childNodes, slotName, hostName) => {\n  let i2 = 0;\n  let childNode;\n  for (; i2 < childNodes.length; i2++) {\n    childNode = childNodes[i2];\n    if (childNode[\"s-sr\"] && childNode[\"s-sn\"] === slotName && childNode[\"s-hn\"] === hostName) {\n      return childNode;\n    }\n    childNode = getHostSlotNode(childNode.childNodes, slotName, hostName);\n    if (childNode) {\n      return childNode;\n    }\n  }\n  return null;\n};\nvar getHostSlotChildNodes = (n, slotName) => {\n  const childNodes = [n];\n  while ((n = n.nextSibling) && n[\"s-sn\"] === slotName) {\n    childNodes.push(n);\n  }\n  return childNodes;\n};\n\n// src/runtime/profile.ts\nimport { BUILD as BUILD12 } from \"@stencil/core/internal/app-data\";\nvar i = 0;\nvar createTime = (fnName, tagName = \"\") => {\n  if (BUILD12.profile && performance.mark) {\n    const key = `st:${fnName}:${tagName}:${i++}`;\n    performance.mark(key);\n    return () => performance.measure(`[Stencil] ${fnName}() <${tagName}>`, key);\n  } else {\n    return () => {\n      return;\n    };\n  }\n};\nvar uniqueTime = (key, measureText) => {\n  if (BUILD12.profile && performance.mark) {\n    if (performance.getEntriesByName(key, \"mark\").length === 0) {\n      performance.mark(key);\n    }\n    return () => {\n      if (performance.getEntriesByName(measureText, \"measure\").length === 0) {\n        performance.measure(measureText, key);\n      }\n    };\n  } else {\n    return () => {\n      return;\n    };\n  }\n};\nvar inspect = (ref) => {\n  const hostRef = getHostRef(ref);\n  if (!hostRef) {\n    return void 0;\n  }\n  const flags = hostRef.$flags$;\n  const hostElement = hostRef.$hostElement$;\n  return {\n    renderCount: hostRef.$renderCount$,\n    flags: {\n      hasRendered: !!(flags & 2 /* hasRendered */),\n      hasConnected: !!(flags & 1 /* hasConnected */),\n      isWaitingForChildren: !!(flags & 4 /* isWaitingForChildren */),\n      isConstructingInstance: !!(flags & 8 /* isConstructingInstance */),\n      isQueuedForUpdate: !!(flags & 16 /* isQueuedForUpdate */),\n      hasInitializedComponent: !!(flags & 32 /* hasInitializedComponent */),\n      hasLoadedComponent: !!(flags & 64 /* hasLoadedComponent */),\n      isWatchReady: !!(flags & 128 /* isWatchReady */),\n      isListenReady: !!(flags & 256 /* isListenReady */),\n      needsRerender: !!(flags & 512 /* needsRerender */)\n    },\n    instanceValues: hostRef.$instanceValues$,\n    ancestorComponent: hostRef.$ancestorComponent$,\n    hostElement,\n    lazyInstance: hostRef.$lazyInstance$,\n    vnode: hostRef.$vnode$,\n    modeName: hostRef.$modeName$,\n    onReadyPromise: hostRef.$onReadyPromise$,\n    onReadyResolve: hostRef.$onReadyResolve$,\n    onInstancePromise: hostRef.$onInstancePromise$,\n    onInstanceResolve: hostRef.$onInstanceResolve$,\n    onRenderResolve: hostRef.$onRenderResolve$,\n    queuedListeners: hostRef.$queuedListeners$,\n    rmListeners: hostRef.$rmListeners$,\n    [\"s-id\"]: hostElement[\"s-id\"],\n    [\"s-cr\"]: hostElement[\"s-cr\"],\n    [\"s-lr\"]: hostElement[\"s-lr\"],\n    [\"s-p\"]: hostElement[\"s-p\"],\n    [\"s-rc\"]: hostElement[\"s-rc\"],\n    [\"s-sc\"]: hostElement[\"s-sc\"]\n  };\n};\nvar installDevTools = () => {\n  if (BUILD12.devTools) {\n    const stencil = win.stencil = win.stencil || {};\n    const originalInspect = stencil.inspect;\n    stencil.inspect = (ref) => {\n      let result = inspect(ref);\n      if (!result && typeof originalInspect === \"function\") {\n        result = originalInspect(ref);\n      }\n      return result;\n    };\n  }\n};\n\n// src/runtime/client-hydrate.ts\nvar initializeClientHydrate = (hostElm, tagName, hostId, hostRef) => {\n  const endHydrate = createTime(\"hydrateClient\", tagName);\n  const shadowRoot = hostElm.shadowRoot;\n  const childRenderNodes = [];\n  const slotNodes = [];\n  const slottedNodes = [];\n  const shadowRootNodes = BUILD13.shadowDom && shadowRoot ? [] : null;\n  const vnode = newVNode(tagName, null);\n  vnode.$elm$ = hostElm;\n  if (!plt.$orgLocNodes$) {\n    initializeDocumentHydrate(doc.body, plt.$orgLocNodes$ = /* @__PURE__ */ new Map());\n  }\n  hostElm[HYDRATE_ID] = hostId;\n  hostElm.removeAttribute(HYDRATE_ID);\n  hostRef.$vnode$ = clientHydrate(\n    vnode,\n    childRenderNodes,\n    slotNodes,\n    shadowRootNodes,\n    hostElm,\n    hostElm,\n    hostId,\n    slottedNodes\n  );\n  let crIndex = 0;\n  const crLength = childRenderNodes.length;\n  let childRenderNode;\n  for (crIndex; crIndex < crLength; crIndex++) {\n    childRenderNode = childRenderNodes[crIndex];\n    const orgLocationId = childRenderNode.$hostId$ + \".\" + childRenderNode.$nodeId$;\n    const orgLocationNode = plt.$orgLocNodes$.get(orgLocationId);\n    const node = childRenderNode.$elm$;\n    if (!shadowRoot) {\n      node[\"s-hn\"] = tagName.toUpperCase();\n      if (childRenderNode.$tag$ === \"slot\") {\n        node[\"s-cr\"] = hostElm[\"s-cr\"];\n      }\n    }\n    if (orgLocationNode && orgLocationNode.isConnected) {\n      if (shadowRoot && orgLocationNode[\"s-en\"] === \"\") {\n        orgLocationNode.parentNode.insertBefore(node, orgLocationNode.nextSibling);\n      }\n      orgLocationNode.parentNode.removeChild(orgLocationNode);\n      if (!shadowRoot) {\n        node[\"s-oo\"] = parseInt(childRenderNode.$nodeId$);\n      }\n    }\n    plt.$orgLocNodes$.delete(orgLocationId);\n  }\n  const hosts = [];\n  let snIndex = 0;\n  const snLen = slottedNodes.length;\n  let slotGroup;\n  let snGroupIdx;\n  let snGroupLen;\n  let slottedItem;\n  for (snIndex; snIndex < snLen; snIndex++) {\n    slotGroup = slottedNodes[snIndex];\n    if (!slotGroup || !slotGroup.length) continue;\n    snGroupLen = slotGroup.length;\n    snGroupIdx = 0;\n    for (snGroupIdx; snGroupIdx < snGroupLen; snGroupIdx++) {\n      slottedItem = slotGroup[snGroupIdx];\n      if (!hosts[slottedItem.hostId]) {\n        hosts[slottedItem.hostId] = plt.$orgLocNodes$.get(slottedItem.hostId);\n      }\n      if (!hosts[slottedItem.hostId]) continue;\n      const hostEle = hosts[slottedItem.hostId];\n      if (!hostEle.shadowRoot || !shadowRoot) {\n        slottedItem.slot[\"s-cr\"] = hostEle[\"s-cr\"];\n        if (!slottedItem.slot[\"s-cr\"] && hostEle.shadowRoot) {\n          slottedItem.slot[\"s-cr\"] = hostEle;\n        } else {\n          const hostChildren = hostEle.__childNodes || hostEle.childNodes;\n          slottedItem.slot[\"s-cr\"] = hostChildren[0];\n        }\n        addSlotRelocateNode(slottedItem.node, slottedItem.slot, false, slottedItem.node[\"s-oo\"]);\n      }\n      if (hostEle.shadowRoot && slottedItem.node.parentElement !== hostEle) {\n        hostEle.appendChild(slottedItem.node);\n      }\n    }\n  }\n  if (BUILD13.shadowDom && shadowRoot) {\n    let rnIdex = 0;\n    const rnLen = shadowRootNodes.length;\n    for (rnIdex; rnIdex < rnLen; rnIdex++) {\n      shadowRoot.appendChild(shadowRootNodes[rnIdex]);\n    }\n    Array.from(hostElm.childNodes).forEach((node) => {\n      if (node.nodeType === 8 /* CommentNode */ && typeof node[\"s-sn\"] !== \"string\") {\n        node.parentNode.removeChild(node);\n      }\n    });\n  }\n  hostRef.$hostElement$ = hostElm;\n  endHydrate();\n};\nvar clientHydrate = (parentVNode, childRenderNodes, slotNodes, shadowRootNodes, hostElm, node, hostId, slottedNodes = []) => {\n  let childNodeType;\n  let childIdSplt;\n  let childVNode;\n  let i2;\n  const scopeId2 = hostElm[\"s-sc\"];\n  if (node.nodeType === 1 /* ElementNode */) {\n    childNodeType = node.getAttribute(HYDRATE_CHILD_ID);\n    if (childNodeType) {\n      childIdSplt = childNodeType.split(\".\");\n      if (childIdSplt[0] === hostId || childIdSplt[0] === \"0\") {\n        childVNode = createSimpleVNode({\n          $flags$: 0,\n          $hostId$: childIdSplt[0],\n          $nodeId$: childIdSplt[1],\n          $depth$: childIdSplt[2],\n          $index$: childIdSplt[3],\n          $tag$: node.tagName.toLowerCase(),\n          $elm$: node,\n          // If we don't add the initial classes to the VNode, the first `vdom-render.ts` reconciliation will fail:\n          // client side changes before componentDidLoad will be ignored, `set-accessor.ts` will just take the element's initial classes\n          $attrs$: { class: node.className }\n        });\n        childRenderNodes.push(childVNode);\n        node.removeAttribute(HYDRATE_CHILD_ID);\n        if (!parentVNode.$children$) {\n          parentVNode.$children$ = [];\n        }\n        const slotName = childVNode.$elm$.getAttribute(\"s-sn\");\n        if (typeof slotName === \"string\") {\n          if (childVNode.$tag$ === \"slot-fb\") {\n            addSlot(\n              slotName,\n              childIdSplt[2],\n              childVNode,\n              node,\n              parentVNode,\n              childRenderNodes,\n              slotNodes,\n              shadowRootNodes,\n              slottedNodes\n            );\n          }\n          childVNode.$elm$[\"s-sn\"] = slotName;\n          childVNode.$elm$.removeAttribute(\"s-sn\");\n        }\n        if (childVNode.$index$ !== void 0) {\n          parentVNode.$children$[childVNode.$index$] = childVNode;\n        }\n        if (scopeId2) node[\"s-si\"] = scopeId2;\n        parentVNode = childVNode;\n        if (shadowRootNodes && childVNode.$depth$ === \"0\") {\n          shadowRootNodes[childVNode.$index$] = childVNode.$elm$;\n        }\n      }\n    }\n    if (node.shadowRoot) {\n      for (i2 = node.shadowRoot.childNodes.length - 1; i2 >= 0; i2--) {\n        clientHydrate(\n          parentVNode,\n          childRenderNodes,\n          slotNodes,\n          shadowRootNodes,\n          hostElm,\n          node.shadowRoot.childNodes[i2],\n          hostId,\n          slottedNodes\n        );\n      }\n    }\n    const nonShadowNodes = node.__childNodes || node.childNodes;\n    for (i2 = nonShadowNodes.length - 1; i2 >= 0; i2--) {\n      clientHydrate(\n        parentVNode,\n        childRenderNodes,\n        slotNodes,\n        shadowRootNodes,\n        hostElm,\n        nonShadowNodes[i2],\n        hostId,\n        slottedNodes\n      );\n    }\n  } else if (node.nodeType === 8 /* CommentNode */) {\n    childIdSplt = node.nodeValue.split(\".\");\n    if (childIdSplt[1] === hostId || childIdSplt[1] === \"0\") {\n      childNodeType = childIdSplt[0];\n      childVNode = createSimpleVNode({\n        $hostId$: childIdSplt[1],\n        $nodeId$: childIdSplt[2],\n        $depth$: childIdSplt[3],\n        $index$: childIdSplt[4] || \"0\",\n        $elm$: node,\n        $attrs$: null,\n        $children$: null,\n        $key$: null,\n        $name$: null,\n        $tag$: null,\n        $text$: null\n      });\n      if (childNodeType === TEXT_NODE_ID) {\n        childVNode.$elm$ = node.nextSibling;\n        if (childVNode.$elm$ && childVNode.$elm$.nodeType === 3 /* TextNode */) {\n          childVNode.$text$ = childVNode.$elm$.textContent;\n          childRenderNodes.push(childVNode);\n          node.remove();\n          if (hostId === childVNode.$hostId$) {\n            if (!parentVNode.$children$) {\n              parentVNode.$children$ = [];\n            }\n            parentVNode.$children$[childVNode.$index$] = childVNode;\n          }\n          if (shadowRootNodes && childVNode.$depth$ === \"0\") {\n            shadowRootNodes[childVNode.$index$] = childVNode.$elm$;\n          }\n        }\n      } else if (childNodeType === COMMENT_NODE_ID) {\n        childVNode.$elm$ = node.nextSibling;\n        if (childVNode.$elm$ && childVNode.$elm$.nodeType === 8 /* CommentNode */) {\n          childRenderNodes.push(childVNode);\n          node.remove();\n        }\n      } else if (childVNode.$hostId$ === hostId) {\n        if (childNodeType === SLOT_NODE_ID) {\n          childVNode.$tag$ = \"slot\";\n          const slotName = node[\"s-sn\"] = childVNode.$name$ = childIdSplt[5] || \"\";\n          addSlot(\n            slotName,\n            childIdSplt[2],\n            childVNode,\n            node,\n            parentVNode,\n            childRenderNodes,\n            slotNodes,\n            shadowRootNodes,\n            slottedNodes\n          );\n        } else if (childNodeType === CONTENT_REF_ID) {\n          if (BUILD13.shadowDom && shadowRootNodes) {\n            node.remove();\n          } else if (BUILD13.slotRelocation) {\n            hostElm[\"s-cr\"] = node;\n            node[\"s-cn\"] = true;\n          }\n        }\n      }\n    }\n  } else if (parentVNode && parentVNode.$tag$ === \"style\") {\n    const vnode = newVNode(null, node.textContent);\n    vnode.$elm$ = node;\n    vnode.$index$ = \"0\";\n    parentVNode.$children$ = [vnode];\n  }\n  return parentVNode;\n};\nvar initializeDocumentHydrate = (node, orgLocNodes) => {\n  if (node.nodeType === 1 /* ElementNode */) {\n    const componentId = node[HYDRATE_ID] || node.getAttribute(HYDRATE_ID);\n    if (componentId) {\n      orgLocNodes.set(componentId, node);\n    }\n    let i2 = 0;\n    if (node.shadowRoot) {\n      for (; i2 < node.shadowRoot.childNodes.length; i2++) {\n        initializeDocumentHydrate(node.shadowRoot.childNodes[i2], orgLocNodes);\n      }\n    }\n    const nonShadowNodes = node.__childNodes || node.childNodes;\n    for (i2 = 0; i2 < nonShadowNodes.length; i2++) {\n      initializeDocumentHydrate(nonShadowNodes[i2], orgLocNodes);\n    }\n  } else if (node.nodeType === 8 /* CommentNode */) {\n    const childIdSplt = node.nodeValue.split(\".\");\n    if (childIdSplt[0] === ORG_LOCATION_ID) {\n      orgLocNodes.set(childIdSplt[1] + \".\" + childIdSplt[2], node);\n      node.nodeValue = \"\";\n      node[\"s-en\"] = childIdSplt[3];\n    }\n  }\n};\nvar createSimpleVNode = (vnode) => {\n  const defaultVNode = {\n    $flags$: 0,\n    $hostId$: null,\n    $nodeId$: null,\n    $depth$: null,\n    $index$: \"0\",\n    $elm$: null,\n    $attrs$: null,\n    $children$: null,\n    $key$: null,\n    $name$: null,\n    $tag$: null,\n    $text$: null\n  };\n  return { ...defaultVNode, ...vnode };\n};\nfunction addSlot(slotName, slotId, childVNode, node, parentVNode, childRenderNodes, slotNodes, shadowRootNodes, slottedNodes) {\n  node[\"s-sr\"] = true;\n  const parentNodeId = (parentVNode == null ? void 0 : parentVNode.$elm$) ? parentVNode.$elm$[\"s-id\"] || parentVNode.$elm$.getAttribute(\"s-id\") : \"\";\n  if (BUILD13.shadowDom && shadowRootNodes) {\n    const slot = childVNode.$elm$ = doc.createElement(childVNode.$tag$);\n    if (childVNode.$name$) {\n      childVNode.$elm$.setAttribute(\"name\", slotName);\n    }\n    if (parentNodeId && parentNodeId !== childVNode.$hostId$) {\n      parentVNode.$elm$.insertBefore(slot, parentVNode.$elm$.children[0]);\n    } else {\n      node.parentNode.insertBefore(childVNode.$elm$, node);\n    }\n    addSlottedNodes(slottedNodes, slotId, slotName, node, childVNode.$hostId$);\n    node.remove();\n    if (childVNode.$depth$ === \"0\") {\n      shadowRootNodes[childVNode.$index$] = childVNode.$elm$;\n    }\n  } else {\n    const slot = childVNode.$elm$;\n    const shouldMove = parentNodeId && parentNodeId !== childVNode.$hostId$ && parentVNode.$elm$.shadowRoot;\n    addSlottedNodes(slottedNodes, slotId, slotName, node, shouldMove ? parentNodeId : childVNode.$hostId$);\n    if (shouldMove) {\n      parentVNode.$elm$.insertBefore(slot, parentVNode.$elm$.children[0]);\n    }\n    childRenderNodes.push(childVNode);\n  }\n  slotNodes.push(childVNode);\n  if (!parentVNode.$children$) {\n    parentVNode.$children$ = [];\n  }\n  parentVNode.$children$[childVNode.$index$] = childVNode;\n}\nvar addSlottedNodes = (slottedNodes, slotNodeId, slotName, slotNode, hostId) => {\n  let slottedNode = slotNode.nextSibling;\n  slottedNodes[slotNodeId] = slottedNodes[slotNodeId] || [];\n  while (slottedNode && ((slottedNode[\"getAttribute\"] && slottedNode.getAttribute(\"slot\") || slottedNode[\"s-sn\"]) === slotName || slotName === \"\" && !slottedNode[\"s-sn\"] && (slottedNode.nodeType === 8 /* CommentNode */ && slottedNode.nodeValue.indexOf(\".\") !== 1 || slottedNode.nodeType === 3 /* TextNode */))) {\n    slottedNode[\"s-sn\"] = slotName;\n    slottedNodes[slotNodeId].push({ slot: slotNode, node: slottedNode, hostId });\n    slottedNode = slottedNode.nextSibling;\n  }\n};\n\n// src/runtime/initialize-component.ts\nimport { BUILD as BUILD21 } from \"@stencil/core/internal/app-data\";\n\n// src/runtime/mode.ts\nvar computeMode = (elm) => modeResolutionChain.map((h2) => h2(elm)).find((m) => !!m);\nvar setMode = (handler) => modeResolutionChain.push(handler);\nvar getMode = (ref) => getHostRef(ref).$modeName$;\n\n// src/runtime/proxy-component.ts\nimport { BUILD as BUILD20 } from \"@stencil/core/internal/app-data\";\n\n// src/runtime/set-value.ts\nimport { BUILD as BUILD19 } from \"@stencil/core/internal/app-data\";\n\n// src/runtime/parse-property-value.ts\nimport { BUILD as BUILD14 } from \"@stencil/core/internal/app-data\";\nvar parsePropertyValue = (propValue, propType) => {\n  if (propValue != null && !isComplexType(propValue)) {\n    if (BUILD14.propBoolean && propType & 4 /* Boolean */) {\n      return propValue === \"false\" ? false : propValue === \"\" || !!propValue;\n    }\n    if (BUILD14.propNumber && propType & 2 /* Number */) {\n      return parseFloat(propValue);\n    }\n    if (BUILD14.propString && propType & 1 /* String */) {\n      return String(propValue);\n    }\n    return propValue;\n  }\n  return propValue;\n};\n\n// src/runtime/update-component.ts\nimport { BUILD as BUILD18, NAMESPACE } from \"@stencil/core/internal/app-data\";\n\n// src/runtime/event-emitter.ts\nimport { BUILD as BUILD16 } from \"@stencil/core/internal/app-data\";\n\n// src/runtime/element.ts\nimport { BUILD as BUILD15 } from \"@stencil/core/internal/app-data\";\nvar getElement = (ref) => BUILD15.lazyLoad ? getHostRef(ref).$hostElement$ : ref;\n\n// src/runtime/event-emitter.ts\nvar createEvent = (ref, name, flags) => {\n  const elm = getElement(ref);\n  return {\n    emit: (detail) => {\n      if (BUILD16.isDev && !elm.isConnected) {\n        consoleDevWarn(`The \"${name}\" event was emitted, but the dispatcher node is no longer connected to the dom.`);\n      }\n      return emitEvent(elm, name, {\n        bubbles: !!(flags & 4 /* Bubbles */),\n        composed: !!(flags & 2 /* Composed */),\n        cancelable: !!(flags & 1 /* Cancellable */),\n        detail\n      });\n    }\n  };\n};\nvar emitEvent = (elm, name, opts) => {\n  const ev = plt.ce(name, opts);\n  elm.dispatchEvent(ev);\n  return ev;\n};\n\n// src/runtime/styles.ts\nimport { BUILD as BUILD17 } from \"@stencil/core/internal/app-data\";\nvar rootAppliedStyles = /* @__PURE__ */ new WeakMap();\nvar registerStyle = (scopeId2, cssText, allowCS) => {\n  let style = styles.get(scopeId2);\n  if (supportsConstructableStylesheets && allowCS) {\n    style = style || new CSSStyleSheet();\n    if (typeof style === \"string\") {\n      style = cssText;\n    } else {\n      style.replaceSync(cssText);\n    }\n  } else {\n    style = cssText;\n  }\n  styles.set(scopeId2, style);\n};\nvar addStyle = (styleContainerNode, cmpMeta, mode) => {\n  var _a;\n  const scopeId2 = getScopeId(cmpMeta, mode);\n  const style = styles.get(scopeId2);\n  if (!BUILD17.attachStyles) {\n    return scopeId2;\n  }\n  styleContainerNode = styleContainerNode.nodeType === 11 /* DocumentFragment */ ? styleContainerNode : doc;\n  if (style) {\n    if (typeof style === \"string\") {\n      styleContainerNode = styleContainerNode.head || styleContainerNode;\n      let appliedStyles = rootAppliedStyles.get(styleContainerNode);\n      let styleElm;\n      if (!appliedStyles) {\n        rootAppliedStyles.set(styleContainerNode, appliedStyles = /* @__PURE__ */ new Set());\n      }\n      if (!appliedStyles.has(scopeId2)) {\n        if (BUILD17.hydrateClientSide && styleContainerNode.host && (styleElm = styleContainerNode.querySelector(`[${HYDRATED_STYLE_ID}=\"${scopeId2}\"]`))) {\n          styleElm.innerHTML = style;\n        } else {\n          styleElm = doc.createElement(\"style\");\n          styleElm.innerHTML = style;\n          const nonce = (_a = plt.$nonce$) != null ? _a : queryNonceMetaTagContent(doc);\n          if (nonce != null) {\n            styleElm.setAttribute(\"nonce\", nonce);\n          }\n          if ((BUILD17.hydrateServerSide || BUILD17.hotModuleReplacement) && cmpMeta.$flags$ & 2 /* scopedCssEncapsulation */) {\n            styleElm.setAttribute(HYDRATED_STYLE_ID, scopeId2);\n          }\n          if (!(cmpMeta.$flags$ & 1 /* shadowDomEncapsulation */)) {\n            if (styleContainerNode.nodeName === \"HEAD\") {\n              const preconnectLinks = styleContainerNode.querySelectorAll(\"link[rel=preconnect]\");\n              const referenceNode2 = preconnectLinks.length > 0 ? preconnectLinks[preconnectLinks.length - 1].nextSibling : styleContainerNode.querySelector(\"style\");\n              styleContainerNode.insertBefore(styleElm, referenceNode2);\n            } else if (\"host\" in styleContainerNode) {\n              if (supportsConstructableStylesheets) {\n                const stylesheet = new CSSStyleSheet();\n                stylesheet.replaceSync(style);\n                styleContainerNode.adoptedStyleSheets = [stylesheet, ...styleContainerNode.adoptedStyleSheets];\n              } else {\n                const existingStyleContainer = styleContainerNode.querySelector(\"style\");\n                if (existingStyleContainer) {\n                  existingStyleContainer.innerHTML = style + existingStyleContainer.innerHTML;\n                } else {\n                  styleContainerNode.prepend(styleElm);\n                }\n              }\n            } else {\n              styleContainerNode.append(styleElm);\n            }\n          }\n          if (cmpMeta.$flags$ & 1 /* shadowDomEncapsulation */ && styleContainerNode.nodeName !== \"HEAD\") {\n            styleContainerNode.insertBefore(styleElm, null);\n          }\n        }\n        if (cmpMeta.$flags$ & 4 /* hasSlotRelocation */) {\n          styleElm.innerHTML += SLOT_FB_CSS;\n        }\n        if (appliedStyles) {\n          appliedStyles.add(scopeId2);\n        }\n      }\n    } else if (BUILD17.constructableCSS && !styleContainerNode.adoptedStyleSheets.includes(style)) {\n      styleContainerNode.adoptedStyleSheets = [...styleContainerNode.adoptedStyleSheets, style];\n    }\n  }\n  return scopeId2;\n};\nvar attachStyles = (hostRef) => {\n  const cmpMeta = hostRef.$cmpMeta$;\n  const elm = hostRef.$hostElement$;\n  const flags = cmpMeta.$flags$;\n  const endAttachStyles = createTime(\"attachStyles\", cmpMeta.$tagName$);\n  const scopeId2 = addStyle(\n    BUILD17.shadowDom && supportsShadow && elm.shadowRoot ? elm.shadowRoot : elm.getRootNode(),\n    cmpMeta,\n    hostRef.$modeName$\n  );\n  if ((BUILD17.shadowDom || BUILD17.scoped) && BUILD17.cssAnnotations && flags & 10 /* needsScopedEncapsulation */ && flags & 2 /* scopedCssEncapsulation */) {\n    elm[\"s-sc\"] = scopeId2;\n    elm.classList.add(scopeId2 + \"-h\");\n    if (BUILD17.scoped && flags & 2 /* scopedCssEncapsulation */) {\n      elm.classList.add(scopeId2 + \"-s\");\n    }\n  }\n  endAttachStyles();\n};\nvar getScopeId = (cmp, mode) => \"sc-\" + (BUILD17.mode && mode && cmp.$flags$ & 32 /* hasMode */ ? cmp.$tagName$ + \"-\" + mode : cmp.$tagName$);\n\n// src/runtime/update-component.ts\nvar attachToAncestor = (hostRef, ancestorComponent) => {\n  if (BUILD18.asyncLoading && ancestorComponent && !hostRef.$onRenderResolve$ && ancestorComponent[\"s-p\"]) {\n    ancestorComponent[\"s-p\"].push(new Promise((r) => hostRef.$onRenderResolve$ = r));\n  }\n};\nvar scheduleUpdate = (hostRef, isInitialLoad) => {\n  if (BUILD18.taskQueue && BUILD18.updatable) {\n    hostRef.$flags$ |= 16 /* isQueuedForUpdate */;\n  }\n  if (BUILD18.asyncLoading && hostRef.$flags$ & 4 /* isWaitingForChildren */) {\n    hostRef.$flags$ |= 512 /* needsRerender */;\n    return;\n  }\n  attachToAncestor(hostRef, hostRef.$ancestorComponent$);\n  const dispatch = () => dispatchHooks(hostRef, isInitialLoad);\n  return BUILD18.taskQueue ? writeTask(dispatch) : dispatch();\n};\nvar dispatchHooks = (hostRef, isInitialLoad) => {\n  const elm = hostRef.$hostElement$;\n  const endSchedule = createTime(\"scheduleUpdate\", hostRef.$cmpMeta$.$tagName$);\n  const instance = BUILD18.lazyLoad ? hostRef.$lazyInstance$ : elm;\n  if (!instance) {\n    throw new Error(\n      `Can't render component <${elm.tagName.toLowerCase()} /> with invalid Stencil runtime! Make sure this imported component is compiled with a \\`externalRuntime: true\\` flag. For more information, please refer to https://stenciljs.com/docs/custom-elements#externalruntime`\n    );\n  }\n  let maybePromise;\n  if (isInitialLoad) {\n    if (BUILD18.lazyLoad && BUILD18.hostListener) {\n      hostRef.$flags$ |= 256 /* isListenReady */;\n      if (hostRef.$queuedListeners$) {\n        hostRef.$queuedListeners$.map(([methodName, event]) => safeCall(instance, methodName, event));\n        hostRef.$queuedListeners$ = void 0;\n      }\n    }\n    emitLifecycleEvent(elm, \"componentWillLoad\");\n    if (BUILD18.cmpWillLoad) {\n      maybePromise = safeCall(instance, \"componentWillLoad\");\n    }\n  } else {\n    emitLifecycleEvent(elm, \"componentWillUpdate\");\n    if (BUILD18.cmpWillUpdate) {\n      maybePromise = safeCall(instance, \"componentWillUpdate\");\n    }\n  }\n  emitLifecycleEvent(elm, \"componentWillRender\");\n  if (BUILD18.cmpWillRender) {\n    maybePromise = enqueue(maybePromise, () => safeCall(instance, \"componentWillRender\"));\n  }\n  endSchedule();\n  return enqueue(maybePromise, () => updateComponent(hostRef, instance, isInitialLoad));\n};\nvar enqueue = (maybePromise, fn) => isPromisey(maybePromise) ? maybePromise.then(fn).catch((err2) => {\n  console.error(err2);\n  fn();\n}) : fn();\nvar isPromisey = (maybePromise) => maybePromise instanceof Promise || maybePromise && maybePromise.then && typeof maybePromise.then === \"function\";\nvar updateComponent = async (hostRef, instance, isInitialLoad) => {\n  var _a;\n  const elm = hostRef.$hostElement$;\n  const endUpdate = createTime(\"update\", hostRef.$cmpMeta$.$tagName$);\n  const rc = elm[\"s-rc\"];\n  if (BUILD18.style && isInitialLoad) {\n    attachStyles(hostRef);\n  }\n  const endRender = createTime(\"render\", hostRef.$cmpMeta$.$tagName$);\n  if (BUILD18.isDev) {\n    hostRef.$flags$ |= 1024 /* devOnRender */;\n  }\n  if (BUILD18.hydrateServerSide) {\n    await callRender(hostRef, instance, elm, isInitialLoad);\n  } else {\n    callRender(hostRef, instance, elm, isInitialLoad);\n  }\n  if (BUILD18.isDev) {\n    hostRef.$renderCount$ = hostRef.$renderCount$ === void 0 ? 1 : hostRef.$renderCount$ + 1;\n    hostRef.$flags$ &= ~1024 /* devOnRender */;\n  }\n  if (BUILD18.hydrateServerSide) {\n    try {\n      serverSideConnected(elm);\n      if (isInitialLoad) {\n        if (hostRef.$cmpMeta$.$flags$ & 1 /* shadowDomEncapsulation */) {\n          elm[\"s-en\"] = \"\";\n        } else if (hostRef.$cmpMeta$.$flags$ & 2 /* scopedCssEncapsulation */) {\n          elm[\"s-en\"] = \"c\";\n        }\n      }\n    } catch (e) {\n      consoleError(e, elm);\n    }\n  }\n  if (BUILD18.asyncLoading && rc) {\n    rc.map((cb) => cb());\n    elm[\"s-rc\"] = void 0;\n  }\n  endRender();\n  endUpdate();\n  if (BUILD18.asyncLoading) {\n    const childrenPromises = (_a = elm[\"s-p\"]) != null ? _a : [];\n    const postUpdate = () => postUpdateComponent(hostRef);\n    if (childrenPromises.length === 0) {\n      postUpdate();\n    } else {\n      Promise.all(childrenPromises).then(postUpdate);\n      hostRef.$flags$ |= 4 /* isWaitingForChildren */;\n      childrenPromises.length = 0;\n    }\n  } else {\n    postUpdateComponent(hostRef);\n  }\n};\nvar renderingRef = null;\nvar callRender = (hostRef, instance, elm, isInitialLoad) => {\n  const allRenderFn = BUILD18.allRenderFn ? true : false;\n  const lazyLoad = BUILD18.lazyLoad ? true : false;\n  const taskQueue = BUILD18.taskQueue ? true : false;\n  const updatable = BUILD18.updatable ? true : false;\n  try {\n    renderingRef = instance;\n    instance = allRenderFn ? instance.render() : instance.render && instance.render();\n    if (updatable && taskQueue) {\n      hostRef.$flags$ &= ~16 /* isQueuedForUpdate */;\n    }\n    if (updatable || lazyLoad) {\n      hostRef.$flags$ |= 2 /* hasRendered */;\n    }\n    if (BUILD18.hasRenderFn || BUILD18.reflect) {\n      if (BUILD18.vdomRender || BUILD18.reflect) {\n        if (BUILD18.hydrateServerSide) {\n          return Promise.resolve(instance).then((value) => renderVdom(hostRef, value, isInitialLoad));\n        } else {\n          renderVdom(hostRef, instance, isInitialLoad);\n        }\n      } else {\n        const shadowRoot = elm.shadowRoot;\n        if (hostRef.$cmpMeta$.$flags$ & 1 /* shadowDomEncapsulation */) {\n          shadowRoot.textContent = instance;\n        } else {\n          elm.textContent = instance;\n        }\n      }\n    }\n  } catch (e) {\n    consoleError(e, hostRef.$hostElement$);\n  }\n  renderingRef = null;\n  return null;\n};\nvar getRenderingRef = () => renderingRef;\nvar postUpdateComponent = (hostRef) => {\n  const tagName = hostRef.$cmpMeta$.$tagName$;\n  const elm = hostRef.$hostElement$;\n  const endPostUpdate = createTime(\"postUpdate\", tagName);\n  const instance = BUILD18.lazyLoad ? hostRef.$lazyInstance$ : elm;\n  const ancestorComponent = hostRef.$ancestorComponent$;\n  if (BUILD18.cmpDidRender) {\n    if (BUILD18.isDev) {\n      hostRef.$flags$ |= 1024 /* devOnRender */;\n    }\n    safeCall(instance, \"componentDidRender\");\n    if (BUILD18.isDev) {\n      hostRef.$flags$ &= ~1024 /* devOnRender */;\n    }\n  }\n  emitLifecycleEvent(elm, \"componentDidRender\");\n  if (!(hostRef.$flags$ & 64 /* hasLoadedComponent */)) {\n    hostRef.$flags$ |= 64 /* hasLoadedComponent */;\n    if (BUILD18.asyncLoading && BUILD18.cssAnnotations) {\n      addHydratedFlag(elm);\n    }\n    if (BUILD18.cmpDidLoad) {\n      if (BUILD18.isDev) {\n        hostRef.$flags$ |= 2048 /* devOnDidLoad */;\n      }\n      safeCall(instance, \"componentDidLoad\");\n      if (BUILD18.isDev) {\n        hostRef.$flags$ &= ~2048 /* devOnDidLoad */;\n      }\n    }\n    emitLifecycleEvent(elm, \"componentDidLoad\");\n    endPostUpdate();\n    if (BUILD18.asyncLoading) {\n      hostRef.$onReadyResolve$(elm);\n      if (!ancestorComponent) {\n        appDidLoad(tagName);\n      }\n    }\n  } else {\n    if (BUILD18.cmpDidUpdate) {\n      if (BUILD18.isDev) {\n        hostRef.$flags$ |= 1024 /* devOnRender */;\n      }\n      safeCall(instance, \"componentDidUpdate\");\n      if (BUILD18.isDev) {\n        hostRef.$flags$ &= ~1024 /* devOnRender */;\n      }\n    }\n    emitLifecycleEvent(elm, \"componentDidUpdate\");\n    endPostUpdate();\n  }\n  if (BUILD18.method && BUILD18.lazyLoad) {\n    hostRef.$onInstanceResolve$(elm);\n  }\n  if (BUILD18.asyncLoading) {\n    if (hostRef.$onRenderResolve$) {\n      hostRef.$onRenderResolve$();\n      hostRef.$onRenderResolve$ = void 0;\n    }\n    if (hostRef.$flags$ & 512 /* needsRerender */) {\n      nextTick(() => scheduleUpdate(hostRef, false));\n    }\n    hostRef.$flags$ &= ~(4 /* isWaitingForChildren */ | 512 /* needsRerender */);\n  }\n};\nvar forceUpdate = (ref) => {\n  if (BUILD18.updatable && (Build.isBrowser || Build.isTesting)) {\n    const hostRef = getHostRef(ref);\n    const isConnected = hostRef.$hostElement$.isConnected;\n    if (isConnected && (hostRef.$flags$ & (2 /* hasRendered */ | 16 /* isQueuedForUpdate */)) === 2 /* hasRendered */) {\n      scheduleUpdate(hostRef, false);\n    }\n    return isConnected;\n  }\n  return false;\n};\nvar appDidLoad = (who) => {\n  if (BUILD18.cssAnnotations) {\n    addHydratedFlag(doc.documentElement);\n  }\n  if (BUILD18.asyncQueue) {\n    plt.$flags$ |= 2 /* appLoaded */;\n  }\n  nextTick(() => emitEvent(win, \"appload\", { detail: { namespace: NAMESPACE } }));\n  if (BUILD18.profile && performance.measure) {\n    performance.measure(`[Stencil] ${NAMESPACE} initial load (by ${who})`, \"st:app:start\");\n  }\n};\nvar safeCall = (instance, method, arg) => {\n  if (instance && instance[method]) {\n    try {\n      return instance[method](arg);\n    } catch (e) {\n      consoleError(e);\n    }\n  }\n  return void 0;\n};\nvar emitLifecycleEvent = (elm, lifecycleName) => {\n  if (BUILD18.lifecycleDOMEvents) {\n    emitEvent(elm, \"stencil_\" + lifecycleName, {\n      bubbles: true,\n      composed: true,\n      detail: {\n        namespace: NAMESPACE\n      }\n    });\n  }\n};\nvar addHydratedFlag = (elm) => {\n  var _a, _b;\n  return BUILD18.hydratedClass ? elm.classList.add((_a = BUILD18.hydratedSelectorName) != null ? _a : \"hydrated\") : BUILD18.hydratedAttribute ? elm.setAttribute((_b = BUILD18.hydratedSelectorName) != null ? _b : \"hydrated\", \"\") : void 0;\n};\nvar serverSideConnected = (elm) => {\n  const children = elm.children;\n  if (children != null) {\n    for (let i2 = 0, ii = children.length; i2 < ii; i2++) {\n      const childElm = children[i2];\n      if (typeof childElm.connectedCallback === \"function\") {\n        childElm.connectedCallback();\n      }\n      serverSideConnected(childElm);\n    }\n  }\n};\n\n// src/runtime/set-value.ts\nvar getValue = (ref, propName) => getHostRef(ref).$instanceValues$.get(propName);\nvar setValue = (ref, propName, newVal, cmpMeta) => {\n  const hostRef = getHostRef(ref);\n  if (BUILD19.lazyLoad && !hostRef) {\n    throw new Error(\n      `Couldn't find host element for \"${cmpMeta.$tagName$}\" as it is unknown to this Stencil runtime. This usually happens when integrating a 3rd party Stencil component with another Stencil component or application. Please reach out to the maintainers of the 3rd party Stencil component or report this on the Stencil Discord server (https://chat.stenciljs.com) or comment on this similar [GitHub issue](https://github.com/ionic-team/stencil/issues/5457).`\n    );\n  }\n  const elm = BUILD19.lazyLoad ? hostRef.$hostElement$ : ref;\n  const oldVal = hostRef.$instanceValues$.get(propName);\n  const flags = hostRef.$flags$;\n  const instance = BUILD19.lazyLoad ? hostRef.$lazyInstance$ : elm;\n  newVal = parsePropertyValue(newVal, cmpMeta.$members$[propName][0]);\n  const areBothNaN = Number.isNaN(oldVal) && Number.isNaN(newVal);\n  const didValueChange = newVal !== oldVal && !areBothNaN;\n  if ((!BUILD19.lazyLoad || !(flags & 8 /* isConstructingInstance */) || oldVal === void 0) && didValueChange) {\n    hostRef.$instanceValues$.set(propName, newVal);\n    if (BUILD19.isDev) {\n      if (hostRef.$flags$ & 1024 /* devOnRender */) {\n        consoleDevWarn(\n          `The state/prop \"${propName}\" changed during rendering. This can potentially lead to infinite-loops and other bugs.`,\n          \"\\nElement\",\n          elm,\n          \"\\nNew value\",\n          newVal,\n          \"\\nOld value\",\n          oldVal\n        );\n      } else if (hostRef.$flags$ & 2048 /* devOnDidLoad */) {\n        consoleDevWarn(\n          `The state/prop \"${propName}\" changed during \"componentDidLoad()\", this triggers extra re-renders, try to setup on \"componentWillLoad()\"`,\n          \"\\nElement\",\n          elm,\n          \"\\nNew value\",\n          newVal,\n          \"\\nOld value\",\n          oldVal\n        );\n      }\n    }\n    if (!BUILD19.lazyLoad || instance) {\n      if (BUILD19.watchCallback && cmpMeta.$watchers$ && flags & 128 /* isWatchReady */) {\n        const watchMethods = cmpMeta.$watchers$[propName];\n        if (watchMethods) {\n          watchMethods.map((watchMethodName) => {\n            try {\n              instance[watchMethodName](newVal, oldVal, propName);\n            } catch (e) {\n              consoleError(e, elm);\n            }\n          });\n        }\n      }\n      if (BUILD19.updatable && (flags & (2 /* hasRendered */ | 16 /* isQueuedForUpdate */)) === 2 /* hasRendered */) {\n        if (BUILD19.cmpShouldUpdate && instance.componentShouldUpdate) {\n          if (instance.componentShouldUpdate(newVal, oldVal, propName) === false) {\n            return;\n          }\n        }\n        scheduleUpdate(hostRef, false);\n      }\n    }\n  }\n};\n\n// src/runtime/proxy-component.ts\nvar proxyComponent = (Cstr, cmpMeta, flags) => {\n  var _a, _b;\n  const prototype = Cstr.prototype;\n  if (BUILD20.formAssociated && cmpMeta.$flags$ & 64 /* formAssociated */ && flags & 1 /* isElementConstructor */) {\n    FORM_ASSOCIATED_CUSTOM_ELEMENT_CALLBACKS.forEach((cbName) => {\n      const originalFormAssociatedCallback = prototype[cbName];\n      Object.defineProperty(prototype, cbName, {\n        value(...args) {\n          const hostRef = getHostRef(this);\n          const instance = BUILD20.lazyLoad ? hostRef.$lazyInstance$ : this;\n          if (!instance) {\n            hostRef.$onReadyPromise$.then((asyncInstance) => {\n              const cb = asyncInstance[cbName];\n              typeof cb === \"function\" && cb.call(asyncInstance, ...args);\n            });\n          } else {\n            const cb = BUILD20.lazyLoad ? instance[cbName] : originalFormAssociatedCallback;\n            typeof cb === \"function\" && cb.call(instance, ...args);\n          }\n        }\n      });\n    });\n  }\n  if (BUILD20.member && cmpMeta.$members$ || BUILD20.watchCallback && (cmpMeta.$watchers$ || Cstr.watchers)) {\n    if (BUILD20.watchCallback && Cstr.watchers && !cmpMeta.$watchers$) {\n      cmpMeta.$watchers$ = Cstr.watchers;\n    }\n    const members = Object.entries((_a = cmpMeta.$members$) != null ? _a : {});\n    members.map(([memberName, [memberFlags]]) => {\n      if ((BUILD20.prop || BUILD20.state) && (memberFlags & 31 /* Prop */ || (!BUILD20.lazyLoad || flags & 2 /* proxyState */) && memberFlags & 32 /* State */)) {\n        if ((memberFlags & 2048 /* Getter */) === 0) {\n          Object.defineProperty(prototype, memberName, {\n            get() {\n              return getValue(this, memberName);\n            },\n            set(newValue) {\n              if (BUILD20.isDev) {\n                const ref = getHostRef(this);\n                if (\n                  // we are proxying the instance (not element)\n                  (flags & 1 /* isElementConstructor */) === 0 && // the element is not constructing\n                  (ref && ref.$flags$ & 8 /* isConstructingInstance */) === 0 && // the member is a prop\n                  (memberFlags & 31 /* Prop */) !== 0 && // the member is not mutable\n                  (memberFlags & 1024 /* Mutable */) === 0\n                ) {\n                  consoleDevWarn(\n                    `@Prop() \"${memberName}\" on <${cmpMeta.$tagName$}> is immutable but was modified from within the component.\nMore information: https://stenciljs.com/docs/properties#prop-mutability`\n                  );\n                }\n              }\n              setValue(this, memberName, newValue, cmpMeta);\n            },\n            configurable: true,\n            enumerable: true\n          });\n        } else if (flags & 1 /* isElementConstructor */ && memberFlags & 2048 /* Getter */) {\n          if (BUILD20.lazyLoad) {\n            Object.defineProperty(prototype, memberName, {\n              get() {\n                const ref = getHostRef(this);\n                const instance = BUILD20.lazyLoad && ref ? ref.$lazyInstance$ : prototype;\n                if (!instance) return;\n                return instance[memberName];\n              },\n              configurable: true,\n              enumerable: true\n            });\n          }\n          if (memberFlags & 4096 /* Setter */) {\n            const origSetter = Object.getOwnPropertyDescriptor(prototype, memberName).set;\n            Object.defineProperty(prototype, memberName, {\n              set(newValue) {\n                const ref = getHostRef(this);\n                if (origSetter) {\n                  const currentValue = ref.$hostElement$[memberName];\n                  if (!ref.$instanceValues$.get(memberName) && currentValue) {\n                    ref.$instanceValues$.set(memberName, currentValue);\n                  }\n                  origSetter.apply(this, [parsePropertyValue(newValue, cmpMeta.$members$[memberName][0])]);\n                  setValue(this, memberName, ref.$hostElement$[memberName], cmpMeta);\n                  return;\n                }\n                if (!ref) return;\n                const setterSetVal = () => {\n                  const currentValue = ref.$lazyInstance$[memberName];\n                  if (!ref.$instanceValues$.get(memberName) && currentValue) {\n                    ref.$instanceValues$.set(memberName, currentValue);\n                  }\n                  ref.$lazyInstance$[memberName] = parsePropertyValue(newValue, cmpMeta.$members$[memberName][0]);\n                  setValue(this, memberName, ref.$lazyInstance$[memberName], cmpMeta);\n                };\n                if (ref.$lazyInstance$) {\n                  setterSetVal();\n                } else {\n                  ref.$onReadyPromise$.then(() => setterSetVal());\n                }\n              }\n            });\n          }\n        }\n      } else if (BUILD20.lazyLoad && BUILD20.method && flags & 1 /* isElementConstructor */ && memberFlags & 64 /* Method */) {\n        Object.defineProperty(prototype, memberName, {\n          value(...args) {\n            var _a2;\n            const ref = getHostRef(this);\n            return (_a2 = ref == null ? void 0 : ref.$onInstancePromise$) == null ? void 0 : _a2.then(() => {\n              var _a3;\n              return (_a3 = ref.$lazyInstance$) == null ? void 0 : _a3[memberName](...args);\n            });\n          }\n        });\n      }\n    });\n    if (BUILD20.observeAttribute && (!BUILD20.lazyLoad || flags & 1 /* isElementConstructor */)) {\n      const attrNameToPropName = /* @__PURE__ */ new Map();\n      prototype.attributeChangedCallback = function(attrName, oldValue, newValue) {\n        plt.jmp(() => {\n          var _a2;\n          const propName = attrNameToPropName.get(attrName);\n          if (this.hasOwnProperty(propName)) {\n            newValue = this[propName];\n            delete this[propName];\n          } else if (prototype.hasOwnProperty(propName) && typeof this[propName] === \"number\" && // cast type to number to avoid TS compiler issues\n          this[propName] == newValue) {\n            return;\n          } else if (propName == null) {\n            const hostRef = getHostRef(this);\n            const flags2 = hostRef == null ? void 0 : hostRef.$flags$;\n            if (flags2 && !(flags2 & 8 /* isConstructingInstance */) && flags2 & 128 /* isWatchReady */ && newValue !== oldValue) {\n              const elm = BUILD20.lazyLoad ? hostRef.$hostElement$ : this;\n              const instance = BUILD20.lazyLoad ? hostRef.$lazyInstance$ : elm;\n              const entry = (_a2 = cmpMeta.$watchers$) == null ? void 0 : _a2[attrName];\n              entry == null ? void 0 : entry.forEach((callbackName) => {\n                if (instance[callbackName] != null) {\n                  instance[callbackName].call(instance, newValue, oldValue, attrName);\n                }\n              });\n            }\n            return;\n          }\n          const propDesc = Object.getOwnPropertyDescriptor(prototype, propName);\n          if (!propDesc.get || !!propDesc.set) {\n            this[propName] = newValue === null && typeof this[propName] === \"boolean\" ? false : newValue;\n          }\n        });\n      };\n      Cstr.observedAttributes = Array.from(\n        /* @__PURE__ */ new Set([\n          ...Object.keys((_b = cmpMeta.$watchers$) != null ? _b : {}),\n          ...members.filter(([_, m]) => m[0] & 15 /* HasAttribute */).map(([propName, m]) => {\n            var _a2;\n            const attrName = m[1] || propName;\n            attrNameToPropName.set(attrName, propName);\n            if (BUILD20.reflect && m[0] & 512 /* ReflectAttr */) {\n              (_a2 = cmpMeta.$attrsToReflect$) == null ? void 0 : _a2.push([propName, attrName]);\n            }\n            return attrName;\n          })\n        ])\n      );\n    }\n  }\n  return Cstr;\n};\n\n// src/runtime/initialize-component.ts\nvar initializeComponent = async (elm, hostRef, cmpMeta, hmrVersionId) => {\n  let Cstr;\n  if ((hostRef.$flags$ & 32 /* hasInitializedComponent */) === 0) {\n    hostRef.$flags$ |= 32 /* hasInitializedComponent */;\n    const bundleId = cmpMeta.$lazyBundleId$;\n    if ((BUILD21.lazyLoad || BUILD21.hydrateClientSide) && bundleId) {\n      const CstrImport = loadModule(cmpMeta, hostRef, hmrVersionId);\n      if (CstrImport && \"then\" in CstrImport) {\n        const endLoad = uniqueTime(\n          `st:load:${cmpMeta.$tagName$}:${hostRef.$modeName$}`,\n          `[Stencil] Load module for <${cmpMeta.$tagName$}>`\n        );\n        Cstr = await CstrImport;\n        endLoad();\n      } else {\n        Cstr = CstrImport;\n      }\n      if (!Cstr) {\n        throw new Error(`Constructor for \"${cmpMeta.$tagName$}#${hostRef.$modeName$}\" was not found`);\n      }\n      if (BUILD21.member && !Cstr.isProxied) {\n        if (BUILD21.watchCallback) {\n          cmpMeta.$watchers$ = Cstr.watchers;\n        }\n        proxyComponent(Cstr, cmpMeta, 2 /* proxyState */);\n        Cstr.isProxied = true;\n      }\n      const endNewInstance = createTime(\"createInstance\", cmpMeta.$tagName$);\n      if (BUILD21.member) {\n        hostRef.$flags$ |= 8 /* isConstructingInstance */;\n      }\n      try {\n        new Cstr(hostRef);\n      } catch (e) {\n        consoleError(e);\n      }\n      if (BUILD21.member) {\n        hostRef.$flags$ &= ~8 /* isConstructingInstance */;\n      }\n      if (BUILD21.watchCallback) {\n        hostRef.$flags$ |= 128 /* isWatchReady */;\n      }\n      endNewInstance();\n      fireConnectedCallback(hostRef.$lazyInstance$);\n    } else {\n      Cstr = elm.constructor;\n      const cmpTag = elm.localName;\n      customElements.whenDefined(cmpTag).then(() => hostRef.$flags$ |= 128 /* isWatchReady */);\n    }\n    if (BUILD21.style && Cstr && Cstr.style) {\n      let style;\n      if (typeof Cstr.style === \"string\") {\n        style = Cstr.style;\n      } else if (BUILD21.mode && typeof Cstr.style !== \"string\") {\n        hostRef.$modeName$ = computeMode(elm);\n        if (hostRef.$modeName$) {\n          style = Cstr.style[hostRef.$modeName$];\n        }\n        if (BUILD21.hydrateServerSide && hostRef.$modeName$) {\n          elm.setAttribute(\"s-mode\", hostRef.$modeName$);\n        }\n      }\n      const scopeId2 = getScopeId(cmpMeta, hostRef.$modeName$);\n      if (!styles.has(scopeId2)) {\n        const endRegisterStyles = createTime(\"registerStyles\", cmpMeta.$tagName$);\n        if (!BUILD21.hydrateServerSide && BUILD21.shadowDom && // TODO(STENCIL-854): Remove code related to legacy shadowDomShim field\n        BUILD21.shadowDomShim && cmpMeta.$flags$ & 8 /* needsShadowDomShim */) {\n          style = await import(\"./shadow-css.js\").then((m) => m.scopeCss(style, scopeId2));\n        }\n        registerStyle(scopeId2, style, !!(cmpMeta.$flags$ & 1 /* shadowDomEncapsulation */));\n        endRegisterStyles();\n      }\n    }\n  }\n  const ancestorComponent = hostRef.$ancestorComponent$;\n  const schedule = () => scheduleUpdate(hostRef, true);\n  if (BUILD21.asyncLoading && ancestorComponent && ancestorComponent[\"s-rc\"]) {\n    ancestorComponent[\"s-rc\"].push(schedule);\n  } else {\n    schedule();\n  }\n};\nvar fireConnectedCallback = (instance) => {\n  if (BUILD21.lazyLoad && BUILD21.connectedCallback) {\n    safeCall(instance, \"connectedCallback\");\n  }\n};\n\n// src/runtime/connected-callback.ts\nvar connectedCallback = (elm) => {\n  if ((plt.$flags$ & 1 /* isTmpDisconnected */) === 0) {\n    const hostRef = getHostRef(elm);\n    const cmpMeta = hostRef.$cmpMeta$;\n    const endConnected = createTime(\"connectedCallback\", cmpMeta.$tagName$);\n    if (BUILD22.hostListenerTargetParent) {\n      addHostEventListeners(elm, hostRef, cmpMeta.$listeners$, true);\n    }\n    if (!(hostRef.$flags$ & 1 /* hasConnected */)) {\n      hostRef.$flags$ |= 1 /* hasConnected */;\n      let hostId;\n      if (BUILD22.hydrateClientSide) {\n        hostId = elm.getAttribute(HYDRATE_ID);\n        if (hostId) {\n          if (BUILD22.shadowDom && supportsShadow && cmpMeta.$flags$ & 1 /* shadowDomEncapsulation */) {\n            const scopeId2 = BUILD22.mode ? addStyle(elm.shadowRoot, cmpMeta, elm.getAttribute(\"s-mode\")) : addStyle(elm.shadowRoot, cmpMeta);\n            elm.classList.remove(scopeId2 + \"-h\", scopeId2 + \"-s\");\n          } else if (BUILD22.scoped && cmpMeta.$flags$ & 2 /* scopedCssEncapsulation */) {\n            const scopeId2 = getScopeId(cmpMeta, BUILD22.mode ? elm.getAttribute(\"s-mode\") : void 0);\n            elm[\"s-sc\"] = scopeId2;\n          }\n          initializeClientHydrate(elm, cmpMeta.$tagName$, hostId, hostRef);\n        }\n      }\n      if (BUILD22.slotRelocation && !hostId) {\n        if (BUILD22.hydrateServerSide || (BUILD22.slot || BUILD22.shadowDom) && // TODO(STENCIL-854): Remove code related to legacy shadowDomShim field\n        cmpMeta.$flags$ & (4 /* hasSlotRelocation */ | 8 /* needsShadowDomShim */)) {\n          setContentReference(elm);\n        }\n      }\n      if (BUILD22.asyncLoading) {\n        let ancestorComponent = elm;\n        while (ancestorComponent = ancestorComponent.parentNode || ancestorComponent.host) {\n          if (BUILD22.hydrateClientSide && ancestorComponent.nodeType === 1 /* ElementNode */ && ancestorComponent.hasAttribute(\"s-id\") && ancestorComponent[\"s-p\"] || ancestorComponent[\"s-p\"]) {\n            attachToAncestor(hostRef, hostRef.$ancestorComponent$ = ancestorComponent);\n            break;\n          }\n        }\n      }\n      if (BUILD22.prop && !BUILD22.hydrateServerSide && cmpMeta.$members$) {\n        Object.entries(cmpMeta.$members$).map(([memberName, [memberFlags]]) => {\n          if (memberFlags & 31 /* Prop */ && elm.hasOwnProperty(memberName)) {\n            const value = elm[memberName];\n            delete elm[memberName];\n            elm[memberName] = value;\n          }\n        });\n      }\n      if (BUILD22.initializeNextTick) {\n        nextTick(() => initializeComponent(elm, hostRef, cmpMeta));\n      } else {\n        initializeComponent(elm, hostRef, cmpMeta);\n      }\n    } else {\n      addHostEventListeners(elm, hostRef, cmpMeta.$listeners$, false);\n      if (hostRef == null ? void 0 : hostRef.$lazyInstance$) {\n        fireConnectedCallback(hostRef.$lazyInstance$);\n      } else if (hostRef == null ? void 0 : hostRef.$onReadyPromise$) {\n        hostRef.$onReadyPromise$.then(() => fireConnectedCallback(hostRef.$lazyInstance$));\n      }\n    }\n    endConnected();\n  }\n};\nvar setContentReference = (elm) => {\n  const contentRefElm = elm[\"s-cr\"] = doc.createComment(\n    BUILD22.isDebug ? `content-ref (host=${elm.localName})` : \"\"\n  );\n  contentRefElm[\"s-cn\"] = true;\n  insertBefore(elm, contentRefElm, elm.firstChild);\n};\n\n// src/runtime/disconnected-callback.ts\nimport { BUILD as BUILD23 } from \"@stencil/core/internal/app-data\";\nvar disconnectInstance = (instance) => {\n  if (BUILD23.lazyLoad && BUILD23.disconnectedCallback) {\n    safeCall(instance, \"disconnectedCallback\");\n  }\n  if (BUILD23.cmpDidUnload) {\n    safeCall(instance, \"componentDidUnload\");\n  }\n};\nvar disconnectedCallback = async (elm) => {\n  if ((plt.$flags$ & 1 /* isTmpDisconnected */) === 0) {\n    const hostRef = getHostRef(elm);\n    if (BUILD23.hostListener) {\n      if (hostRef.$rmListeners$) {\n        hostRef.$rmListeners$.map((rmListener) => rmListener());\n        hostRef.$rmListeners$ = void 0;\n      }\n    }\n    if (!BUILD23.lazyLoad) {\n      disconnectInstance(elm);\n    } else if (hostRef == null ? void 0 : hostRef.$lazyInstance$) {\n      disconnectInstance(hostRef.$lazyInstance$);\n    } else if (hostRef == null ? void 0 : hostRef.$onReadyPromise$) {\n      hostRef.$onReadyPromise$.then(() => disconnectInstance(hostRef.$lazyInstance$));\n    }\n  }\n};\n\n// src/runtime/bootstrap-custom-element.ts\nvar defineCustomElement = (Cstr, compactMeta) => {\n  customElements.define(compactMeta[1], proxyCustomElement(Cstr, compactMeta));\n};\nvar proxyCustomElement = (Cstr, compactMeta) => {\n  const cmpMeta = {\n    $flags$: compactMeta[0],\n    $tagName$: compactMeta[1]\n  };\n  if (BUILD24.member) {\n    cmpMeta.$members$ = compactMeta[2];\n  }\n  if (BUILD24.hostListener) {\n    cmpMeta.$listeners$ = compactMeta[3];\n  }\n  if (BUILD24.watchCallback) {\n    cmpMeta.$watchers$ = Cstr.$watchers$;\n  }\n  if (BUILD24.reflect) {\n    cmpMeta.$attrsToReflect$ = [];\n  }\n  if (BUILD24.shadowDom && !supportsShadow && cmpMeta.$flags$ & 1 /* shadowDomEncapsulation */) {\n    cmpMeta.$flags$ |= 8 /* needsShadowDomShim */;\n  }\n  if (BUILD24.experimentalSlotFixes) {\n    if (BUILD24.scoped && cmpMeta.$flags$ & 2 /* scopedCssEncapsulation */) {\n      patchPseudoShadowDom(Cstr.prototype);\n    }\n  } else {\n    if (BUILD24.slotChildNodesFix) {\n      patchChildSlotNodes(Cstr.prototype);\n    }\n    if (BUILD24.cloneNodeFix) {\n      patchCloneNode(Cstr.prototype);\n    }\n    if (BUILD24.appendChildSlotFix) {\n      patchSlotAppendChild(Cstr.prototype);\n    }\n    if (BUILD24.scopedSlotTextContentFix && cmpMeta.$flags$ & 2 /* scopedCssEncapsulation */) {\n      patchTextContent(Cstr.prototype);\n    }\n  }\n  const originalConnectedCallback = Cstr.prototype.connectedCallback;\n  const originalDisconnectedCallback = Cstr.prototype.disconnectedCallback;\n  Object.assign(Cstr.prototype, {\n    __hasHostListenerAttached: false,\n    __registerHost() {\n      registerHost(this, cmpMeta);\n    },\n    connectedCallback() {\n      if (!this.__hasHostListenerAttached) {\n        const hostRef = getHostRef(this);\n        addHostEventListeners(this, hostRef, cmpMeta.$listeners$, false);\n        this.__hasHostListenerAttached = true;\n      }\n      connectedCallback(this);\n      if (BUILD24.connectedCallback && originalConnectedCallback) {\n        originalConnectedCallback.call(this);\n      }\n    },\n    disconnectedCallback() {\n      disconnectedCallback(this);\n      if (BUILD24.disconnectedCallback && originalDisconnectedCallback) {\n        originalDisconnectedCallback.call(this);\n      }\n    },\n    __attachShadow() {\n      if (supportsShadow) {\n        if (!this.shadowRoot) {\n          if (BUILD24.shadowDelegatesFocus) {\n            this.attachShadow({\n              mode: \"open\",\n              delegatesFocus: !!(cmpMeta.$flags$ & 16 /* shadowDelegatesFocus */)\n            });\n          } else {\n            this.attachShadow({ mode: \"open\" });\n          }\n        } else {\n          if (this.shadowRoot.mode !== \"open\") {\n            throw new Error(\n              `Unable to re-use existing shadow root for ${cmpMeta.$tagName$}! Mode is set to ${this.shadowRoot.mode} but Stencil only supports open shadow roots.`\n            );\n          }\n        }\n      } else {\n        this.shadowRoot = this;\n      }\n    }\n  });\n  Cstr.is = cmpMeta.$tagName$;\n  return proxyComponent(Cstr, cmpMeta, 1 /* isElementConstructor */ | 2 /* proxyState */);\n};\nvar forceModeUpdate = (elm) => {\n  if (BUILD24.style && BUILD24.mode && !BUILD24.lazyLoad) {\n    const mode = computeMode(elm);\n    const hostRef = getHostRef(elm);\n    if (hostRef.$modeName$ !== mode) {\n      const cmpMeta = hostRef.$cmpMeta$;\n      const oldScopeId = elm[\"s-sc\"];\n      const scopeId2 = getScopeId(cmpMeta, mode);\n      const style = elm.constructor.style[mode];\n      const flags = cmpMeta.$flags$;\n      if (style) {\n        if (!styles.has(scopeId2)) {\n          registerStyle(scopeId2, style, !!(flags & 1 /* shadowDomEncapsulation */));\n        }\n        hostRef.$modeName$ = mode;\n        elm.classList.remove(oldScopeId + \"-h\", oldScopeId + \"-s\");\n        attachStyles(hostRef);\n        forceUpdate(elm);\n      }\n    }\n  }\n};\n\n// src/runtime/bootstrap-lazy.ts\nimport { BUILD as BUILD25 } from \"@stencil/core/internal/app-data\";\n\n// src/runtime/hmr-component.ts\nvar hmrStart = (hostElement, cmpMeta, hmrVersionId) => {\n  const hostRef = getHostRef(hostElement);\n  hostRef.$flags$ = 1 /* hasConnected */;\n  initializeComponent(hostElement, hostRef, cmpMeta, hmrVersionId);\n};\n\n// src/runtime/bootstrap-lazy.ts\nvar bootstrapLazy = (lazyBundles, options = {}) => {\n  var _a;\n  if (BUILD25.profile && performance.mark) {\n    performance.mark(\"st:app:start\");\n  }\n  installDevTools();\n  const endBootstrap = createTime(\"bootstrapLazy\");\n  const cmpTags = [];\n  const exclude = options.exclude || [];\n  const customElements2 = win.customElements;\n  const head = doc.head;\n  const metaCharset = /* @__PURE__ */ head.querySelector(\"meta[charset]\");\n  const dataStyles = /* @__PURE__ */ doc.createElement(\"style\");\n  const deferredConnectedCallbacks = [];\n  let appLoadFallback;\n  let isBootstrapping = true;\n  Object.assign(plt, options);\n  plt.$resourcesUrl$ = new URL(options.resourcesUrl || \"./\", doc.baseURI).href;\n  if (BUILD25.asyncQueue) {\n    if (options.syncQueue) {\n      plt.$flags$ |= 4 /* queueSync */;\n    }\n  }\n  if (BUILD25.hydrateClientSide) {\n    plt.$flags$ |= 2 /* appLoaded */;\n  }\n  let hasSlotRelocation = false;\n  lazyBundles.map((lazyBundle) => {\n    lazyBundle[1].map((compactMeta) => {\n      var _a2;\n      const cmpMeta = {\n        $flags$: compactMeta[0],\n        $tagName$: compactMeta[1],\n        $members$: compactMeta[2],\n        $listeners$: compactMeta[3]\n      };\n      if (cmpMeta.$flags$ & 4 /* hasSlotRelocation */) {\n        hasSlotRelocation = true;\n      }\n      if (BUILD25.member) {\n        cmpMeta.$members$ = compactMeta[2];\n      }\n      if (BUILD25.hostListener) {\n        cmpMeta.$listeners$ = compactMeta[3];\n      }\n      if (BUILD25.reflect) {\n        cmpMeta.$attrsToReflect$ = [];\n      }\n      if (BUILD25.watchCallback) {\n        cmpMeta.$watchers$ = (_a2 = compactMeta[4]) != null ? _a2 : {};\n      }\n      if (BUILD25.shadowDom && !supportsShadow && cmpMeta.$flags$ & 1 /* shadowDomEncapsulation */) {\n        cmpMeta.$flags$ |= 8 /* needsShadowDomShim */;\n      }\n      const tagName = BUILD25.transformTagName && options.transformTagName ? options.transformTagName(cmpMeta.$tagName$) : cmpMeta.$tagName$;\n      const HostElement = class extends HTMLElement {\n        // StencilLazyHost\n        constructor(self) {\n          super(self);\n          this.hasRegisteredEventListeners = false;\n          self = this;\n          registerHost(self, cmpMeta);\n          if (BUILD25.shadowDom && cmpMeta.$flags$ & 1 /* shadowDomEncapsulation */) {\n            if (supportsShadow) {\n              if (!self.shadowRoot) {\n                if (BUILD25.shadowDelegatesFocus) {\n                  self.attachShadow({\n                    mode: \"open\",\n                    delegatesFocus: !!(cmpMeta.$flags$ & 16 /* shadowDelegatesFocus */)\n                  });\n                } else {\n                  self.attachShadow({ mode: \"open\" });\n                }\n              } else {\n                if (self.shadowRoot.mode !== \"open\") {\n                  throw new Error(\n                    `Unable to re-use existing shadow root for ${cmpMeta.$tagName$}! Mode is set to ${self.shadowRoot.mode} but Stencil only supports open shadow roots.`\n                  );\n                }\n              }\n            } else if (!BUILD25.hydrateServerSide && !(\"shadowRoot\" in self)) {\n              self.shadowRoot = self;\n            }\n          }\n        }\n        connectedCallback() {\n          const hostRef = getHostRef(this);\n          if (!this.hasRegisteredEventListeners) {\n            this.hasRegisteredEventListeners = true;\n            addHostEventListeners(this, hostRef, cmpMeta.$listeners$, false);\n          }\n          if (appLoadFallback) {\n            clearTimeout(appLoadFallback);\n            appLoadFallback = null;\n          }\n          if (isBootstrapping) {\n            deferredConnectedCallbacks.push(this);\n          } else {\n            plt.jmp(() => connectedCallback(this));\n          }\n        }\n        disconnectedCallback() {\n          plt.jmp(() => disconnectedCallback(this));\n        }\n        componentOnReady() {\n          return getHostRef(this).$onReadyPromise$;\n        }\n      };\n      if (BUILD25.experimentalSlotFixes) {\n        if (BUILD25.scoped && cmpMeta.$flags$ & 2 /* scopedCssEncapsulation */) {\n          patchPseudoShadowDom(HostElement.prototype);\n        }\n      } else {\n        if (BUILD25.slotChildNodesFix) {\n          patchChildSlotNodes(HostElement.prototype);\n        }\n        if (BUILD25.cloneNodeFix) {\n          patchCloneNode(HostElement.prototype);\n        }\n        if (BUILD25.appendChildSlotFix) {\n          patchSlotAppendChild(HostElement.prototype);\n        }\n        if (BUILD25.scopedSlotTextContentFix && cmpMeta.$flags$ & 2 /* scopedCssEncapsulation */) {\n          patchTextContent(HostElement.prototype);\n        }\n      }\n      if (BUILD25.formAssociated && cmpMeta.$flags$ & 64 /* formAssociated */) {\n        HostElement.formAssociated = true;\n      }\n      if (BUILD25.hotModuleReplacement) {\n        HostElement.prototype[\"s-hmr\"] = function(hmrVersionId) {\n          hmrStart(this, cmpMeta, hmrVersionId);\n        };\n      }\n      cmpMeta.$lazyBundleId$ = lazyBundle[0];\n      if (!exclude.includes(tagName) && !customElements2.get(tagName)) {\n        cmpTags.push(tagName);\n        customElements2.define(\n          tagName,\n          proxyComponent(HostElement, cmpMeta, 1 /* isElementConstructor */)\n        );\n      }\n    });\n  });\n  if (cmpTags.length > 0) {\n    if (hasSlotRelocation) {\n      dataStyles.textContent += SLOT_FB_CSS;\n    }\n    if (BUILD25.invisiblePrehydration && (BUILD25.hydratedClass || BUILD25.hydratedAttribute)) {\n      dataStyles.textContent += cmpTags.sort() + HYDRATED_CSS;\n    }\n    if (dataStyles.innerHTML.length) {\n      dataStyles.setAttribute(\"data-styles\", \"\");\n      const nonce = (_a = plt.$nonce$) != null ? _a : queryNonceMetaTagContent(doc);\n      if (nonce != null) {\n        dataStyles.setAttribute(\"nonce\", nonce);\n      }\n      head.insertBefore(dataStyles, metaCharset ? metaCharset.nextSibling : head.firstChild);\n    }\n  }\n  isBootstrapping = false;\n  if (deferredConnectedCallbacks.length) {\n    deferredConnectedCallbacks.map((host) => host.connectedCallback());\n  } else {\n    if (BUILD25.profile) {\n      plt.jmp(() => appLoadFallback = setTimeout(appDidLoad, 30, \"timeout\"));\n    } else {\n      plt.jmp(() => appLoadFallback = setTimeout(appDidLoad, 30));\n    }\n  }\n  endBootstrap();\n};\n\n// src/runtime/fragment.ts\nvar Fragment = (_, children) => children;\n\n// src/runtime/host-listener.ts\nimport { BUILD as BUILD26 } from \"@stencil/core/internal/app-data\";\nvar addHostEventListeners = (elm, hostRef, listeners, attachParentListeners) => {\n  if (BUILD26.hostListener && listeners) {\n    if (BUILD26.hostListenerTargetParent) {\n      if (attachParentListeners) {\n        listeners = listeners.filter(([flags]) => flags & 32 /* TargetParent */);\n      } else {\n        listeners = listeners.filter(([flags]) => !(flags & 32 /* TargetParent */));\n      }\n    }\n    listeners.map(([flags, name, method]) => {\n      const target = BUILD26.hostListenerTarget ? getHostListenerTarget(elm, flags) : elm;\n      const handler = hostListenerProxy(hostRef, method);\n      const opts = hostListenerOpts(flags);\n      plt.ael(target, name, handler, opts);\n      (hostRef.$rmListeners$ = hostRef.$rmListeners$ || []).push(() => plt.rel(target, name, handler, opts));\n    });\n  }\n};\nvar hostListenerProxy = (hostRef, methodName) => (ev) => {\n  var _a;\n  try {\n    if (BUILD26.lazyLoad) {\n      if (hostRef.$flags$ & 256 /* isListenReady */) {\n        (_a = hostRef.$lazyInstance$) == null ? void 0 : _a[methodName](ev);\n      } else {\n        (hostRef.$queuedListeners$ = hostRef.$queuedListeners$ || []).push([methodName, ev]);\n      }\n    } else {\n      hostRef.$hostElement$[methodName](ev);\n    }\n  } catch (e) {\n    consoleError(e);\n  }\n};\nvar getHostListenerTarget = (elm, flags) => {\n  if (BUILD26.hostListenerTargetDocument && flags & 4 /* TargetDocument */) return doc;\n  if (BUILD26.hostListenerTargetWindow && flags & 8 /* TargetWindow */) return win;\n  if (BUILD26.hostListenerTargetBody && flags & 16 /* TargetBody */) return doc.body;\n  if (BUILD26.hostListenerTargetParent && flags & 32 /* TargetParent */ && elm.parentElement)\n    return elm.parentElement;\n  return elm;\n};\nvar hostListenerOpts = (flags) => supportsListenerOptions ? {\n  passive: (flags & 1 /* Passive */) !== 0,\n  capture: (flags & 2 /* Capture */) !== 0\n} : (flags & 2 /* Capture */) !== 0;\n\n// src/runtime/nonce.ts\nvar setNonce = (nonce) => plt.$nonce$ = nonce;\n\n// src/runtime/platform-options.ts\nvar setPlatformOptions = (opts) => Object.assign(plt, opts);\n\n// src/runtime/vdom/vdom-annotations.ts\nvar insertVdomAnnotations = (doc2, staticComponents) => {\n  if (doc2 != null) {\n    const docData = STENCIL_DOC_DATA in doc2 ? doc2[STENCIL_DOC_DATA] : { ...DEFAULT_DOC_DATA };\n    docData.staticComponents = new Set(staticComponents);\n    const orgLocationNodes = [];\n    parseVNodeAnnotations(doc2, doc2.body, docData, orgLocationNodes);\n    orgLocationNodes.forEach((orgLocationNode) => {\n      var _a;\n      if (orgLocationNode != null && orgLocationNode[\"s-nr\"]) {\n        const nodeRef = orgLocationNode[\"s-nr\"];\n        let hostId = nodeRef[\"s-host-id\"];\n        let nodeId = nodeRef[\"s-node-id\"];\n        let childId = `${hostId}.${nodeId}`;\n        if (hostId == null) {\n          hostId = 0;\n          docData.rootLevelIds++;\n          nodeId = docData.rootLevelIds;\n          childId = `${hostId}.${nodeId}`;\n          if (nodeRef.nodeType === 1 /* ElementNode */) {\n            nodeRef.setAttribute(HYDRATE_CHILD_ID, childId);\n            if (typeof nodeRef[\"s-sn\"] === \"string\" && !nodeRef.getAttribute(\"slot\")) {\n              nodeRef.setAttribute(\"s-sn\", nodeRef[\"s-sn\"]);\n            }\n          } else if (nodeRef.nodeType === 3 /* TextNode */) {\n            if (hostId === 0) {\n              const textContent = (_a = nodeRef.nodeValue) == null ? void 0 : _a.trim();\n              if (textContent === \"\") {\n                orgLocationNode.remove();\n                return;\n              }\n            }\n            const commentBeforeTextNode = doc2.createComment(childId);\n            commentBeforeTextNode.nodeValue = `${TEXT_NODE_ID}.${childId}`;\n            insertBefore(nodeRef.parentNode, commentBeforeTextNode, nodeRef);\n          } else if (nodeRef.nodeType === 8 /* CommentNode */) {\n            const commentBeforeTextNode = doc2.createComment(childId);\n            commentBeforeTextNode.nodeValue = `${COMMENT_NODE_ID}.${childId}`;\n            nodeRef.parentNode.insertBefore(commentBeforeTextNode, nodeRef);\n          }\n        }\n        let orgLocationNodeId = `${ORG_LOCATION_ID}.${childId}`;\n        const orgLocationParentNode = orgLocationNode.parentElement;\n        if (orgLocationParentNode) {\n          if (orgLocationParentNode[\"s-en\"] === \"\") {\n            orgLocationNodeId += `.`;\n          } else if (orgLocationParentNode[\"s-en\"] === \"c\") {\n            orgLocationNodeId += `.c`;\n          }\n        }\n        orgLocationNode.nodeValue = orgLocationNodeId;\n      }\n    });\n  }\n};\nvar parseVNodeAnnotations = (doc2, node, docData, orgLocationNodes) => {\n  var _a;\n  if (node == null) {\n    return;\n  }\n  if (node[\"s-nr\"] != null) {\n    orgLocationNodes.push(node);\n  }\n  if (node.nodeType === 1 /* ElementNode */) {\n    const childNodes = [...Array.from(node.childNodes), ...Array.from(((_a = node.shadowRoot) == null ? void 0 : _a.childNodes) || [])];\n    childNodes.forEach((childNode) => {\n      const hostRef = getHostRef(childNode);\n      if (hostRef != null && !docData.staticComponents.has(childNode.nodeName.toLowerCase())) {\n        const cmpData = {\n          nodeIds: 0\n        };\n        insertVNodeAnnotations(doc2, childNode, hostRef.$vnode$, docData, cmpData);\n      }\n      parseVNodeAnnotations(doc2, childNode, docData, orgLocationNodes);\n    });\n  }\n};\nvar insertVNodeAnnotations = (doc2, hostElm, vnode, docData, cmpData) => {\n  if (vnode != null) {\n    const hostId = ++docData.hostIds;\n    hostElm.setAttribute(HYDRATE_ID, hostId);\n    if (hostElm[\"s-cr\"] != null) {\n      hostElm[\"s-cr\"].nodeValue = `${CONTENT_REF_ID}.${hostId}`;\n    }\n    if (vnode.$children$ != null) {\n      const depth = 0;\n      vnode.$children$.forEach((vnodeChild, index) => {\n        insertChildVNodeAnnotations(doc2, vnodeChild, cmpData, hostId, depth, index);\n      });\n    }\n    if (hostElm && vnode && vnode.$elm$ && !hostElm.hasAttribute(HYDRATE_CHILD_ID)) {\n      const parent = hostElm.parentElement;\n      if (parent && parent.childNodes) {\n        const parentChildNodes = Array.from(parent.childNodes);\n        const comment = parentChildNodes.find(\n          (node) => node.nodeType === 8 /* CommentNode */ && node[\"s-sr\"]\n        );\n        if (comment) {\n          const index = parentChildNodes.indexOf(hostElm) - 1;\n          vnode.$elm$.setAttribute(\n            HYDRATE_CHILD_ID,\n            `${comment[\"s-host-id\"]}.${comment[\"s-node-id\"]}.0.${index}`\n          );\n        }\n      }\n    }\n  }\n};\nvar insertChildVNodeAnnotations = (doc2, vnodeChild, cmpData, hostId, depth, index) => {\n  const childElm = vnodeChild.$elm$;\n  if (childElm == null) {\n    return;\n  }\n  const nodeId = cmpData.nodeIds++;\n  const childId = `${hostId}.${nodeId}.${depth}.${index}`;\n  childElm[\"s-host-id\"] = hostId;\n  childElm[\"s-node-id\"] = nodeId;\n  if (childElm.nodeType === 1 /* ElementNode */) {\n    childElm.setAttribute(HYDRATE_CHILD_ID, childId);\n    if (typeof childElm[\"s-sn\"] === \"string\" && !childElm.getAttribute(\"slot\")) {\n      childElm.setAttribute(\"s-sn\", childElm[\"s-sn\"]);\n    }\n  } else if (childElm.nodeType === 3 /* TextNode */) {\n    const parentNode = childElm.parentNode;\n    const nodeName = parentNode == null ? void 0 : parentNode.nodeName;\n    if (nodeName !== \"STYLE\" && nodeName !== \"SCRIPT\") {\n      const textNodeId = `${TEXT_NODE_ID}.${childId}`;\n      const commentBeforeTextNode = doc2.createComment(textNodeId);\n      insertBefore(parentNode, commentBeforeTextNode, childElm);\n    }\n  } else if (childElm.nodeType === 8 /* CommentNode */) {\n    if (childElm[\"s-sr\"]) {\n      const slotName = childElm[\"s-sn\"] || \"\";\n      const slotNodeId = `${SLOT_NODE_ID}.${childId}.${slotName}`;\n      childElm.nodeValue = slotNodeId;\n    }\n  }\n  if (vnodeChild.$children$ != null) {\n    const childDepth = depth + 1;\n    vnodeChild.$children$.forEach((vnode, index2) => {\n      insertChildVNodeAnnotations(doc2, vnode, cmpData, hostId, childDepth, index2);\n    });\n  }\n};\nexport {\n  BUILD27 as BUILD,\n  Build,\n  Env,\n  Fragment,\n  H,\n  H as HTMLElement,\n  Host,\n  NAMESPACE2 as NAMESPACE,\n  STENCIL_DEV_MODE,\n  addHostEventListeners,\n  bootstrapLazy,\n  cmpModules,\n  connectedCallback,\n  consoleDevError,\n  consoleDevInfo,\n  consoleDevWarn,\n  consoleError,\n  createEvent,\n  defineCustomElement,\n  disconnectedCallback,\n  doc,\n  forceModeUpdate,\n  forceUpdate,\n  getAssetPath,\n  getElement,\n  getHostRef,\n  getMode,\n  getRenderingRef,\n  getValue,\n  h,\n  insertVdomAnnotations,\n  isMemberInElement,\n  loadModule,\n  modeResolutionChain,\n  nextTick,\n  parsePropertyValue,\n  plt,\n  postUpdateComponent,\n  promiseResolve,\n  proxyComponent,\n  proxyCustomElement,\n  readTask,\n  registerHost,\n  registerInstance,\n  renderVdom,\n  setAssetPath,\n  setErrorHandler,\n  setMode,\n  setNonce,\n  setPlatformHelpers,\n  setPlatformOptions,\n  setValue,\n  styles,\n  supportsConstructableStylesheets,\n  supportsListenerOptions,\n  supportsShadow,\n  win,\n  writeTask\n};\n"],"mappings":"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","ignoreList":[]}