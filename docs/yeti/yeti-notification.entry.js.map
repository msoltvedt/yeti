{"file":"yeti-notification.entry.esm.js","mappings":"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","names":[],"sources":["src/components/yeti-notification/yeti-notification.tsx"],"sourcesContent":["import { Component, Prop, h, State, Element, Event, EventEmitter } from '@stencil/core';\nimport { utils } from '../../utils/utils';\n\n@Component({\n  tag: 'yeti-notification',\n  shadow: false,\n})\nexport class YetiTooltip {\n\n  @Element() el: HTMLElement;\n\n  /**\n   * Fires when the user clicks the action button.\n   */\n  @Event({ bubbles: true }) notificationActionClick: EventEmitter;\n\n\n  /**\n   * CSS classlist to add to the element serving as the component's wrapper.\n   */\n  @Prop() wrapperClass: string = '';\n\n  /**\n   * The type of notification: error (default) | info | success | warning | warningAlt.\n   */\n  @Prop() notificationType: string = \"\";\n\n  /**\n   * Whether to use the low-contrast variant or not.\n   */\n  @Prop() isLowContrast: boolean = false;\n\n  /**\n   * Whether to show the close button or not.\n   */\n  @Prop() showCloseButton: boolean = true;\n\n  /**\n   * Which icon to use (see Google Material Icons).\n   */\n  @Prop() iconCode: string = \"\";\n\n  /**\n   * The alt text for the icon.\n   */\n  @Prop() iconAltText: string = \"\";\n\n  /**\n   * Text value to display as the notification's title.\n   */\n  @Prop() textTitle: string = \"Mmmm Toast!\";\n\n  /**\n   * Optionally set a size (currently only supports default and \"full\")\n   */\n  @Prop() size: string = \"\";\n\n  /**\n   * Text label for the action button.\n   */\n  @Prop() actionLabel: string = \"\";\n\n  /**\n   * id of the component's slot element.\n   */\n  @Prop({\n    mutable: true,\n    reflect: true\n  }) slotId: string = \"\"; // Set on load\n\n  /**\n   * id of the component's actual element corresponding to the tooltip. Will be auto-populated with a unique value if not provided.\n   */\n  @Prop({\n    mutable: true,\n    reflect: true\n  }) notificationId: string = \"\"; // Set on load\n\n  \n\n  /**\n   * Toggle to force a re-render of the whole component.\n   */\n  @State() iLoveJSX: boolean = false;\n\n  /**\n   * Whether the notification is visible or not.\n   */\n  @Prop() isVisible: boolean = true;\n\n\n\n  handleCloseClick(e) {\n    this.isVisible = false;\n    e.stopImmediatePropagation();\n    e.preventDefault();\n  }\n\n\n\n  handleActionClick(e) {\n    this.notificationActionClick.emit();\n    e.stopImmediatePropagation();\n    e.preventDefault();\n  }\n\n\n\n  componentWillLoad() {\n    // Set up ids\n    let componentId = this.el.getAttribute(\"id\");\n\n    if (!componentId || componentId == \"\") {\n      componentId = utils.generateUniqueId();\n      this.el.setAttribute(\"id\", componentId);\n    }\n\n    this.notificationId = (this.notificationId != \"\") ? this.notificationId : `${componentId}_tip`;\n    this.slotId = (this.slotId != \"\") ? this.slotId : `${componentId}_slot`;\n  }\n\n\n  render() {\n\n    let altText = this.iconAltText;\n    let iconCode = this.iconCode;\n    let wrapperClass = 'yeti-notification';\n    wrapperClass += (this.size == 'full') ? ' yeti-notification_full' : '';\n    wrapperClass += (this.wrapperClass !== '') ? ` ${this.wrapperClass}` : ``;\n\n    // Set type-based CSS class\n    switch (this.notificationType) {\n\n      case \"error\":\n\n        wrapperClass += ' yeti-notification-error';\n        altText = (altText != '') ? altText : 'Error';\n        iconCode = (iconCode != '') ? iconCode : 'error';\n        break;\n\n      case \"info\":\n\n        wrapperClass += ' yeti-notification-info';\n        altText = (altText != '') ? altText : 'Information';\n        iconCode = (iconCode != '') ? iconCode : 'info';\n        break;\n\n      case \"success\":\n\n        wrapperClass += ' yeti-notification-success';\n        altText = (altText != '') ? altText : 'Success';\n        iconCode = (iconCode != '') ? iconCode : 'check_circle';\n        break;\n\n      case \"warning\":\n\n        wrapperClass += ' yeti-notification-warning';\n        altText = (altText != '') ? altText : 'Warning';\n        iconCode = (iconCode != '') ? iconCode : 'error';\n        break;\n\n      case \"warningAlt\":\n\n        wrapperClass += ' yeti-notification-warning_alt';\n        altText = (altText != '') ? altText : 'Warning';\n        iconCode = (iconCode != '') ? iconCode : 'warning';\n        break;\n\n      case \"\":\n      default:\n        altText = (altText != '') ? altText : 'Error';\n        iconCode = (iconCode != '') ? iconCode : 'error';\n        break;\n\n    }\n    \n\n    // Set low-contrast mode\n    wrapperClass += (this.isLowContrast) ? ' yeti-notification-low_contrast' : '';\n\n\n    // Set visibility\n    wrapperClass += (this.isVisible) ? '' : ' yeti-notification__hidden';\n  \n\n    return (\n      <div class={wrapperClass} id={this.notificationId} role=\"status\">\n\n        <div class=\"yeti-notification-icon\">\n          \n          <span class=\"material-icons\" aria-hidden=\"true\">{iconCode}</span>\n          <span class=\"yeti-a11y-hidden\">{altText}</span>\n\n        </div>\n\n\n        <div class=\"yeti-notification-content\">\n        \n          {\n            (this.textTitle != \"\") ?\n              <div class=\"yeti-notification-content-title\">{this.textTitle}</div>\n            :\n              ''\n          }\n          <div class=\"yeti-notification-content-subtitle\">\n\n            <slot />\n\n          </div>\n\n        </div>\n\n        {\n          (this.actionLabel != \"\") ?\n\n            <button class=\"yeti-notification-action\" onClick={(e) => this.handleActionClick(e)}>\n              {this.actionLabel}\n            </button>\n          :\n            \"\"\n        }\n\n        {\n          (this.showCloseButton) ?\n\n            <button class=\"yeti-notification-close\" onClick={(e) => this.handleCloseClick(e)}>\n              <span class=\"material-icons\">close</span>\n            </button>\n          :\n            \"\"\n        }\n\n      </div>\n    );\n  }\n\n}"],"version":3}