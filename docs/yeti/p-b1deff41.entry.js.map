{"version":3,"names":["YetiPanel","constructor","hostRef","this","heading","isExpandable","hasHeader","isExpanded","headerId","utils","generateUniqueId","contentId","wrapperClass","iLoveJSX","hasSubheader","watchIsExpandedHandler","newValue","panelExpansionChanged","emit","yetiPanel","el","handleHeaderClick","componentWillLoad","potentialSubheader","querySelector","render","wrapperCSS","h","key","class","id","onClick","type","iconCode","alt","iconClass","name","role"],"sources":["src/components/yeti-panel/yeti-panel.tsx"],"sourcesContent":["import { Component, Prop, h, State, Element, Event, EventEmitter, Watch } from '@stencil/core';\r\nimport { utils } from '../../utils/utils';\r\n\r\n@Component({\r\n  tag: 'yeti-panel',\r\n  shadow: false,\r\n})\r\nexport class YetiPanel {\r\n\r\n  @Element() el: HTMLElement;\r\n\r\n  /**\r\n   * Event that fires when the panel's isExpanded state changes to expanded.\r\n   */\r\n  @Event({ bubbles: true }) panelExpansionChanged: EventEmitter;\r\n\r\n  /**\r\n   * The descriptive text that appears in the heading bar above the content.\r\n   */\r\n  @Prop({\r\n    mutable: true,\r\n    reflect: true\r\n  }) heading: string = 'Heading';\r\n\r\n  /**\r\n   * Whether or not this panel can expand or collapse\r\n   */\r\n  @Prop({\r\n    mutable: true,\r\n    reflect: true\r\n  }) isExpandable: boolean = false;\r\n\r\n  /**\r\n   * Whether or not this panel has a header (it will have by default)\r\n   */\r\n  @Prop() hasHeader: boolean = true;\r\n\r\n  /**\r\n   * Whether or not this panel is currently expanded.\r\n   */\r\n  @Prop({\r\n    mutable: true,\r\n    reflect: true\r\n  }) isExpanded: boolean = true;\r\n  @Watch('isExpanded')\r\n  watchIsExpandedHandler(newValue: boolean) {\r\n    \r\n    this.panelExpansionChanged.emit({\r\n      \"yetiPanel\": this.el,\r\n      \"isExpanded\": newValue\r\n    });\r\n\r\n  }\r\n\r\n  /**\r\n   * The id of the HTML element representing the panel header\r\n   */\r\n  @Prop({\r\n    mutable: true,\r\n    reflect: true\r\n  }) headerId: string = utils.generateUniqueId();\r\n\r\n  /**\r\n   * The id of the HTML element representing the panel's content container\r\n   */\r\n  @Prop({\r\n    mutable: true,\r\n    reflect: true\r\n  }) contentId: string = utils.generateUniqueId();\r\n\r\n  /**\r\n   * A string of CSS space-separated CSS classes to add to the HTML element that represents the panel's outer wrapper\r\n   */\r\n  @Prop({\r\n    mutable: true,\r\n    reflect: true\r\n  }) wrapperClass: string = '';\r\n\r\n  /**\r\n   * Used to toggle a re-render of the icon.\r\n   */\r\n  @State() iLoveJSX: boolean = false;\r\n\r\n\r\n  hasSubheader: boolean = false;\r\n\r\n\r\n\r\n  handleHeaderClick() {\r\n    if (this.isExpandable) {\r\n      this.isExpanded = !this.isExpanded;\r\n    }\r\n  }\r\n\r\n\r\n\r\n  componentWillLoad() {\r\n    \r\n    let potentialSubheader = this.el.querySelector('[slot=\"subheader\"]');\r\n    \r\n    if (potentialSubheader) {\r\n      this.hasSubheader = true;\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n\r\n    let wrapperCSS = 'yeti-panel';\r\n\r\n    wrapperCSS += (this.wrapperClass) ? ` ${this.wrapperClass}` : '';\r\n\r\n    wrapperCSS += (this.isExpandable) ? ' yeti-panel-expandable' : '';\r\n    wrapperCSS += (this.isExpandable && this.isExpanded) ? ' yeti-panel__expanded' : '';\r\n\r\n    return (\r\n\r\n        <div class={wrapperCSS}>\r\n\r\n          {/* Header */}\r\n          {(this.hasHeader) ?\r\n            (this.isExpandable) ? \r\n            \r\n              // It's expandable, use a button for the header.\r\n              <button \r\n                id={this.headerId}\r\n                class=\"yeti-panel-header\"\r\n                onClick={() => { this.handleHeaderClick(); }}\r\n                aria-expanded={this.isExpanded}\r\n                aria-controls={this.contentId}\r\n                type=\"button\"\r\n              >\r\n\r\n                <div class='yeti-panel-header-contents'>\r\n\r\n                  {(this.isExpanded) ?\r\n                  \r\n                    <yeti-icon iconCode='expand_less' alt='' iconClass='yeti-panel-header-caret'></yeti-icon>\r\n\r\n                  :\r\n\r\n                    <yeti-icon iconCode='expand_more' alt='' iconClass='yeti-panel-header-caret'></yeti-icon>\r\n\r\n                  }\r\n                  \r\n                  <div class=\"yeti-panel-header-actual\">\r\n\r\n                    {this.heading}\r\n                    \r\n                  </div>\r\n\r\n\r\n                  <slot name=\"subheader\" />\r\n\r\n\r\n                </div>\r\n\r\n              </button>\r\n\r\n            :\r\n\r\n              // It's not expandable, just use a div for the header.\r\n              <div \r\n                id={this.headerId}\r\n                class=\"yeti-panel-header\"\r\n              >\r\n\r\n                <div class='yeti-panel-header-contents'>\r\n\r\n                  \r\n                  <div class=\"yeti-panel-header-actual\">\r\n\r\n                    {this.heading}\r\n                    \r\n                  </div>\r\n\r\n\r\n                  <slot name=\"subheader\" />\r\n\r\n\r\n                </div>\r\n\r\n              </div>\r\n          \r\n          :\r\n            \r\n            ''\r\n          \r\n          }\r\n          \r\n\r\n\r\n          {/* Content */}\r\n          <div \r\n            id={this.contentId}\r\n            class=\"yeti-panel-content\"\r\n            role=\"region\"\r\n            aria-labelledby={this.headerId}\r\n          >\r\n\r\n            <slot />\r\n\r\n          </div>\r\n\r\n\r\n        </div>\r\n\r\n    );\r\n  }\r\n\r\n}"],"mappings":"mGAOaA,EAAS,MAJtB,WAAAC,CAAAC,G,qEAmBKC,KAAOC,QAAW,UAQlBD,KAAYE,aAAY,MAKnBF,KAASG,UAAY,KAQ1BH,KAAUI,WAAY,KAiBtBJ,KAAAK,SAAmBC,EAAMC,mBAQzBP,KAAAQ,UAAoBF,EAAMC,mBAQ1BP,KAAYS,aAAW,GAKjBT,KAAQU,SAAY,MAG7BV,KAAYW,aAAY,KAgIzB,CAvKC,sBAAAC,CAAuBC,GAErBb,KAAKc,sBAAsBC,KAAK,CAC9BC,UAAahB,KAAKiB,GAClBb,WAAcS,G,CAuClB,iBAAAK,GACE,GAAIlB,KAAKE,aAAc,CACrBF,KAAKI,YAAcJ,KAAKI,U,EAM5B,iBAAAe,GAEE,IAAIC,EAAqBpB,KAAKiB,GAAGI,cAAc,sBAE/C,GAAID,EAAoB,CACtBpB,KAAKW,aAAe,I,EAOxB,MAAAW,GAEE,IAAIC,EAAa,aAEjBA,GAAevB,KAAiB,aAAI,IAAIA,KAAKS,eAAiB,GAE9Dc,GAAevB,KAAiB,aAAI,yBAA2B,GAC/DuB,GAAevB,KAAKE,cAAgBF,KAAKI,WAAc,wBAA0B,GAEjF,OAEIoB,EAAA,OAAAC,IAAA,2CAAKC,MAAOH,GAGRvB,KAAc,UACbA,KAAiB,aAGhBwB,EAAA,UACEG,GAAI3B,KAAKK,SACTqB,MAAM,oBACNE,QAAS,KAAQ5B,KAAKkB,mBAAmB,EAAG,gBAC7BlB,KAAKI,WAAU,gBACfJ,KAAKQ,UACpBqB,KAAK,UAGLL,EAAK,OAAAE,MAAM,8BAEP1B,KAAe,WAEfwB,EAAW,aAAAM,SAAS,cAAcC,IAAI,GAAGC,UAAU,4BAInDR,EAAW,aAAAM,SAAS,cAAcC,IAAI,GAAGC,UAAU,4BAIrDR,EAAA,OAAKE,MAAM,4BAER1B,KAAKC,SAKRuB,EAAA,QAAMS,KAAK,gBAUfT,EACE,OAAAG,GAAI3B,KAAKK,SACTqB,MAAM,qBAGNF,EAAK,OAAAE,MAAM,8BAGTF,EAAA,OAAKE,MAAM,4BAER1B,KAAKC,SAKRuB,EAAA,QAAMS,KAAK,gBASjB,GAOFT,EAAA,OAAAC,IAAA,2CACEE,GAAI3B,KAAKQ,UACTkB,MAAM,qBACNQ,KAAK,SACY,kBAAAlC,KAAKK,UAGtBmB,EAAQ,QAAAC,IAAA,8C","ignoreList":[]}