{"version":3,"names":["YetiProgressBar","handleProgressChange","newValue","isNaN","console","warn","this","progress","renderIcon","state","error","h","class","renderLabel","labelCSS","tooltipId","el","getAttribute","tooltipText","tooltipPosition","text","id","tabIndex","label","renderProgressBar","wrapperCSS","barCSS","actualStyle","progressBar","Object","assign","barId","style","helperText","componentWillLoad","componentId","utils","generateUniqueId","setAttribute","render","width","position","blockAnchor"],"sources":["src/components/yeti-progress-bar/yeti-progress-bar.tsx"],"sourcesContent":["import { Component, Prop, h, State, Element, Watch } from '@stencil/core';\nimport { utils } from '../../utils/utils';\n\n@Component({\n  tag: 'yeti-progress-bar',\n  shadow: false,\n})\nexport class YetiProgressBar {\n\n  @Element() el: HTMLElement;\n\n  /**\n   * CSS classlist to add to the component's outer wrapper element.\n   */\n  @Prop({ attribute: 'wrapper-class'}) wrapperCSS: string = '';\n\n  /**\n   * CSS classlist to add to the component's actual label element.\n   */\n  @Prop({ attribute: 'label-class'}) labelCSS: string = '';\n\n  /**\n   * CSS classlist to add to the element representing the component's progress bar.\n   */\n  @Prop({ attribute: 'bar-class'}) barCSS: string = '';\n\n  /**\n   * id of the element representing the component's progress bar. Will be given an auto-generated unique id if one is not provided.\n   */\n  @Prop({\n    mutable: true,\n    reflect: true\n  }) barId: string = \"\"; // Set on load\n\n  /**\n   * Number between 0 and 100 that describes the percentage complete to display in the bar.\n   */\n  @Prop({\n    mutable: true,\n    reflect: true\n  }) progress: number = 0;\n  @Watch('progress')\n  handleProgressChange(newValue: number) {\n    if (isNaN(newValue) || newValue < 0 || newValue > 100) {\n      console.warn(\"Error in progress bar. Progress must be a number between 0 and 100.\");\n      this.progress = 0;\n    }\n  }\n\n  /**\n   * Text content for the component's label.\n   */\n  @Prop() label: string = \"\";\n\n  /**\n   * Text content for the component's tooltip.\n   */\n  @Prop() tooltipText: string = \"\";\n\n  /**\n   * Token list describing the component's tooltip's position relative to the bar: left | right and/or above | below.\n   */\n  @Prop() tooltipPosition: string = \"\";\n\n  /**\n   * Text content that appears beneath the bar as helper text.\n   */\n  @Prop() helperText: string = \"\";\n\n  /**\n   * Whether or not the bar should depict an error state.\n   */\n  @Prop() error: boolean = false;\n\n  /**\n   * Toggle to re-render the entire component.\n   */\n  @State() iLoveJSX: boolean = false;\n\n\n\n  renderIcon() {\n    let state = \"\";\n    \n    if (this.error) {\n      state = \n      \n        <div class=\"yeti-progress_bar-state\">\n\n          <span class=\"material-icons yeti-progress_bar-state-icon\">error</span>\n\n        </div>;\n\n    }\n\n    if (this.progress == 100) {\n      state = \n      \n        <div class=\"yeti-progress_bar-state\">\n\n          <span class=\"material-icons yeti-progress_bar-state-icon\" aria-hidden=\"true\">check_circle</span>\n          <span class=\"yeti-a11y-hidden\">Finished</span>\n\n        </div>;\n\n    }\n\n    return state;\n\n  }\n\n\n\n  renderLabel(labelCSS: string) {\n    let state = \"\";\n    let tooltipId = `${this.el.getAttribute(\"id\")}_tooltip`;\n    \n    if (this.tooltipText != \"\" && this.tooltipPosition != \"below\") {\n      \n      state = <yeti-tooltip text={this.tooltipText} id={tooltipId}>\n        <div class={labelCSS} tabIndex={0}>{this.label} <span class=\"yeti-a11y-hidden\">{this.progress}%</span></div>\n      </yeti-tooltip>;\n\n    } else {\n\n      state = <div class={labelCSS}>{this.label} <span class=\"yeti-a11y-hidden\">{this.progress}%</span></div>;\n\n    }\n\n    return state;\n\n  }\n\n\n\n  renderProgressBar(wrapperCSS, labelCSS, barCSS, actualStyle) {\n      let progressBar =\n\n        <div \n          class={wrapperCSS}\n          id={this.barId}\n          {...((this.tooltipText != \"\" && this.tooltipPosition == \"below\") ? {tabIndex: 0} : {})}>\n\n          <div class=\"yeti-progress_bar-header\">\n            \n            {this.renderLabel(labelCSS)}\n\n            {this.renderIcon()}\n\n          </div>\n\n          <div class={barCSS} aria-hidden=\"true\">\n              <div class=\"yeti-progress_bar-bar-actual\" style={actualStyle}></div>\n          </div>\n\n          {(this.helperText != \"\") ?\n          \n            <div class=\"yeti-progress_bar-tip\">{this.helperText}</div>\n\n          : \n            \n            \"\"\n\n          }\n\n        </div>\n\n      return progressBar;\n  }\n\n\n\n  componentWillLoad() {\n\n    // Set up ids\n    let componentId = this.el.getAttribute(\"id\");\n\n    if (!componentId || componentId == \"\") {\n      componentId = utils.generateUniqueId();\n      this.el.setAttribute(\"id\", componentId);\n    }\n\n    this.barId = (this.barId != \"\") ? this.barId : `${componentId}_bar`;\n\n    this.handleProgressChange(this.progress);\n  }\n\n\n\n  render() {\n\n    let wrapperCSS = 'yeti-progress_bar';\n    let labelCSS = 'yeti-progress_bar-label';\n    let barCSS = 'yeti-progress_bar-bar';\n    let tooltipId = `${this.el.getAttribute(\"id\")}_tooltip`;\n\n    wrapperCSS += (this.progress == 100) ? \" yeti-progress_bar__complete\" : \"\";\n    wrapperCSS += (this.error) ? \" yeti-progress_bar__error\" : \"\";\n\n    wrapperCSS += (this.wrapperCSS && this.wrapperCSS != \"\") ? \" \" + this.wrapperCSS : \"\";\n    labelCSS += (this.labelCSS && this.labelCSS != \"\") ? \" \" + this.labelCSS : \"\";\n    barCSS += (this.barCSS && this.barCSS != \"\") ? \" \" + this.barCSS : \"\";\n\n    let actualStyle = {\n        width: `${this.progress}%`\n    };\n\n    return (\n\n      (this.tooltipText != \"\" && this.tooltipPosition == \"below\") ?\n\n        <yeti-tooltip \n          text={this.tooltipText} \n          position={this.tooltipPosition}\n          id={tooltipId}\n          blockAnchor={true}>\n            \n            {this.renderProgressBar(wrapperCSS, labelCSS, barCSS, actualStyle)}\n            \n        </yeti-tooltip>\n      \n      :\n        \n        this.renderProgressBar(wrapperCSS, labelCSS, barCSS, actualStyle)\n\n    );\n  }\n\n}"],"mappings":"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"}